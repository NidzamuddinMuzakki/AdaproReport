{"version":3,"sources":["components/TableMenu/index.js","views/Adapro/Credential/Menu/index.js","components/tabkomponen/tabs.js","components/popupAll/index.js"],"names":["descendingComparator","a","b","orderBy","EnhancedTableHead","props","classes","onSelectAllClick","order","numSelected","rowCount","onRequestSort","react_default","createElement","TableHead","TableRow","TableCell","padding","Checkbox","color","indeterminateIcon","RemoveCircle_default","icon","RadioButtonUnchecked_default","checkedIcon","CheckCircle_default","indeterminate","checked","onChange","inputProps","aria-label","id","numeric","disablePadding","label","map","headCell","key","sortDirection","useToolbarStyles","makeStyles","theme","root","paddingLeft","spacing","paddingRight","highlight","palette","type","backgroundColor","text","primary","secondary","dark","title","flex","EnhancedTableToolbar","Toolbar","className","clsx","Object","defineProperty","Typography","variant","component","name","useStyles","width","paper","marginBottom","table","minWidth","tableRow","&$selected,&$hover:hover","hover","selected","visuallyHidden","border","clip","height","margin","overflow","position","top","EnhancedTable","dispatch","useSelector","state","userSettingSelected","useDispatch","_React$useState","React","useState","_React$useState2","slicedToArray","hiding","setHiding","_React$useState3","_React$useState4","setOrder","_React$useState5","_React$useState6","setOrderBy","_React$useState7","_React$useState8","setSelected","_React$useState9","_React$useState10","page","setPage","_React$useState11","_React$useState12","dense","setDense","_React$useState13","_React$useState14","rowsPerPage","setRowsPerPage","no","menuDesc","menuUrl","crtDate","updDate","rows","dataUser","data","i","length","menu_id","menu_desc","menu_url","created_time","updated_time","kirimuserselected","jumlah","payload","selectedUser","selectedId","handleLeave","e","target","nodeName","parentNode","style","display","children","handleEnter","useEffect","Math","min","Paper","TableMenu_EnhancedTableToolbar","TableContainer","Table","aria-labelledby","size","event","newSelecteds","n","property","TableBody","array","comparator","stabilizedThis","el","index","sort","stableSort","getComparator","slice","row","isItemSelected","indexOf","labelId","concat","cursor","onMouseEnter","onMouseLeave","onClick","selectedIndex","newSelected","handleClick","role","aria-checked","tabIndex","TablePagination","rowsPerPageOptions","count","onChangePage","newPage","onChangeRowsPerPage","parseInt","value","FormControlLabel","control","Switch","Depart","memo","token","localStorage","getItem","_useState","_useState2","dataMenuAll","setDataMenuAll","_useState3","_useState4","open","setOpen","_useState5","_useState6","actionForm","setActionForm","_useState7","_useState8","jumlahdata","setJumlahData","dataSelected","popupDepart","popupMenu","isOpen","rowperpageGroup","rowperpageMenu","kirimisOpenDepart","kirimSelected","rowAdd","useCallback","rowEdit","alert","rowDelete","fetches","hasil","_loop","push","API","post","then","catch","err","Promise","all","getMenuAll","halaman","info_data","per_page","count_data","Button","groupName","popupAll","__webpack_require__","_material_ui_icons_CheckBoxOutlineBlank__WEBPACK_IMPORTED_MODULE_12___default","_material_ui_icons_CheckBox__WEBPACK_IMPORTED_MODULE_13___default","back","background","popup","&:hover","boxShadow","DialogTitle","withStyles","closeButton","right","grey","onClose","other","C_ui01_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectWithoutProperties__WEBPACK_IMPORTED_MODULE_4__","react__WEBPACK_IMPORTED_MODULE_5___default","_material_ui_core_DialogTitle__WEBPACK_IMPORTED_MODULE_18__","assign","disableTypography","_material_ui_core_Typography__WEBPACK_IMPORTED_MODULE_24__","_material_ui_core_IconButton__WEBPACK_IMPORTED_MODULE_21__","_material_ui_icons_Close__WEBPACK_IMPORTED_MODULE_23___default","DialogContent","MuiDialogContent","DialogActions","MuiDialogActions","CustomizedDialogs","C_ui01_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_3__","Date","prototype","toDateInputValue","local","this","setMinutes","getMinutes","getTimezoneOffset","toJSON","dataMenuRedux","menupilihan","menu","dataGroup","setDataGroup","dept_name","dept_id","role_name","role_id","group_name","group_id","branch_id","branch_name","report_id","module_id","C_ui01_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_2__","dataChange","setDataChange","popupGroup","getDepartDetail","uaja","getBranchDetail","console","log","dataMenuAction","getGroupDetail","getMenuDetail","getRoleDetail","menubaru","_step","_iterator","C_ui01_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_createForOfIteratorHelper__WEBPACK_IMPORTED_MODULE_1__","Menu","s","done","uuu","Name","_step2","_iterator2","f","getGroup","kirimisOpen","convert","handleChange","C_ui01_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_objectSpread2__WEBPACK_IMPORTED_MODULE_0__","resetForm","_setDataChange","handleClose","_material_ui_core_Dialog__WEBPACK_IMPORTED_MODULE_10__","fullWidth","maxWidth","_material_ui_core_Paper__WEBPACK_IMPORTED_MODULE_11__","justifyContent","alignItems","_material_ui_icons_Person__WEBPACK_IMPORTED_MODULE_28___default","marginLeft","lineHeight","fontFamily","_material_ui_core_Grid__WEBPACK_IMPORTED_MODULE_9__","container","item","xs","_material_ui_core_TextField__WEBPACK_IMPORTED_MODULE_16__","marginTop","_material_ui_lab_Autocomplete__WEBPACK_IMPORTED_MODULE_17__","options","find","v","getOptionLabel","option","renderInput","params","sm","md","_material_ui_core_InputLabel__WEBPACK_IMPORTED_MODULE_15__","styles","direction","textAlign","_material_ui_core_Switch__WEBPACK_IMPORTED_MODULE_14__","View","Create","Update","Delete","_material_ui_core_Button__WEBPACK_IMPORTED_MODULE_8__","autoFocus"],"mappings":"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","file":"static/js/29.c7f83655.chunk.js","sourcesContent":["import React, { useEffect } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport clsx from 'clsx';\r\nimport { lighten, makeStyles } from '@material-ui/core/styles';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TablePagination from '@material-ui/core/TablePagination';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport TableSortLabel from '@material-ui/core/TableSortLabel';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Switch from '@material-ui/core/Switch';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport FilterListIcon from '@material-ui/icons/FilterList';\r\nimport set from 'core-js/es6/set';\r\nimport {useSelector,useDispatch} from 'react-redux';\r\nimport Tabs from  '../tabkomponen/tabs.js';\r\nimport CheckCircleIcon from '@material-ui/icons/CheckCircle';\r\nimport RadioButtonUncheckedIcon from '@material-ui/icons/RadioButtonUnchecked';\r\nimport RemoveCircleIcon from '@material-ui/icons/RemoveCircle';\r\n\r\n\r\n\r\n\r\nfunction descendingComparator(a, b, orderBy) {\r\n  if (b[orderBy] < a[orderBy]) {\r\n    return -1;\r\n  }\r\n  if (b[orderBy] > a[orderBy]) {\r\n    return 1;\r\n  }\r\n  return 0;\r\n}\r\n\r\nfunction getComparator(order, orderBy) {\r\n  return order === 'desc'\r\n    ? (a, b) => descendingComparator(a, b, orderBy)\r\n    : (a, b) => -descendingComparator(a, b, orderBy);\r\n}\r\n\r\nfunction stableSort(array, comparator) {\r\n  const stabilizedThis = array.map((el, index) => [el, index]);\r\n  stabilizedThis.sort((a, b) => {\r\n    const order = comparator(a[0], b[0]);\r\n    if (order !== 0) return order;\r\n    return a[1] - b[1];\r\n  });\r\n  return stabilizedThis.map((el) => el[0]);\r\n}\r\n\r\n\r\nfunction EnhancedTableHead(props) {\r\n  const { classes, onSelectAllClick, order, orderBy, numSelected, rowCount, onRequestSort } = props;\r\n  const createSortHandler = (property) => (event) => {\r\n    onRequestSort(event, property);\r\n  };\r\n\r\n  // console.log(\"hay\"+props.data)\r\n  const headCells = [\r\n    { id: 'no', numeric: true, disablePadding: true, label: 'No' },\r\n    { id: 'menu_id', numeric: false, disablePadding: false, label: 'Menu ID' },\r\n    { id: 'description', numeric: false, disablePadding: false, label: 'Description' },\r\n    { id: 'url', numeric: false, disablePadding: false, label: 'URL' },\r\n    { id: 'created_time', numeric: false, disablePadding: false, label: 'Created Time' },\r\n    { id: 'updated_time', numeric: false, disablePadding: false, label: 'Updated Time' },\r\n \r\n\r\n\r\n  ];\r\n  \r\n  return (\r\n  \r\n    <TableHead>\r\n      <TableRow>\r\n        <TableCell padding=\"checkbox\">\r\n          <Checkbox\r\n           color = \"primary\"\r\n           indeterminateIcon={<RemoveCircleIcon/>}\r\n           icon={<RadioButtonUncheckedIcon></RadioButtonUncheckedIcon>}\r\n           checkedIcon={<CheckCircleIcon></CheckCircleIcon>}\r\n            indeterminate={numSelected > 0 && numSelected < rowCount}\r\n            checked={rowCount > 0 && numSelected === rowCount}\r\n            onChange={onSelectAllClick}\r\n            inputProps={{ 'aria-label': 'select all desserts' }}\r\n          />\r\n        </TableCell>\r\n        {headCells.map((headCell) => (\r\n          <TableCell\r\n            key={headCell.id}\r\n           \r\n            padding={'default'}\r\n            sortDirection={orderBy === headCell.id ? order : false}\r\n          >\r\n           \r\n              {headCell.label}\r\n             \r\n           \r\n          </TableCell>\r\n        ))}\r\n      </TableRow>\r\n    </TableHead>\r\n  );\r\n}\r\n\r\nEnhancedTableHead.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n  numSelected: PropTypes.number.isRequired,\r\n  onRequestSort: PropTypes.func.isRequired,\r\n  onSelectAllClick: PropTypes.func.isRequired,\r\n  order: PropTypes.oneOf(['asc', 'desc']).isRequired,\r\n  orderBy: PropTypes.string.isRequired,\r\n  rowCount: PropTypes.number.isRequired,\r\n};\r\n\r\nconst useToolbarStyles = makeStyles((theme) => ({\r\n  root: {\r\n    paddingLeft: theme.spacing(2),\r\n    paddingRight: theme.spacing(1),\r\n  },\r\n  highlight:\r\n    theme.palette.type === 'light'\r\n      ? {\r\n        color: \"#0078d4\",\r\n        backgroundColor: \"#c7e0f4\",\r\n        }\r\n      : {\r\n          color: theme.palette.text.primary,\r\n          backgroundColor: theme.palette.secondary.dark,\r\n        },\r\n  title: {\r\n    flex: '1 1 100%',\r\n  },\r\n}));\r\n\r\nconst EnhancedTableToolbar = (props) => {\r\n  const classes = useToolbarStyles();\r\n  const { numSelected } = props;\r\n\r\n  return (\r\n    <Toolbar\r\n      className={clsx(classes.root, {\r\n        [classes.highlight]: numSelected > 0,\r\n      })}\r\n    >\r\n      {numSelected > 0 ? (\r\n        <Typography className={classes.title} color=\"inherit\" variant=\"subtitle1\" component=\"div\">\r\n          {numSelected} selected\r\n        </Typography>\r\n      ) : (\r\n        <Typography className={classes.title} variant=\"h6\" id=\"tableTitle\" component=\"div\">\r\n          {props.name}\r\n        </Typography>\r\n      )}\r\n\r\n      {/* {numSelected > 0 ? (\r\n        <Tooltip title=\"Delete\">\r\n          <IconButton aria-label=\"delete\">\r\n            <DeleteIcon />\r\n          </IconButton>\r\n        </Tooltip>\r\n      ) : (\r\n        <Tooltip title=\"Filter list\">\r\n          <IconButton aria-label=\"filter list\">\r\n            <FilterListIcon />\r\n          </IconButton>\r\n        </Tooltip>\r\n      )} */}\r\n    </Toolbar>\r\n  );\r\n};\r\n\r\nEnhancedTableToolbar.propTypes = {\r\n  numSelected: PropTypes.number.isRequired,\r\n};\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    width: '100%',\r\n  },\r\n  paper: {\r\n    width: '100%',\r\n    marginBottom: theme.spacing(2),\r\n  },\r\n  table: {\r\n    minWidth: 750,\r\n  },\r\n  tableRow: {\r\n    \r\n    \"&$selected,&$hover:hover\": {\r\n      backgroundColor: \"#c7e0f4\"\r\n    },\r\n    \r\n  },\r\n  // tableCell: {\r\n  //   \"$hover:hover &\": {\r\n  //     color: \"pink\"\r\n  //   }\r\n  \r\n  hover: {},\r\n  selected: {},\r\n  visuallyHidden: {\r\n    border: 0,\r\n    clip: 'rect(0 0 0 0)',\r\n    height: 1,\r\n    margin: -1,\r\n    overflow: 'hidden',\r\n    padding: 0,\r\n    position: 'absolute',\r\n    top: 20,\r\n    width: 1,\r\n  },\r\n}));\r\n\r\nexport default function EnhancedTable(props) {\r\n  const classes = useStyles();\r\n  const selectedusersetting = useSelector(state =>state.userSettingSelected);\r\n  const dispatch = useDispatch();\r\n  const [hiding, setHiding] = React.useState(\"none\");\r\n  const [order, setOrder] = React.useState('asc');\r\n  const [orderBy, setOrderBy] = React.useState('calories');\r\n  const [selected, setSelected] = React.useState([]);\r\n  const [page, setPage] = React.useState(0);\r\n  const [dense, setDense] = React.useState(false);\r\n  const [rowsPerPage, setRowsPerPage] = React.useState(5);\r\n  let deptName = [];\r\n  \r\n  function createData(id,no,menuDesc,menuUrl, crtDate, updDate) {\r\n    return { id,no,menuDesc,menuUrl,crtDate, updDate };\r\n  }\r\n  const rows = [];\r\n  \r\n  let dataUser = props.data;\r\n// console.log(props.deptName[0])\r\n  for(let i=0;i<dataUser.length;i++){\r\n    rows[i] = createData(dataUser[i].menu_id,(i+1),dataUser[i].menu_desc,dataUser[i].menu_url ,dataUser[i].created_time, dataUser[i].updated_time);\r\n    \r\n  }\r\n\r\n  \r\n  \r\n\r\n\r\n  const kirimuserselected = (jumlah, data)=>{\r\n    return{\r\n      type:\"SELECTEDUSER\",\r\n      payload:{\r\n        selectedUser: jumlah,\r\n        selectedId:data\r\n      }\r\n    }\r\n  }\r\n  let handleLeave = (e)=>{\r\n    \r\n    if(e.target.nodeName==\"INPUT\"){\r\n      e.target.parentNode.parentNode.style.display=\"none\";\r\n    }\r\n    else if(e.target.parentNode==null){\r\n\r\n    }else if(e.target.parentNode.children[0]==null){\r\n\r\n    }else if(e.target.parentNode.children[0].children[0]==null){\r\n\r\n    }\r\n    else{\r\n      e.target.parentNode.children[0].children[0].style.display=\"none\";\r\n    }\r\n  }\r\n  let handleEnter = (e)=>{\r\n    if(e.target.parentNode==null){\r\n\r\n    }else if(e.target.parentNode.children[0]==null){\r\n\r\n    }else if(e.target.parentNode.children[0].children[0]==null){\r\n\r\n    }else{\r\n      e.target.parentNode.children[0].children[0].style.display=\"block\";\r\n    }\r\n  }\r\n  const handleRequestSort = (event, property) => {\r\n    const isAsc = orderBy === property && order === 'asc';\r\n    setOrder(isAsc ? 'desc' : 'asc');\r\n    setOrderBy(property);\r\n  };\r\n\r\n  const handleSelectAllClick = (event) => {\r\n    if(selected.length>0){\r\n      dispatch(kirimuserselected(0,[]))\r\n      setSelected([]);\r\n    }\r\n    else if (event.target.checked) {\r\n      const newSelecteds = rows.map((n) => n.id);\r\n      let jumlah = newSelecteds.length;\r\n      \r\n   \r\n      dispatch(kirimuserselected(jumlah,newSelecteds))\r\n      setSelected(newSelecteds);\r\n      return;\r\n    }\r\n    dispatch(kirimuserselected(0,[]))\r\n    setSelected([]);\r\n  };\r\n  useEffect(()=>{\r\n    if(selected.length>0){\r\n      setHiding(\"block\");\r\n     \r\n\r\n        \r\n      \r\n    }else{\r\n      setHiding(\"none\")\r\n    }\r\n   \r\n  },[selected])\r\n  useEffect(()=>{\r\n    setSelected([]);\r\n  }, [props.data])\r\n  const handleClick = (event, name) => {\r\n    const selectedIndex = selected.indexOf(name);\r\n    \r\n    \r\n    let newSelected = [];\r\n\r\n    if (selectedIndex === -1) {\r\n      newSelected = newSelected.concat(selected, name);\r\n    } else if (selectedIndex === 0) {\r\n      newSelected = newSelected.concat(selected.slice(1));\r\n    } else if (selectedIndex === selected.length - 1) {\r\n      newSelected = newSelected.concat(selected.slice(0, -1));\r\n    } else if (selectedIndex > 0) {\r\n      newSelected = newSelected.concat(\r\n        selected.slice(0, selectedIndex),\r\n        selected.slice(selectedIndex + 1),\r\n      );\r\n    }\r\n    let jumlah = newSelected.length;\r\n\r\n   \r\n    dispatch(kirimuserselected(jumlah,newSelected))\r\n    setSelected(newSelected);\r\n  };\r\n\r\n  const handleChangePage = (event, newPage) => {\r\n    setPage(newPage);\r\n  };\r\n\r\n  const handleChangeRowsPerPage = (event) => {\r\n    setRowsPerPage(parseInt(event.target.value, 10));\r\n    setPage(0);\r\n  };\r\n\r\n  const handleChangeDense = (event) => {\r\n    setDense(event.target.checked);\r\n  };\r\n\r\n  const isSelected = (name) => selected.indexOf(name) !== -1;\r\n\r\n  const emptyRows = rowsPerPage - Math.min(rowsPerPage, rows.length - page * rowsPerPage);\r\n  // console.log(rows)\r\n  return (\r\n    <div className={classes.root}>\r\n      <Paper className={classes.paper}>\r\n      {/* <Tabs>\r\n        <div label=\"Gator\">\r\n          See ya later, <em>Alligator</em>!\r\n        </div>\r\n        <div label=\"Croc\">\r\n          After 'while, <em>Crocodile</em>!\r\n        </div>\r\n        <div label=\"Sarcosuchus\">\r\n          Nothing to see here, this tab is <em>extinct</em>!\r\n        </div>\r\n      </Tabs> */}\r\n        <EnhancedTableToolbar numSelected={selected.length} />\r\n        <TableContainer>\r\n          <Table\r\n            className={classes.table}\r\n            aria-labelledby=\"tableTitle\"\r\n            size={dense ? 'small' : 'medium'}\r\n            aria-label=\"enhanced table\"\r\n          >\r\n            <EnhancedTableHead\r\n              classes={classes}\r\n              numSelected={selected.length}\r\n              order={order}\r\n              orderBy={orderBy}\r\n              onSelectAllClick={handleSelectAllClick}\r\n              onRequestSort={handleRequestSort}\r\n              rowCount={rows.length}\r\n              \r\n            />\r\n            <TableBody>\r\n              {stableSort(rows, getComparator(order, orderBy))\r\n                .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage)\r\n                .map((row, index) => {\r\n                  \r\n                  const isItemSelected = isSelected(row.id);\r\n                  const labelId = `enhanced-table-checkbox-${row.id}`;\r\n                  \r\n                  return (\r\n                    <TableRow\r\n                      id=\"rowcheck\"\r\n                      hover\r\n                      className={classes.tableRow}\r\n                      classes={{ hover: classes.hover, selected:classes.selected }}\r\n                      style={{cursor:\"pointer\"}}\r\n                      onMouseEnter={selected.length==0?handleEnter:null}\r\n                      onMouseLeave={selected.length==0?handleLeave:null}\r\n                      onClick={(event) => handleClick(event, row.id)}\r\n                      role=\"checkbox\"\r\n                      aria-checked={isItemSelected}\r\n                      tabIndex={1}\r\n                      key={row.id}\r\n                      selected={isItemSelected}\r\n                    >\r\n                      <TableCell  padding=\"checkbox\">\r\n                        <Checkbox style={{display:hiding}}\r\n                          checked={isItemSelected}\r\n                          icon={<RadioButtonUncheckedIcon></RadioButtonUncheckedIcon>}\r\n                          checkedIcon={<CheckCircleIcon></CheckCircleIcon>}\r\n                          color = \"primary\"\r\n                          inputProps={{ 'aria-labelledby': labelId }}\r\n                        />\r\n                      </TableCell>\r\n                      <TableCell >\r\n                        {row.no}\r\n                      </TableCell>\r\n                      <TableCell  >\r\n                        {row.id}\r\n                      </TableCell>\r\n                      <TableCell  >{row.menuDesc}</TableCell>\r\n                      <TableCell  >{row.menuUrl}</TableCell>\r\n                      <TableCell  >{row.crtDate}</TableCell>\r\n                      <TableCell  >{row.updDate}</TableCell>\r\n                      \r\n                      \r\n                      \r\n                    </TableRow>\r\n                  );\r\n                })}\r\n            \r\n            </TableBody>\r\n          </Table>\r\n        </TableContainer>\r\n        <TablePagination\r\n          rowsPerPageOptions={[5, 10, 25]}\r\n          component=\"div\"\r\n          count={rows.length}\r\n          rowsPerPage={rowsPerPage}\r\n          page={page}\r\n          onChangePage={handleChangePage}\r\n          onChangeRowsPerPage={handleChangeRowsPerPage}\r\n        />\r\n      </Paper>\r\n      <FormControlLabel\r\n        control={<Switch checked={dense} onChange={handleChangeDense} />}\r\n        label=\"Dense padding\"\r\n      />\r\n    </div>\r\n  );\r\n}","import React,{useState, useEffect} from 'react';\r\nimport API from 'api';\r\nimport {Paper} from '@material-ui/core'\r\nimport Table from './../../../../components/TableMenu'\r\nimport {useSelector, useDispatch} from 'react-redux'\r\nimport { Button} from 'reactstrap'\r\nimport { AlternateEmail } from '@material-ui/icons';\r\nimport Dialog from './../../../../components/popupAll'\r\n   \r\n\r\nconst Depart = React.memo(() =>{\r\n    let token = localStorage.getItem('id_token');\r\n    const [dataMenuAll, setDataMenuAll] = useState([]);\r\n    const [open, setOpen] = useState(false);\r\n    const [actionForm, setActionForm] = useState('');\r\n    const [jumlahdata, setJumlahData] = useState(0);\r\n    const dataSelected = useSelector(state=>state.userSettingSelected);\r\n    const popupDepart = useSelector(state=>state.popupMenu.isOpen);\r\n    const rowperpageGroup = useSelector(state=>state.rowperpageMenu);\r\n    const dispatch = useDispatch();\r\n    const kirimisOpenDepart = (isOpen) => {\r\n        return {\r\n          type: \"OPENMENU\",\r\n          payload: {\r\n            isOpen: isOpen,\r\n          }\r\n        }\r\n      }\r\n     \r\n      const kirimSelected = (jumlah, data) => {\r\n        return {\r\n          type: \"SELECTEDUSER\",\r\n          payload: {\r\n            selectedUser: jumlah,\r\n            selectedId:data\r\n          }\r\n        }\r\n      }  \r\n      useEffect(()=>{\r\n        dispatch(kirimSelected(0,[]))\r\n      }, [])\r\n    const rowAdd =  React.useCallback(()=>{\r\n        dispatch(kirimisOpenDepart(true))\r\n        setOpen(true);\r\n        setActionForm(\"Add Menu\")\r\n    },[dataSelected])\r\n    const rowEdit = React.useCallback(()=>{\r\n        if(dataSelected.selectedUser==0){\r\n            alert(\"no item selected\")\r\n        }else{\r\n            dispatch(kirimisOpenDepart(true))\r\n            setOpen(true);\r\n            setActionForm(\"Edit Menu\")\r\n\r\n        }\r\n    },[dataSelected])\r\n    const rowDelete = React.useCallback(()=>{\r\n        if(dataSelected.selectedUser==0){\r\n            alert(\"no item selected\")\r\n        }else{\r\n            let hasil = \"\";\r\n            var fetches = [];\r\n            for(let i=0;i<dataSelected.selectedId.length;i++){\r\n                let token = localStorage.getItem('id_token');\r\n             \r\n                fetches.push(API.post(\"/credential_service/delete_menu\",{\r\n                  key: token,\r\n                  menu_id: dataSelected.selectedId[i]\r\n                }).then(data => {\r\n                hasil = hasil +\"Menu ID \"+dataSelected.selectedId[i]+\" \"+data.data.data+\"\\n\";\r\n             \r\n               \r\n              }).catch(err=>{\r\n                  alert(err)\r\n              })\r\n                )}\r\n\r\n            Promise.all(fetches).then(()=>{\r\n                alert(hasil);\r\n                getMenuAll();\r\n                dispatch(kirimSelected(0,[]));\r\n            })    \r\n        }\r\n\r\n    },[dataSelected])\r\n    const getMenuAll = React.useCallback((jumlah, halaman)=>{\r\n        API.post(\"/credential_service/get_menu\",{\r\n            key: token,\r\n            info_data:'all',\r\n            per_page:jumlah,\r\n            page:halaman\r\n        }).then(data => {\r\n            setDataMenuAll(data.data.data);\r\n            setJumlahData(data.data.count_data);\r\n           \r\n           \r\n          \r\n            \r\n          \r\n        })\r\n    },[setDataMenuAll])\r\n    useEffect(()=>{\r\n        getMenuAll(rowperpageGroup.jumlah, rowperpageGroup.halaman);\r\n        setOpen(popupDepart)\r\n       \r\n    },[popupDepart,rowperpageGroup.jumlah, rowperpageGroup.halaman])\r\n    return(\r\n    <div>\r\n        <Button  id=\"btnRowAdd\" className=\"btn-pill btn-outline-dark btn-m\" onClick={rowAdd}>&nbsp;&nbsp;<i className=\"fa fa-plus-square\"></i>&nbsp;<span>Add&nbsp;&nbsp;</span></Button>\r\n        {dataSelected.selectedUser>0?<Button  id=\"btnRowDelete\" className=\"btn-pill btn-outline-danger btn-m\" onClick={rowDelete}><i className=\"fa fa-window-close\"></i>&nbsp;<span>Delete</span></Button>:''}\r\n        {dataSelected.selectedUser==1?<Button color=\"warning\" id=\"btnTableEdit\" className=\"btn-pill btn-m\" onClick={rowEdit}>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<i className=\"fa fa-edit\"></i>&nbsp;<span>Edit&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></Button> : null}\r\n\r\n        \r\n        <Table data={dataMenuAll} jumlahdata={jumlahdata} groupName={\"\"}></Table>\r\n        <Dialog open={open} actionForm={actionForm}></Dialog>\r\n\r\n\r\n    </div>    \r\n    );\r\n})\r\n\r\nexport default Depart;","import { Tab, Tabs, TabList, TabPanel } from 'react-tabs';\r\nimport 'react-tabs/style/react-tabs.css';\r\nimport React from 'react';\r\n\r\nimport ClearIcon from '@material-ui/icons/Clear';\r\nexport default () => (\r\n  <Tabs>\r\n    <TabList>\r\n      <Tab>Add 1 <ClearIcon></ClearIcon> </Tab>\r\n      <Tab>Edit 2  <ClearIcon></ClearIcon></Tab>\r\n    </TabList>\r\n\r\n    <TabPanel>\r\n      <h2>Any content 1</h2>\r\n    </TabPanel>\r\n    <TabPanel>\r\n      <h2>Any content 2</h2>\r\n    </TabPanel>\r\n  </Tabs>\r\n);","import React from 'react';\r\nimport { withStyles, useStyle, makeStyles } from '@material-ui/core/styles';\r\nimport Button from '@material-ui/core/Button';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport Paper from '@material-ui/core/Paper';\r\n\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\n\r\nimport CheckBoxOutlineBlankIcon from '@material-ui/icons/CheckBoxOutlineBlank';\r\nimport CheckBoxIcon from '@material-ui/icons/CheckBox';\r\nimport Switch from '@material-ui/core/Switch';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Autocomplete from '@material-ui/lab/Autocomplete';\r\nimport MuiDialogTitle from '@material-ui/core/DialogTitle';\r\nimport MuiDialogContent from '@material-ui/core/DialogContent';\r\nimport MuiDialogActions from '@material-ui/core/DialogActions';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport API from './../../api/api';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { useEffect } from 'react';\r\nimport set from 'core-js/es6/set';\r\nimport DatePicker from './../datepicker/index';\r\nimport { connect } from 'react-redux';\r\nimport PersonIcon from '@material-ui/icons/Person';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { popupDepart } from '../../reducers/PopAll';\r\n\r\n\r\nconst icon = <CheckBoxOutlineBlankIcon fontSize=\"small\" />;\r\nconst checkedIcon = <CheckBoxIcon fontSize=\"small\" />;\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n   \r\n  },\r\n  back:{\r\n    background:\"#ebeff1\"\r\n  },\r\n  paper: {\r\n    height: 140,\r\n    width: 100,\r\n  },\r\n  control: {\r\n    padding: theme.spacing(2),\r\n  },\r\n  popup:{\r\n    \"&:hover\":{\r\n      boxShadow: \"rgba(0, 0, 0, 0.16) 0px 3px 6px, rgba(0, 0, 0, 0.23) 0px 3px 6px\"\r\n    }\r\n  }\r\n}));\r\nconst styles = (theme) => ({\r\n  root: {\r\n    margin: 0,\r\n\r\n  },\r\n  closeButton: {\r\n    position: 'absolute',\r\n    right: theme.spacing(1),\r\n    top: theme.spacing(1),\r\n    color: theme.palette.grey[500],\r\n  },\r\n});\r\n\r\nconst DialogTitle = withStyles(styles)((props) => {\r\n  const { children, classes, onClose, ...other } = props;\r\n\r\n  return (\r\n    <MuiDialogTitle disableTypography className={classes.root} {...other}>\r\n      <Typography variant=\"h6\">{children}</Typography>\r\n      {onClose ? (\r\n        <IconButton aria-label=\"close\" className={classes.closeButton} onClick={onClose}>\r\n          <CloseIcon />\r\n        </IconButton>\r\n      ) : null}\r\n    </MuiDialogTitle>\r\n  );\r\n});\r\n\r\nconst DialogContent = withStyles((theme) => ({\r\n  root: {\r\n    padding: theme.spacing(2),\r\n  },\r\n}))(MuiDialogContent);\r\n\r\nconst DialogActions = withStyles((theme) => ({\r\n  root: {\r\n    margin: 0,\r\n    padding: theme.spacing(1),\r\n  },\r\n}))(MuiDialogActions);\r\n\r\nexport default function CustomizedDialogs(props) {\r\n  const classes = useStyles();\r\n  \r\n  const [open, setOpen] = React.useState(false);\r\n  const [label, setLabel] = React.useState([]);\r\n//   console.log(open)\r\n  Date.prototype.toDateInputValue = (function () {\r\n    var local = new Date(this);\r\n    local.setMinutes(this.getMinutes() - this.getTimezoneOffset());\r\n    return local.toJSON().slice(0, 10);\r\n  });\r\n  \r\n\r\n  const selectedusersetting = useSelector(state => state.userSettingSelected);\r\n  const dataMenuRedux = useSelector(state=>state.menupilihan.menu);\r\n  // const [username, setUsername] = React.useState(\"\");\r\n  // const [password, setPassword] = React.useState(\"\");\r\n  // const [name, setName] = React.useState(\"\");\r\n  // const [userid, setUserId] = React.useState(\"\");\r\n  const [ambildataMenu, setAmbildataMenu] = React.useState([]);\r\n  const [dataGroup, setDataGroup] = React.useState([]);\r\n\r\n  // const [nik, setNik] = React.useState(\"\");\r\n  // const [depart, setDepart] = React.useState(0);\r\n  // const [role, setRole] = React.useState(0);\r\n  // const [periode, setPeriode] = React.useState(0);\r\n  // const [branch, setBranch] = React.useState(0);\r\n  // const [expired, setExpired] = React.useState(\"\");\r\n  // const [status, setStatus] = React.useState(\"\");\r\n  const [dataChange, setDataChange] = React.useState({\r\n   dept_name:'',\r\n   dept_id:'',\r\n   role_name:'',\r\n   role_id:'',\r\n   group_name:'',\r\n   group_id:'',\r\n   branch_id:'',\r\n   branch_name:'',\r\n   menu_id:'',\r\n   report_id:'',\r\n   module_id:'',\r\n   menu_url:'',\r\n   menu_id:'',\r\n   menu_desc:'',\r\n   \r\n   menu:dataMenuRedux,\r\n  })\r\n  \r\n \r\n  let actionForm = props.actionForm;\r\n \r\n \r\n  const isOpenDepart = useSelector(state=>state.popupDepart.isOpen)\r\n  const isOpenGroup = useSelector(state=>state.popupGroup.isOpen)\r\n  \r\n  const selected = useSelector(state => state.userSettingSelected);\r\n  \r\n  const getDepartDetail = React.useCallback((id) => {  //on startup function\r\n    let token = localStorage.getItem('id_token');\r\n\r\n    API.post(\"get_department\", {\r\n      key: token,\r\n      dept_id: id ,\r\n      info_data: \"detail\"\r\n    }).then(data => {\r\n      let uaja = data.data.data;\r\n      \r\n      setDataChange({\r\n            dept_name:uaja[\"Department Name\"],\r\n            dept_id:id,\r\n            group_id:uaja[\"Group Name\"].length?uaja[\"Group Name\"][0][\"group_id\"]:''\r\n        }) \r\n    })\r\n    \r\n    },[setDataChange]  ) \r\n    const getBranchDetail = React.useCallback((id) => {  //on startup function\r\n        let token = localStorage.getItem('id_token');\r\n    \r\n        // API.post(\"get_branch\", {\r\n        //   key: token,\r\n        //   branch_id: id,\r\n        //   info_data: \"detail\"\r\n        // }).then(data => {\r\n        //   let uaja = data.data.data;\r\n          \r\n        //   setDataChange({\r\n        //         branch_name:data.data.data.branch_name,\r\n        //         branch_id:data.data.data.branch_id,\r\n                \r\n        //     }) \r\n        // })\r\n        \r\n    },[setDataChange])\r\nuseEffect(()=>{\r\n  console.log(dataChange.menu)\r\n  console.log(props.dataMenuAction)\r\n \r\n  \r\n},[dataMenuRedux])\r\nconst getGroupDetail = React.useCallback((id) => {  //on startup function\r\n    let token = localStorage.getItem('id_token');\r\n\r\n    API.post(\"get_group\", {\r\n      key: token,\r\n      group_id: id,\r\n      info_data: \"detail\"\r\n    }).then(data => {\r\n      let uaja = data.data.data;\r\n    \r\n      console.log(uaja[\"Group Name\"])\r\n      setDataChange({\r\n            group_name:uaja[\"Group Name\"],\r\n            group_id:uaja[\"Group Id\"]\r\n        }) \r\n    })\r\n    \r\n},[setDataChange])\r\n\r\nconst getMenuDetail = React.useCallback((id) => {  //on startup function\r\n  let token = localStorage.getItem('id_token');\r\n\r\n  // API.post(\"get_menu\", {\r\n  //   key: token,\r\n  //   menu_id: id,\r\n  //   info_data: \"detail\"\r\n  // }).then(data => {\r\n  //   let uaja = data.data.data;\r\n    \r\n  //   setDataChange({\r\n  //         menu_url:data.data.data.menu_url,\r\n  //         menu_id:data.data.data.menu_id,\r\n  //         menu_desc:data.data.data.menu_desc\r\n  //     }) \r\n  // })\r\n  \r\n},[setDataChange])\r\nconst getRoleDetail = React.useCallback((id) => {  //on startup function\r\n  let token = localStorage.getItem('id_token');\r\n \r\n  API.post(\"get_role\", {\r\n    key: token,\r\n    role_id: id,\r\n    info_data: \"detail\"\r\n  }).then(data => {\r\n    let uaja = data.data.data;\r\n    let menubaru = [];\r\n    console.log(data.data.data)\r\n    let i = 0;\r\n    for(const uuu of data.data.data.Menu){\r\n      console.log(dataChange.menu[i])\r\n      console.log(uuu.Name)\r\n      for(const dataMenu of dataChange.menu){\r\n        if(dataMenu.Name==uuu.Name){\r\n          menubaru.push(uuu)\r\n        }\r\n      }\r\n    }\r\n    if(menubaru.length==0){\r\n      menubaru = dataChange.menu;\r\n    }\r\n    setDataChange({\r\n          role_name:data.data.data[\"Role Name\"],\r\n          role_id:id,\r\n          menu:menubaru\r\n      }) \r\n  })\r\n  \r\n},[setDataChange])\r\n\r\n\r\n\r\n\r\n    \r\n      // setUserId(data.data.data.user_id)\r\n      // setUsername(data.data.data.username)\r\n      // setPassword(data.data.data.password)\r\n      // setName(data.data.data.name)\r\n      // setNik(data.data.data.nik)\r\n      // setPeriode(data.data.data.periode_usage)\r\n      // setStatus(data.data.data.status_date)\r\n      // setExpired(data.data.data.expired_date)\r\n      // setBranch(data.data.data.branch_id)\r\n      // setRole(data.data.data.role_id)\r\n      // setDepart(data.data.data.dept_id)\r\n      // setGroup(data.data.data.group_id)\r\n      // this.setState({\r\n      //   dataSet: data.data.data\r\n      // });\r\n\r\n\r\nconst getGroup = React.useCallback(() => {  //on startup function\r\n    let token = localStorage.getItem('id_token');\r\n\r\n    API.post(\"get_group\", {\r\n      key: token,\r\n      info_data: \"all\"\r\n    }).then(data => {\r\n      let uaja = data.data.data;\r\n      setDataGroup(data.data.data)\r\n    })\r\n},[setDataGroup])\r\n  const kirimuserselected = (jumlah, data) => {\r\n    return {\r\n      type: \"SELECTEDUSER\",\r\n      payload: {\r\n        selectedUser: jumlah,\r\n        selectedId: data\r\n      }\r\n    }\r\n  }\r\n\r\n\r\n\r\n\r\n\r\n  \r\n\r\n\r\n  \r\n\r\n\r\n\r\n\r\n \r\n\r\n  \r\n  const dispatch = useDispatch();\r\n  const kirimisOpen = (isOpen, type) => {\r\n    return {\r\n      type: type,\r\n      payload: {\r\n        isOpen: isOpen,\r\n      }\r\n    }\r\n  }\r\n  const convert = (name, value) => ({\r\n    target: {\r\n      name, value\r\n    }\r\n  })\r\n  const handleSubmitUser = (e) => {\r\n\r\n   \r\n    let token = localStorage.getItem('id_token');\r\n    // console.log(role);\r\n    // dispatch(kirimuserselected(0, []))\r\n    if (actionForm == \"Edit Department\") {\r\n      API.post(\"update_department\", {\r\n        key: token,\r\n        dept_id:dataChange.dept_id,\r\n        dept_name:dataChange.dept_name,\r\n        group_id:dataChange.group_id\r\n\r\n      }).then(data => {\r\n\r\n        // console.log(data.data)\r\n        alert(\"berhasil Mengubah\")\r\n        setOpen(false);\r\n        dispatch(kirimisOpen(false,\"CLOSEDEPART\"))\r\n        resetForm();\r\n        // this.setState({\r\n        //   dataSet: data.data.data\r\n        // });\r\n\r\n      }).catch((err) => {\r\n        alert(\"Anda Bukan Admin\")\r\n        setOpen(false);\r\n        dispatch(kirimisOpen(false,\"CLOSEDEPART\"))\r\n        resetForm();\r\n      })\r\n    } else  if (actionForm == \"Add Department\") {\r\n      API.post(\"create_department\", {\r\n        key: token,\r\n        \r\n        dept_id:dataChange.dept_id,\r\n        dept_name:dataChange.dept_name,\r\n        group_id:dataChange.group_id\r\n\r\n      }).then(data => {\r\n\r\n        // console.log(data.data)\r\n        alert(\"berhasil menambah\")\r\n        setOpen(false);\r\n        dispatch(kirimisOpen(false,\"CLOSEDEPART\"))\r\n        resetForm();\r\n        // this.setState({\r\n        //   dataSet: data.data.data\r\n        // });\r\n\r\n      })\r\n    }\r\n    else  if (actionForm == \"Add Branch\") {\r\n        API.post(\"create_branch\", {\r\n          key: token,\r\n          \r\n          branch_id:dataChange.branch_id,\r\n          branch_name:dataChange.branch_name,\r\n         \r\n  \r\n        }).then(data => {\r\n  \r\n          // console.log(data.data)\r\n          alert(\"berhasil menambah\")\r\n          setOpen(false);\r\n          dispatch(kirimisOpen(false,\"CLOSEBRANCH\"))\r\n          resetForm();\r\n          // this.setState({\r\n          //   dataSet: data.data.data\r\n          // });\r\n  \r\n        })\r\n      }\r\n      else  if (actionForm == \"Add Role\") {\r\n        API.post(\"create_role\", {\r\n          key: token,\r\n          \r\n          role_id:dataChange.role_id,\r\n          role_name:dataChange.role_name,\r\n          menu_id:dataChange.menu_id,\r\n          report_id:dataChange.report_id,\r\n          module_id:dataChange.module_id,\r\n         \r\n  \r\n        }).then(data => {\r\n  \r\n          // console.log(data.data)\r\n          alert(\"berhasil menambah\")\r\n          setOpen(false);\r\n          dispatch(kirimisOpen(false,\"CLOSEROLE\"))\r\n          resetForm();\r\n          // this.setState({\r\n          //   dataSet: data.data.data\r\n          // });\r\n  \r\n        })\r\n      }\r\n      else if (actionForm == \"Edit Role\") {\r\n        API.post(\"update_role\", {\r\n          key: token,\r\n        \r\n          role_id:dataChange.role_id,\r\n          role_name:dataChange.role_name,\r\n          menu_id:dataChange.menu_id,\r\n          report_id:dataChange.report_id,\r\n          module_id:dataChange.module_id,\r\n        }).then(data => {\r\n  \r\n          // console.log(data.data)\r\n          alert(\"berhasil Mengubah\")\r\n          setOpen(false);\r\n          dispatch(kirimisOpen(false,\"CLOSEROLE\"))\r\n          resetForm();\r\n          // this.setState({\r\n          //   dataSet: data.data.data\r\n          // });\r\n  \r\n        }).catch((err) => {\r\n          alert(\"Anda Bukan Admin\")\r\n          setOpen(false);\r\n          dispatch(kirimisOpen(false,\"CLOSEROLE\"))\r\n          resetForm();\r\n        })\r\n      }\r\n    else  if (actionForm == \"Add Group\") {\r\n        API.post(\"create_group\", {\r\n          key: token,\r\n          \r\n         \r\n          group_name:dataChange.group_name,\r\n          group_id:dataChange.group_id\r\n  \r\n        }).then(data => {\r\n  \r\n          // console.log(data.data)\r\n          alert(\"berhasil menambah\")\r\n          setOpen(false);\r\n          dispatch(kirimisOpen(false,\"CLOSEGROUP\"))\r\n          resetForm();\r\n          // this.setState({\r\n          //   dataSet: data.data.data\r\n          // });\r\n  \r\n        })\r\n      }\r\n      else  if (actionForm == \"Add Menu\") {\r\n        API.post(\"create_menu\", {\r\n          key: token,\r\n          \r\n         \r\n          menu_id:dataChange.menu_id,\r\n          menu_desc:dataChange.menu_desc,\r\n          menu_url:dataChange.menu_url\r\n  \r\n        }).then(data => {\r\n  \r\n          // console.log(data.data)\r\n          alert(\"berhasil menambah\")\r\n          setOpen(false);\r\n          dispatch(kirimisOpen(false,\"CLOSEMENU\"))\r\n          resetForm();\r\n          // this.setState({\r\n          //   dataSet: data.data.data\r\n          // });\r\n  \r\n        })\r\n      }\r\n      else if (actionForm == \"Edit Menu\") {\r\n        API.post(\"update_menu\", {\r\n          key: token,\r\n          menu_id:dataChange.menu_id,\r\n          menu_desc:dataChange.menu_desc,\r\n          menu_url:dataChange.menu_url\r\n  \r\n        }).then(data => {\r\n  \r\n          // console.log(data.data)\r\n          alert(\"berhasil Mengubah\")\r\n          setOpen(false);\r\n          dispatch(kirimisOpen(false,\"CLOSEMENU\"))\r\n          resetForm();\r\n          // this.setState({\r\n          //   dataSet: data.data.data\r\n          // });\r\n  \r\n        }).catch((err) => {\r\n          alert(\"Anda Bukan Admin\")\r\n          setOpen(false);\r\n          dispatch(kirimisOpen(false,\"CLOSEMENU\"))\r\n          resetForm();\r\n        })\r\n      }\r\n     else if (actionForm == \"Edit Group\") {\r\n        API.post(\"update_group\", {\r\n          key: token,\r\n        \r\n          group_name:dataChange.group_name,\r\n          group_id:dataChange.group_id\r\n  \r\n        }).then(data => {\r\n  \r\n          // console.log(data.data)\r\n          alert(\"berhasil Mengubah\")\r\n          setOpen(false);\r\n          dispatch(kirimisOpen(false,\"CLOSEGROUP\"))\r\n          resetForm();\r\n          // this.setState({\r\n          //   dataSet: data.data.data\r\n          // });\r\n  \r\n        }).catch((err) => {\r\n          alert(\"Anda Bukan Admin\")\r\n          setOpen(false);\r\n          dispatch(kirimisOpen(false,\"CLOSEGROUP\"))\r\n          resetForm();\r\n        })\r\n      }\r\n      else if (actionForm == \"Edit Branch\") {\r\n        API.post(\"update_branch\", {\r\n          key: token,\r\n        \r\n          branch_name:dataChange.branch_name,\r\n          branch_id:dataChange.branch_id\r\n  \r\n        }).then(data => {\r\n  \r\n          // console.log(data.data)\r\n          alert(\"berhasil Mengubah\")\r\n          setOpen(false);\r\n          dispatch(kirimisOpen(false,\"CLOSEBRANCH\"))\r\n          resetForm();\r\n          // this.setState({\r\n          //   dataSet: data.data.data\r\n          // });\r\n  \r\n        }).catch((err) => {\r\n          alert(\"Anda Bukan Admin\")\r\n          setOpen(false);\r\n          dispatch(kirimisOpen(false,\"CLOSEBRANCH\"))\r\n          resetForm();\r\n        })\r\n      }\r\n\r\n  }\r\n  const handleChange = React.useCallback((e) => {\r\n\r\n      setDataChange({\r\n        ...dataChange,\r\n        [e.target.name]:e.target.value \r\n      })\r\n    // let etarget = e.target.name;\r\n    // console.log(e.target.name)\r\n    // if (etarget == \"username\") {\r\n    //   setDataChange({\r\n    //     username:e.target.value\r\n    //   })\r\n    // }\r\n    // else if (etarget == \"password\") {\r\n    //     setDataChange({\r\n    //       password:e.target.value\r\n\r\n    //     } )\r\n    // }\r\n    // }  else if (etarget == \"nik\") {\r\n    //   setNik(e.target.value)\r\n    // } else if (etarget == \"name\") {\r\n    //   setName(e.target.value)\r\n    // } else if (etarget == \"depart\") {\r\n    //   setDepart(e.target.value)\r\n    // } else if (etarget == \"userid\") {\r\n    //   setUserId(e.target.value)\r\n    // } else if (etarget == \"group\") {\r\n    //   setGroup(e.target.value)\r\n    // } else if (etarget == \"role\") {\r\n    //   setRole(e.target.value)\r\n    // } else if (etarget == \"branch\") {\r\n    //   console.log(e.target.value)\r\n    //   setBranch(e.target.value)\r\n    // }\r\n    // else if (etarget == \"periode\") {\r\n    //   console.log(e.target.name)\r\n    //   setPeriode(e.target.value)\r\n    // } else if (etarget == \"expired\") {\r\n    //   setExpired(e.target.value)\r\n    // } else if (etarget == \"status\") {\r\n    //   setStatus(e.target.value)\r\n    // }\r\n\r\n\r\n \r\n  }, [dataChange])\r\n  const handleClickOpen = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const resetForm = React.useCallback(() => {\r\n    setDataChange({\r\n     \r\n        dept_name:'',\r\n        dept_id:'',\r\n        role_name:'',\r\n        role_id:'',\r\n        group_name:'',\r\n        group_id:'',\r\n        branch_id:'',\r\n        branch_name:'',\r\n        menu_id:'',\r\n        report_id:'',\r\n        module_id:'',\r\n        menu_url:'',\r\n        menu_id:'',\r\n        menu_desc:'',\r\n        menu:dataMenuRedux\r\n   \r\n    })\r\n    dispatch(kirimuserselected(0,[]))\r\n  },[setDataChange]);\r\n \r\n  const Form  = React.memo((props)=>{\r\n      return (\r\n          <div>\r\n                 \r\n\r\n          </div>\r\n      )\r\n  })\r\n  const handleClose = React.useCallback(() => {\r\n    dispatch(kirimuserselected(0,[]))\r\n    if(props.actionForm==\"Add Department\"||props.actionForm==\"Edit Department\"){\r\n        dispatch(kirimisOpen(false,\"CLOSEDEPART\"))\r\n     \r\n\r\n    }else if(props.actionForm==\"Add Group\" || props.actionForm==\"Edit Group\"){\r\n        dispatch(kirimisOpen(false,\"CLOSEGROUP\"))\r\n       \r\n    }\r\n    else if(props.actionForm==\"Add Branch\" || props.actionForm==\"Edit Branch\"){\r\n        dispatch(kirimisOpen(false,\"CLOSEBRANCH\"))\r\n       \r\n    }\r\n    else if(props.actionForm==\"Add Role\" || props.actionForm==\"Edit Role\"){\r\n      dispatch(kirimisOpen(false,\"CLOSEROLE\"))\r\n    }\r\n    else if(props.actionForm==\"Add Menu\" || props.actionForm==\"Edit Menu\"){\r\n      dispatch(kirimisOpen(false,\"CLOSEMENU\"))\r\n    }\r\n    \r\n    setOpen(false);\r\n    resetForm();\r\n\r\n  },[open]);\r\n\r\n  useEffect(() => {\r\n    setOpen(props.open)\r\n   \r\n  \r\n   \r\n    if(actionForm==\"Edit Department\" || actionForm==\"Add Department\"){\r\n        getGroup();\r\n        if (actionForm == \"Add Department\") {\r\n        \r\n            resetForm();\r\n            // console.log(open)\r\n        //   let id = selectedusersetting.selectedId[0];\r\n        //   getUserDetail(id);\r\n        } else if(actionForm == \"Edit Department\") {\r\n           \r\n        \r\n          if(selected.selectedUser==1){\r\n              getDepartDetail(selected.selectedId[0]);\r\n          }\r\n        }\r\n    }else if(actionForm==\"Edit Group\" || actionForm==\"Add Group\"){\r\n        if (actionForm == \"Add Group\") {\r\n        \r\n            resetForm();\r\n            // console.log(open)\r\n        //   let id = selectedusersetting.selectedId[0];\r\n        //   getUserDetail(id);\r\n        } else if(actionForm == \"Edit Group\") {\r\n            // resetForm();\r\n        \r\n          if(selected.selectedUser==1){\r\n              getGroupDetail(selected.selectedId[0]);\r\n          }\r\n    }\r\n    \r\n}else if(actionForm==\"Edit Branch\" || actionForm==\"Add Branch\"){\r\n    if (actionForm == \"Add Branch\") {\r\n    \r\n        resetForm();\r\n        // console.log(open)\r\n    //   let id = selectedusersetting.selectedId[0];\r\n    //   getUserDetail(id);\r\n    } else if(actionForm == \"Edit Branch\") {\r\n       \r\n    \r\n      if(selected.selectedUser==1){\r\n          getBranchDetail(selected.selectedId[0]);\r\n      }\r\n}\r\n}\r\nelse if(actionForm==\"Edit Role\" || actionForm==\"Add Role\"){\r\n\r\n  if (actionForm == \"Add Role\") {\r\n  \r\n      resetForm();\r\n      \r\n      // console.log(open)\r\n  //   let id = selectedusersetting.selectedId[0];\r\n  //   getUserDetail(id);\r\n  } else if(actionForm == \"Edit Role\") {\r\n    \r\n  \r\n    if(selected.selectedUser==1){\r\n        getRoleDetail(selected.selectedId[0]);\r\n        \r\n    }\r\n}\r\n\r\n\r\n}\r\nelse if(actionForm==\"Edit Menu\" || actionForm==\"Add Menu\"){\r\n  if (actionForm == \"Add Menu\") {\r\n  \r\n      resetForm();\r\n      // console.log(open)\r\n  //   let id = selectedusersetting.selectedId[0];\r\n  //   getUserDetail(id);\r\n  } else if(actionForm == \"Edit Menu\") {\r\n      resetForm();\r\n  \r\n    if(selected.selectedUser==1){\r\n        getMenuDetail(selected.selectedId[0]);\r\n    }\r\n}}\r\n\r\n    \r\n\r\n  }, [props.open])\r\n  const value = \"ACCU-SEAL 35-532 Bag Sealer\";\r\n  return (\r\n    <div >\r\n\r\n      <Dialog\r\n     \r\n        fullWidth={true}\r\n        maxWidth={actionForm==\"Edit Role\" || actionForm==\"Add Role\"?\"lg\":'sm'} style={{ }}  onClose={handleClose}  aria-labelledby=\"customized-dialog-title\" open={open}>\r\n        <DialogTitle style={{ }} id=\"customized-dialog-title\" onClose={handleClose}>\r\n          <div style={{ display: \"flex\", }}>\r\n            <Paper style={{ width: \"50px\", height: \"50px\", display: \"flex\", justifyContent: \"center\", alignItems: \"center\" }}><PersonIcon ></PersonIcon></Paper>\r\n            <div style={{width: \"300px\", height: \"50px\",  marginLeft:\"10px\",alignItems:\"center\",justifyContent:\"center\" }}>\r\n                \r\n                  <span color=\"primary\" style={{display: \"flex\",lineHeight: \"50px\", fontFamily:\"revert\", color:\"primary\",}}  >{props.actionForm}</span>\r\n                 \r\n            </div> \r\n\r\n          </div>\r\n\r\n        </DialogTitle>\r\n\r\n        <DialogContent className={classes.root}  >\r\n          <Grid container spacing={1} style={{display:'flex', justifyContent:'center', alignItems:'center' ,}} >\r\n            \r\n\r\n            <Grid item xs={actionForm==\"Edit Role\" || actionForm==\"Add Role\"?12:8}   style={{width:\"100%\",boxShadow: \"rgba(0, 0, 0, 0.24) 0px 3px 8px\", padding:'10px'}} >\r\n            \r\n               \r\n             {actionForm==\"Edit Department\"||actionForm==\"Add Department\"?\r\n                <div>\r\n                  \r\n                 {/* <TextField\r\n                 style={{ width:\"100%\"}}\r\n                 label={\"Departement Id\"}\r\n                 onChange={handleChange}\r\n                 placeholder=\"User Id\"\r\n                 variant=\"outlined\"\r\n                 name={\"dept_id\"}\r\n                 type=\"number\"\r\n                 value={dataChange.dept_id}\r\n                 \r\n                 // error={touched && invalid}\r\n                 // helperText={touched && error}\r\n                 // {...input}\r\n                 // {...custom}\r\n                 />                              */}\r\n                  <TextField\r\n                 style={{ width:\"100%\", marginTop:\"10px\"}}\r\n                 label={\"Department Name\"} \r\n                 onChange={handleChange}\r\n                 variant=\"outlined\"\r\n                 name={\"dept_name\"}\r\n                 value={dataChange.dept_name} ></TextField>\r\n                 <Autocomplete\r\n                 \r\n                \r\n                  options={dataGroup}\r\n              \r\n                  value={dataChange.group_id?dataGroup.find(v => v.group_id == dataChange.group_id):''}\r\n                  // getOptionSelected ={(option, value) => option === value?option:''}\r\n                  getOptionLabel={(option) => option[\"Group Name\"]?option[\"Group Name\"]:\"\"}\r\n                  onChange={(e, value) => handleChange(convert(\"group_id\", value ? value.group_id : ''))}\r\n                  renderInput={(\r\n                    params) => <TextField name=\"depart\" style={{ marginTop: \"10px\", }} {...params} label=\"Group\" variant=\"outlined\" />}\r\n                />\r\n\r\n                 {/* <Autocomplete\r\n      multiple\r\n      id=\"checkboxes-tags-demo\"\r\n      options={dataGroup}\r\n      disableCloseOnSelect\r\n      getOptionLabel={(option) => option[\"Group Name\"]}\r\n      renderOption={(option, { selected }) => (\r\n        <React.Fragment>\r\n          <Checkbox\r\n            icon={icon}\r\n            checkedIcon={checkedIcon}\r\n            style={{ marginRight: 8 }}\r\n            checked={selected}\r\n          />\r\n          {option[\"Group Name\"]}\r\n        </React.Fragment>\r\n      )}\r\n      style={{ width:\"100%\", marginTop:\"10px\"}}\r\n      renderInput={(params) => (\r\n        <TextField {...params} variant=\"outlined\" label=\"Group\" placeholder=\"Group\" />\r\n      )}></Autocomplete> */}\r\n                 </div>\r\n             :actionForm==\"Edit Group\"||actionForm==\"Add Group\"?\r\n             <div>\r\n                   <TextField\r\n                 style={{ width:\"100%\"}}\r\n                 label={\"Group ID\"}\r\n                 onChange={handleChange}\r\n                 variant=\"outlined\"\r\n                 name={\"group_id\"}\r\n                 type=\"number\"\r\n                 value={dataChange.group_id}\r\n                 \r\n                 // error={touched && invalid}\r\n                 // helperText={touched && error}\r\n                 // {...input}\r\n                 // {...custom}\r\n                 />                             \r\n                  <TextField\r\n                 style={{ width:\"100%\", marginTop:\"10px\"}}\r\n                 label={\"Group Name\"} \r\n                 onChange={handleChange}\r\n                 variant=\"outlined\"\r\n                 name={\"group_name\"}\r\n                 value={dataChange.group_name} ></TextField>\r\n             </div>\r\n             \r\n             :actionForm==\"Edit Branch\"||actionForm==\"Add Branch\"?\r\n             <div>\r\n             <TextField\r\n           style={{ width:\"100%\"}}\r\n           label={\"Branch ID\"}\r\n           onChange={handleChange}\r\n           variant=\"outlined\"\r\n           name={\"branch_id\"}\r\n           type=\"number\"\r\n           value={dataChange.branch_id}\r\n           \r\n           // error={touched && invalid}\r\n           // helperText={touched && error}\r\n           // {...input}\r\n           // {...custom}\r\n           />                             \r\n            <TextField\r\n           style={{ width:\"100%\", marginTop:\"10px\"}}\r\n           label={\"Branch Name\"} \r\n           onChange={handleChange}\r\n           variant=\"outlined\"\r\n           name={\"branch_name\"}\r\n           value={dataChange.branch_name} ></TextField>\r\n       </div> :actionForm==\"Edit Role\"||actionForm==\"Add Role\"?\r\n         <div>\r\n           <Grid container>\r\n           <Grid item xs={12} sm={6} md={3} >\r\n             <Grid item>\r\n\r\n            \r\n           <TextField\r\n       style={{ width:\"100%\", marginTop:\"10px\"}}\r\n       label={\"Role Name\"} \r\n       onChange={handleChange}\r\n       variant=\"outlined\"\r\n       name={\"role_name\"}\r\n       value={dataChange.role_name} ></TextField>\r\n        {/* <TextField\r\n       style={{ width:\"100%\",marginTop:\"10px\"}}\r\n       label={\"Module ID\"}\r\n       onChange={handleChange}\r\n       variant=\"outlined\"\r\n       name={\"module_id\"}\r\n       type=\"number\"\r\n       value={dataChange.module_id}\r\n       \r\n       // error={touched && invalid}\r\n       // helperText={touched && error}\r\n       // {...input}\r\n       // {...custom}\r\n       />            */}\r\n        {/* <TextField\r\n       style={{ width:\"100%\",marginTop:\"10px\"}}\r\n       label={\"Report ID\"}\r\n       onChange={handleChange}\r\n       variant=\"outlined\"\r\n       name={\"report_id\"}\r\n       type=\"number\"\r\n       value={dataChange.report_id}\r\n       \r\n       // error={touched && invalid}\r\n       // helperText={touched && error}\r\n       // {...input}\r\n       // {...custom}\r\n       />      */}\r\n        {/* <TextField\r\n       style={{ width:\"100%\",marginTop:\"10px\"}}\r\n       label={\"Menu ID\"}\r\n       onChange={handleChange}\r\n       variant=\"outlined\"\r\n       name={\"menu_id\"}\r\n       type=\"number\"\r\n       value={dataChange.menu_id}\r\n       \r\n       // error={touched && invalid}\r\n       // helperText={touched && error}\r\n       // {...input}\r\n       // {...custom}\r\n       /> */}\r\n        </Grid>\r\n           </Grid>\r\n           <Grid container xs={12} sm={6} md={9}>\r\n           {dataChange.menu?dataChange.menu.map((data, index)=>{\r\n             return (\r\n            <Grid container>  \r\n\r\n               <Grid item xs={6} sm={3} md={4} style={{display:\"flex\", justifyContent:'center', alignItems:'center',height:'80px'}}>\r\n             <InputLabel styles={{width:\"100%\"}}>{data.Name}</InputLabel>\r\n           </Grid>\r\n             <Grid item xs={6} sm={3} md={5}>\r\n           <div style={{display:\"flex\", justifyContent:\"center\", alignItems:\"center\", direction:\"row\",width:\"100%\", height:\"80px\"}}>\r\n \r\n <div style={{margin:'10px',textAlign:\"center\"}}>\r\n <Switch\r\n checked={data.View==\"true\"?true:false}\r\n onChange={e=>handleChange(convert(e.target.name, e.target.checked))}\r\n name=\"view\"\r\n color=\"primary\"\r\n />\r\n  <br></br>\r\n <InputLabel>View</InputLabel>\r\n </div>\r\n <div style={{margin:'10px',textAlign:\"center\"}}>\r\n <Switch\r\n checked={data.Create==\"true\"?true:false}\r\n onChange={e=>handleChange(convert(e.target.name, e.target.checked))}\r\n name=\"create\"\r\n color=\"primary\"\r\n />\r\n  <br></br>\r\n <InputLabel>Create</InputLabel>\r\n </div><div style={{margin:'10px',textAlign:\"center\"}}>\r\n <Switch\r\n checked={data.Update==\"true\"?true:false}\r\n onChange={e=>handleChange(convert(e.target.name, e.target.checked))}\r\n name=\"update\"\r\n color=\"primary\"\r\n />\r\n  <br></br>\r\n <InputLabel>Update</InputLabel>\r\n </div><div style={{margin:'10px', textAlign:\"center\"}}>\r\n <Switch\r\n checked={data.Delete==\"true\"?true:false}\r\n onChange={e=>handleChange(convert(e.target.name, e.target.checked))}\r\n name=\"delete\"\r\n color=\"primary\"\r\n />\r\n  <br></br>\r\n <InputLabel>Delete</InputLabel>\r\n </div>\r\n \r\n    </div>\r\n    </Grid>\r\n    \r\n    </Grid> \r\n\r\n            ) }):''}     \r\n             </Grid>\r\n           \r\n           </Grid>\r\n          \r\n         {/* <TextField\r\n       style={{ width:\"100%\"}}\r\n       label={\"Role ID\"}\r\n       onChange={handleChange}\r\n       variant=\"outlined\"\r\n       name={\"role_id\"}\r\n       type=\"number\"\r\n       value={dataChange.role_id}\r\n       \r\n       // error={touched && invalid}\r\n       // helperText={touched && error}\r\n       // {...input}\r\n       // {...custom}\r\n       />                              */}\r\n                         \r\n   </div> \r\n       \r\n       :actionForm==\"Edit Menu\"||actionForm==\"Add Menu\"?\r\n       <div>\r\n       <TextField\r\n       style={{ width:\"100%\", marginTop:\"10px\"}}\r\n       label={\"Menu ID\"} \r\n       onChange={handleChange}\r\n       variant=\"outlined\"\r\n       name={\"menu_id\"}\r\n       type={\"number\"}\r\n       value={dataChange.menu_id} ></TextField>\r\n        <TextField\r\n       style={{ width:\"100%\",marginTop:\"10px\"}}\r\n       label={\"Menu Description\"}\r\n       onChange={handleChange}\r\n       variant=\"outlined\"\r\n       name={\"menu_desc\"}\r\n       type=\"text\"\r\n       value={dataChange.menu_desc}\r\n       \r\n       // error={touched && invalid}\r\n       // helperText={touched && error}\r\n       // {...input}\r\n       // {...custom}\r\n       />           \r\n        <TextField\r\n       style={{ width:\"100%\",marginTop:\"10px\"}}\r\n       label={\"Menu Url\"}\r\n       onChange={handleChange}\r\n       variant=\"outlined\"\r\n       name={\"menu_url\"}\r\n       type=\"text\"\r\n       value={dataChange.menu_url}\r\n       \r\n       // error={touched && invalid}\r\n       // helperText={touched && error}\r\n       // {...input}\r\n       // {...custom}\r\n       />     \r\n     \r\n       </div>  \r\n       :''}\r\n              </Grid>\r\n\r\n            \r\n            \r\n          </Grid>\r\n        </DialogContent>\r\n        <DialogActions style={{}}>\r\n          <Button className={classes.popup} autoFocus onClick={handleSubmitUser} >\r\n            Save\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </div>\r\n  );\r\n}\r\n"],"sourceRoot":""}