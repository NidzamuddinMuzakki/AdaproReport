{"version":3,"sources":["views/Adapro/Report/Report2.js","components/tabkomponen/tabs.js","components/Skeleton.js","components/Table/index.js"],"names":["ReportView","props","_items","_this","Object","C_ui01_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_classCallCheck__WEBPACK_IMPORTED_MODULE_1__","this","_super","call","getTableData","hotTableComponent","current","hotInstance","updateSettings","columns","cols","validateColumns","valid","API","post","params","data","dataChanges","len","getSourceData","length","then","alert","resetTableData","getRoleData","lockTableData","i","readOnly","editTableData","colsEdit","colHeaders","colsHeader","createEmptyCell","x","y","_data","_row","j","push","handleChange","setting","states","event","setState","settings","C_ui01_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_0__","target","checked","getConfig","get","console","log","table","allowEmpty","hotSettings","colWidths","width","height","rowHeights","rowHeaders","columnSorting","contextMenu","items","undo","redo","separator","Handsontable","plugins","ContextMenu","SEPARATOR","row_above","name","row_below","manualColumnResize","manualRowResize","manualRowMove","manualColumnMove","afterOnCellMouseOver","coords","getCellMeta","row","col","prop","beforeRemoveRow","index","amount","physicalRows","tempObject","Action","RowNumber","Key","FieldName","FieldValue","RecordData","removedOpt","removedKey","isNew","splice","getDataAtCell","afterRemoveRow","beforeCreateRow","source","afterCreateRow","beforeChange","changes","isExists","undefined","afterChange","state","React","createRef","react__WEBPACK_IMPORTED_MODULE_5___default","a","createElement","id","onClick","href","_components_Table__WEBPACK_IMPORTED_MODULE_9__","dataSet","Component","__webpack_require__","d","__webpack_exports__","Variants","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","n","_material_ui_lab_Skeleton__WEBPACK_IMPORTED_MODULE_1__","variant","EnhancedTableHead","classes","onSelectAllClick","order","orderBy","numSelected","rowCount","headCells","onRequestSort","schema","_step","_iterator","C_ui01_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_createForOfIteratorHelper__WEBPACK_IMPORTED_MODULE_2__","s","done","key","value","numeric","disablePadding","label","err","e","f","react__WEBPACK_IMPORTED_MODULE_3___default","_material_ui_core_TableHead__WEBPACK_IMPORTED_MODULE_10__","_material_ui_core_TableRow__WEBPACK_IMPORTED_MODULE_12__","_material_ui_core_TableCell__WEBPACK_IMPORTED_MODULE_8__","padding","_material_ui_core_Checkbox__WEBPACK_IMPORTED_MODULE_16__","color","indeterminateIcon","_material_ui_icons_RemoveCircle__WEBPACK_IMPORTED_MODULE_22___default","icon","_material_ui_icons_RadioButtonUnchecked__WEBPACK_IMPORTED_MODULE_21___default","checkedIcon","_material_ui_icons_CheckCircle__WEBPACK_IMPORTED_MODULE_20___default","indeterminate","onChange","inputProps","aria-label","map","headCell","sortDirection","makeStyles","theme","root","paddingLeft","spacing","paddingRight","highlight","palette","type","backgroundColor","text","primary","secondary","dark","title","flex","useStyles","paper","marginBottom","minWidth","tableRow","&$selected,&$hover:hover","hover","selected","visuallyHidden","border","clip","margin","overflow","position","top","EnhancedTable","selectedusersetting","useSelector","userSettingSelected","paging","rowperpageUser","dispatch","useDispatch","_React$useState","useState","_React$useState2","C_ui01_node_modules_babel_preset_react_app_node_modules_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_0__","hiding","setHiding","_React$useState3","_React$useState4","setOrder","_React$useState5","_React$useState6","setOrderBy","_React$useState7","selectedId","_React$useState8","setSelected","_React$useState9","halaman","_React$useState10","page","setPage","_React$useState11","_React$useState12","_React$useState13","jumlah","_React$useState14","rowsPerPage","setRowsPerPage","useEffect","kirimuserselected","payload","selectedUser","handleLeave","nodeName","parentNode","style","display","children","kirimurowperpage","handleEnter","Math","min","className","_material_ui_core_Paper__WEBPACK_IMPORTED_MODULE_15__","_material_ui_core_TableContainer__WEBPACK_IMPORTED_MODULE_9__","_material_ui_core_Table__WEBPACK_IMPORTED_MODULE_6__","fixedHeader","aria-labelledby","size","newSelecteds","property","jumlahdata","_material_ui_core_TableBody__WEBPACK_IMPORTED_MODULE_7__","isItemSelected","indexOf","labelId","concat","cursor","onMouseEnter","onMouseLeave","selectedIndex","newSelected","slice","handleClick","role","aria-checked","tabIndex","field","index1","_material_ui_core_TablePagination__WEBPACK_IMPORTED_MODULE_11__","rowsPerPageOptions","component","count","onChangePage","newPage","onChangeRowsPerPage","parseInt"],"mappings":"+NAUMA,oDACJ,SAAAA,EAAYC,GAAO,IAAAC,EAAAC,EAAA,OAAAC,OAAAC,EAAA,EAAAD,CAAAE,KAAAN,IACjBG,EAAAI,EAAAC,KAAAF,KAAML,IAoLRQ,aAAe,WAObN,EAAKO,kBAAkBC,QAAQC,YAAYC,eAAe,CACxDC,QAASX,EAAKY,OAEhBZ,EAAKO,kBAAkBC,QAAQC,YAAYI,gBAAgB,CAAC,EAAE,EAAE,GAAG,SAACC,GAC9DA,EAEFC,IAAIC,KAAK,2BAA4B,KAAM,CACzCC,OAAQ,CACNC,KAAMlB,EAAKmB,YACXC,IAAKpB,EAAKO,kBAAkBC,QAAQC,YAAYY,gBAAgBC,UAEjEC,KAAK,SAAAL,MAIRM,MAAM,eA3MOxB,EA+MnByB,eAAiB,WACfzB,EAAK0B,cACL1B,EAAKmB,YAAc,IAjNFnB,EAmNnB2B,cAAgB,WACd,IAAI,IAAIC,EAAE,EAAEA,EAAE5B,EAAKY,KAAKU,OAAOM,IAC7B5B,EAAKY,KAAKgB,GAAGC,UAAW,EAE1B7B,EAAKO,kBAAkBC,QAAQC,YAAYC,eAAe,CACxDC,QAASX,EAAKY,QAxNCZ,EA2NnB8B,cAAgB,WACd,IAAI,IAAIF,EAAE,EAAEA,EAAE5B,EAAKY,KAAKU,OAAOM,IAC7B5B,EAAKY,KAAKgB,GAAGC,UAAW,EAE1B7B,EAAKO,kBAAkBC,QAAQC,YAAYC,eAAe,CACxDC,QAASX,EAAK+B,SACdC,WAAYhC,EAAKiC,cAjOFjC,EAoOnBkC,gBAAkB,SAACC,EAAEC,GAInB,IAHA,IAAIC,EAAQ,GACRC,EAAO,GAEFV,EAAI,EAAGA,EAAIO,EAAGP,IAAK,CAC1B,IAAK,IAAIW,EAAI,EAAGA,EAAIH,EAAGG,IACrBD,EAAKE,KAAK,IAEZH,EAAMG,KAAKF,GACXA,EAAO,GAET,OAAOD,GA/OUrC,EAiPnByC,aAAe,SAACC,EAASC,GACvB,OAAO,SAACC,GACN5C,EAAK6C,SAAS,CACZC,SAAS7C,OAAA8C,EAAA,EAAA9C,CAAA,GACNyC,EAAUC,EAAOC,EAAMI,OAAOC,QAAU,EAAI,QArPlCjD,EA0PnBkD,UAAY,WACVnC,IAAIoC,IAAI,sCAAsC5B,KAAK,SAAAL,GACjDkC,QAAQC,IAAInC,EAAKA,KAAKoC,UA1PxBtD,EAAKY,KAAO,CACV,CACEM,KAAM,SACNW,UAAU,EACV0B,YAAY,GAEd,CACErC,KAAM,WACNW,UAAU,EACV0B,YAAY,IAGhBvD,EAAK+B,SAAW,CACd,CACEb,KAAM,SACNW,UAAU,EACV0B,YAAY,GAEd,CACErC,KAAM,WACNW,UAAU,EACV0B,YAAY,IAGhBvD,EAAKiC,WAAa,CAAC,UAAU,aAC7BjC,EAAKmB,YAAc,GACnBnB,EAAKwD,YAAc,CAGjB7C,QAASX,EAAK+B,SACd0B,UAAW,CAAC,IAAK,KACjBC,MAAO,OACPC,OAAQ,IACRC,WAAY,GAGZC,YAAY,EACZC,eAAe,EACfC,YAAa,CACXC,OAAKjE,EAAA,CACHkE,KAAQ,GACRC,KAAQ,GACRC,UAAaC,IAAaC,QAAQC,YAAYC,UAC9CC,UAAa,CACXC,KAAM,oBAERC,UAAa,IAPVzE,OAAA8C,EAAA,EAAA9C,CAAAF,EAAA,YAQUqE,IAAaC,QAAQC,YAAYC,WAR3CtE,OAAA8C,EAAA,EAAA9C,CAAAF,EASH,aAAc,IATXE,OAAA8C,EAAA,EAAA9C,CAAAF,EAAA,YAUUqE,IAAaC,QAAQC,YAAYC,WAV3CxE,IAaP4E,oBAAoB,EACpBC,iBAAiB,EACjBC,eAAe,EACfC,kBAAkB,EAElBC,qBAAsB,SAACnC,EAAOoC,IAGC,IAA1BhF,EAAKY,KAAK,GAAGiB,UAC0E,WAArF7B,EAAKO,kBAAkBC,QAAQC,YAAYwE,YAAYD,EAAOE,IAAIF,EAAOG,KAAKC,MAC/EpF,EAAKO,kBAAkBC,QAAQC,YAAYC,eAAe,CACvDC,QAASX,EAAK+B,YAKvBsD,gBAAiB,SAACC,EAAOC,EAAQC,GAC/BpC,QAAQC,IAAIiC,EAAQ,MAAMC,GAC1BnC,QAAQC,IAAIrD,EAAKO,kBAAkBC,QAAQC,YAAYwE,YAAYK,EAAM,GAAGF,MAO5E,IAJA,IAAIK,EAAa,CAACC,OAAO,GAAIC,UAAU,KAAMC,IAAI,CAACC,UAAU,SAASC,WAAW,IAAKC,WAAW,IAC5FC,EAAa,GACbC,EAAa,GACbC,GAAQ,EACJtE,EAAE,EAAEA,EAAE5B,EAAKmB,YAAYG,OAAOM,IACjC5B,EAAKmB,YAAYS,GAAG+D,WAAWL,IAChCU,EAAahG,EAAKmB,YAAYS,GAAG8D,OACjCO,EAAajG,EAAKmB,YAAYS,GAAGgE,IAAIE,WACrC9F,EAAKmB,YAAYgF,OAAOvE,EAAE,GAC1BsE,GAAQ,GAITA,GAAqB,KAAZF,GACVP,EAAWC,OAAS,IACpBD,EAAWE,UAAY,KACvBF,EAAWG,IAAIE,WAAaG,EAC5BjG,EAAKmB,YAAYqB,KAAKiD,KAEtBA,EAAWC,OAAS,IACpBD,EAAWE,UAAY,KACvBF,EAAWG,IAAIE,WAAa9F,EAAKO,kBAAkBC,QAAQC,YAAY2F,cAAcd,EAAM,GAC3FtF,EAAKmB,YAAYqB,KAAKiD,IAGxBrC,QAAQC,IAAIiC,GACZ,IAAI,IAAI1D,EAAE,EAAEA,EAAE5B,EAAKmB,YAAYG,OAAOM,IACjC5B,EAAKmB,YAAYS,GAAG+D,WAAWL,IAClCtF,EAAKmB,YAAYS,GAAG+D,WAAa,GAEnCvC,QAAQC,IAAIrD,EAAKmB,cAEnBkF,eAAgB,SAACf,EAAOC,EAAQC,KAGhCc,gBAAiB,SAAChB,EAAOC,EAAQgB,GAE/BnD,QAAQC,IAAIiC,GACZ,IAAI,IAAI1D,EAAE,EAAEA,EAAE5B,EAAKmB,YAAYG,OAAOM,IACjC5B,EAAKmB,YAAYS,GAAG+D,WAAWL,IAClCtF,EAAKmB,YAAYS,GAAG+D,WAAa,GAEnCvC,QAAQC,IAAIrD,EAAKmB,cAEnBqF,eAAgB,SAAClB,EAAOC,EAAQgB,KAGhCE,aAAc,SAACC,EAAQH,GAIrB,IAAId,EAAa,CAACC,OAAO,GAAIC,UAAU,KAAMC,IAAI,CAACC,UAAU,SAASC,WAAW,IAAKC,WAAW,IAC5FY,GAAW,EAEf,GAAiF,UAA9E3G,EAAKO,kBAAkBC,QAAQC,YAAYwE,YAAYyB,EAAQ,GAAG,GAAG,GAAGtB,KAEzE,IAAI,IAAIxD,EAAE,EAAEA,EAAE5B,EAAKO,kBAAkBC,QAAQC,YAAYY,gBAAgBC,OAAOM,IAE9E,GAAG5B,EAAKO,kBAAkBC,QAAQC,YAAY2F,cAAcxE,EAAE,IAAI8E,EAAQ,GAAG,GAC3E,OAAO,EAKb,IAAI,IAAI9E,EAAE,EAAEA,EAAE5B,EAAKmB,YAAYG,OAAOM,IACjC5B,EAAKmB,YAAYS,GAAG+D,WAAWe,EAAQ,GAAG,KAC3CC,GAAW,EAEX3G,EAAKmB,YAAYS,GAAGmE,WAAWW,EAAQ,GAAG,IAAMA,EAAQ,GAAG,IAGhD,GAAZC,SACiBC,GAAfF,EAAQ,GAAG,IACZjB,EAAWC,OAAS,IACF,UAAfgB,EAAQ,GAAG,KACZjB,EAAWG,IAAIE,WAAaY,EAAQ,GAAG,IAEzCjB,EAAWE,UAAYe,EAAQ,GAAG,GAClCjB,EAAWM,WAAWW,EAAQ,GAAG,IAAMA,EAAQ,GAAG,KAElDjB,EAAWC,OAAS,IACpBD,EAAWE,UAAYe,EAAQ,GAAG,GAClCjB,EAAWG,IAAIE,WAAa9F,EAAKO,kBAAkBC,QAAQC,YAAY2F,cAAcM,EAAQ,GAAG,GAAG,GACnGjB,EAAWM,WAAWW,EAAQ,GAAG,IAAMA,EAAQ,GAAG,IAEpD1G,EAAKmB,YAAYqB,KAAKiD,IAExBrC,QAAQC,IAAIrD,EAAKmB,cAGnB0F,YAAa,SAACH,EAAQH,GACL,aAAXA,IACFvG,EAAKO,kBAAkBC,QAAQC,YAAYC,eAAe,CACxDC,QAASX,EAAKY,OAEhBZ,EAAKO,kBAAkBC,QAAQC,YAAYC,eAAe,CACxDC,QAASX,EAAK+B,cAMtB/B,EAAK8G,MAAQ,GAEb9G,EAAKO,kBAAoBwG,IAAMC,YAnLdhH,mEAqQjBoD,QAAQC,IAAI,gBACZlD,KAAK+C,6CAKL,OACE+D,EAAAC,EAAAC,cAAA,OAAKC,GAAG,WACNH,EAAAC,EAAAC,cAAA,UAAQC,GAAG,WAAWC,QAASlH,KAAKsB,gBAApC,SACAwF,EAAAC,EAAAC,cAAA,UAAQC,GAAG,UAAUC,QAASlH,KAAKG,cAAnC,QAEA2G,EAAAC,EAAAC,cAAA,UAAQC,GAAG,UAAUC,QAASlH,KAAK2B,eAAnC,QACAmF,EAAAC,EAAAC,cAAA,UAAQC,GAAG,UAAUC,QAASlH,KAAKwB,eAAnC,QAEAsF,EAAAC,EAAAC,cAAA,KAAGG,KAAI,4DAAP,YACAL,EAAAC,EAAAC,cAACI,EAAA,EAAD,CAAOrG,KAAMf,KAAKqH,kBArRDC,aA6RV5H,8CCvSf6H,EAAA,KAAAA,EAAA,KAAAA,EAAA,GAAAA,EAAA,uCCAAA,EAAAC,EAAAC,EAAA,sBAAAC,IAAA,IAAAC,EAAAJ,EAAA,GAAAK,EAAAL,EAAAM,EAAAF,GAAAG,EAAAP,EAAA,KAGe,SAASG,IACtB,OACEE,EAAAb,EAAAC,cAAA,WACEY,EAAAb,EAAAC,cAACc,EAAA,EAAD,CAAUC,QAAQ,SAElBH,EAAAb,EAAAC,cAACc,EAAA,EAAD,CAAUC,QAAQ,OAAOxE,MAAO,OAAQC,OAAQ,+UCmDtD,SAASwE,EAAkBrI,GACmEA,EAApFsI,QADwB,IACfC,EAA2EvI,EAA3EuI,iBAAkBC,EAAyDxI,EAAzDwI,MAAOC,EAAkDzI,EAAlDyI,QAASC,EAAyC1I,EAAzC0I,YAAaC,EAA4B3I,EAA5B2I,SAM1DC,GANsF5I,EAAlB6I,cAMxD,IACd/G,EAAE,EACN,GAAG9B,EAAM8I,OAAO,KAAAC,EAAAC,EAAA7I,OAAA8I,EAAA,EAAA9I,CACGH,EAAM8I,QADT,IACd,IAAAE,EAAAE,MAAAH,EAAAC,EAAAd,KAAAiB,MAA+B,KAArBC,EAAqBL,EAAAM,MACvB,GAAHvH,EACD8G,EAAUlG,KAAK,CAAE4E,GAAI,KAAMgC,SAAS,EAAMC,gBAAgB,EAAMC,MAAO,OAIvEZ,EAAUlG,KAAK,CAAE4E,GAAI8B,EAAKE,SAAS,EAAOC,gBAAgB,EAAOC,MAAOJ,IAE1EtH,KATY,MAAA2H,GAAAT,EAAAU,EAAAD,GAAA,QAAAT,EAAAW,KA0BhB,OAEEC,EAAAxC,EAAAC,cAACwC,EAAA,EAAD,KACED,EAAAxC,EAAAC,cAACyC,EAAA,EAAD,KACEF,EAAAxC,EAAAC,cAAC0C,EAAA,EAAD,CAAYC,QAAQ,YAClBJ,EAAAxC,EAAAC,cAAC4C,EAAA,EAAD,CACCC,MAAQ,UACRC,kBAAmBP,EAAAxC,EAAAC,cAAC+C,EAAAhD,EAAD,MACnBiD,KAAMT,EAAAxC,EAAAC,cAACiD,EAAAlD,EAAD,MACNmD,YAAaX,EAAAxC,EAAAC,cAACmD,EAAApD,EAAD,MACZqD,cAAe/B,EAAc,GAAKA,EAAcC,EAChDxF,QAASwF,EAAW,GAAKD,IAAgBC,EACzC+B,SAAUnC,EACVoC,WAAY,CAAEC,aAAc,0BAG/BhC,EAAUiC,IAAI,SAACC,GAAD,OACblB,EAAAxC,EAAAC,cAAC0C,EAAA,EAAD,CACEX,IAAK0B,EAASxD,GAIdyD,cAAetC,IAAYqC,EAASxD,IAAKkB,GAGtCsC,EAAStB,WAoBCwB,YAAW,SAACC,GAAD,MAAY,CAC9CC,KAAM,CACJC,YAAaF,EAAMG,QAAQ,GAC3BC,aAAcJ,EAAMG,QAAQ,IAE9BE,UACyB,UAAvBL,EAAMM,QAAQC,KACV,CACAtB,MAAO,UACPuB,gBAAiB,WAEjB,CACEvB,MAAOe,EAAMM,QAAQG,KAAKC,QAC1BF,gBAAiBR,EAAMM,QAAQK,UAAUC,MAEjDC,MAAO,CACLC,KAAM,eAhBV,IA6DMC,EAAYhB,YAAW,SAACC,GAAD,MAAY,CACvCC,KAAM,CACJtH,MAAO,QAETqI,MAAO,CACLrI,MAAO,OACPsI,aAAcjB,EAAMG,QAAQ,IAE9B5H,MAAO,CACL2I,SAAU,KAEZC,SAAU,CAERC,2BAA4B,CAC1BZ,gBAAiB,YASrBa,MAAO,GACPC,SAAU,GACVC,eAAgB,CACdC,OAAQ,EACRC,KAAM,gBACN7I,OAAQ,EACR8I,QAAS,EACTC,SAAU,SACV5C,QAAS,EACT6C,SAAU,WACVC,IAAK,GACLlJ,MAAO,MAII,SAASmJ,EAAc/M,GACpC,IAAMsI,EAAU0D,IACVgB,EAAsBC,sBAAY,SAAAjG,GAAK,OAAGA,EAAMkG,sBAChDC,EAASF,sBAAY,SAAAjG,GAAK,OAAEA,EAAMoG,iBAClCC,EAAWC,wBAJ0BC,EAKftG,IAAMuG,SAAS,QALAC,EAAAtN,OAAAuN,EAAA,EAAAvN,CAAAoN,EAAA,GAKpCI,EALoCF,EAAA,GAK5BG,EAL4BH,EAAA,GAAAI,EAMjB5G,IAAMuG,SAAS,OANEM,EAAA3N,OAAAuN,EAAA,EAAAvN,CAAA0N,EAAA,GAMpCrF,EANoCsF,EAAA,GAM7BC,EAN6BD,EAAA,GAAAE,EAOb/G,IAAMuG,SAAS,YAPFS,EAAA9N,OAAAuN,EAAA,EAAAvN,CAAA6N,EAAA,GAOpCvF,EAPoCwF,EAAA,GAO3BC,EAP2BD,EAAA,GAAAE,EAQXlH,IAAMuG,SAASR,EAAoBoB,YARxBC,EAAAlO,OAAAuN,EAAA,EAAAvN,CAAAgO,EAAA,GAQpC5B,EARoC8B,EAAA,GAQ1BC,EAR0BD,EAAA,GAAAE,EASnBtH,IAAMuG,SAASL,EAAOqB,QAAQ,GATXC,EAAAtO,OAAAuN,EAAA,EAAAvN,CAAAoO,EAAA,GASpCG,EAToCD,EAAA,GAS9BE,EAT8BF,EAAA,GAAAG,EAUjB3H,IAAMuG,UAAS,GAVEqB,EAAA1O,OAAAuN,EAAA,EAAAvN,CAAAyO,EAAA,GAAAE,GAAAD,EAAA,GAAAA,EAAA,GAWL5H,IAAMuG,SAASL,EAAO4B,SAXjBC,EAAA7O,OAAAuN,EAAA,EAAAvN,CAAA2O,EAAA,GAWpCG,EAXoCD,EAAA,GAWvBE,EAXuBF,EAAA,GAa3CG,oBAAU,WACRb,EAAYtB,EAAoBoB,aAClC,CAACpB,EAAoBoB,aAONpO,EAAMoB,KAFrB,IAeMgO,EAAoB,SAACL,EAAQ3N,GACjC,MAAM,CACJoK,KAAK,eACL6D,QAAQ,CACNC,aAAcP,EACdX,WAAWhN,KAIbmO,EAAc,SAAC7F,GAEK,SAAnBA,EAAExG,OAAOsM,SACV9F,EAAExG,OAAOuM,WAAWA,WAAWC,MAAMC,QAAQ,OAElB,MAArBjG,EAAExG,OAAOuM,YAEyB,MAAjC/F,EAAExG,OAAOuM,WAAWG,SAAS,IAEgB,MAA7ClG,EAAExG,OAAOuM,WAAWG,SAAS,GAAGA,SAAS,KAIhDlG,EAAExG,OAAOuM,WAAWG,SAAS,GAAGA,SAAS,GAAGF,MAAMC,QAAQ,SAGxDE,EAAmB,SAACd,EAAQP,GAChC,MAAM,CACJhD,KAAK,gBACL6D,QAAQ,CACNN,OAAQA,EACRP,QAAQA,KAIVsB,EAAc,SAACpG,GACO,MAArBA,EAAExG,OAAOuM,YAE8B,MAAjC/F,EAAExG,OAAOuM,WAAWG,SAAS,IAEgB,MAA7ClG,EAAExG,OAAOuM,WAAWG,SAAS,GAAGA,SAAS,KAGhDlG,EAAExG,OAAOuM,WAAWG,SAAS,GAAGA,SAAS,GAAGF,MAAMC,QAAQ,UA0B9DR,oBAAU,WACL5C,EAAS/K,OAAO,EACjBoM,EAAU,SAMVA,EAAU,SAGZ,CAACrB,IAiCH4C,oBAAU,WACR7L,QAAQC,IAAI0L,EAAY,IAAIP,IAC3B,CAACA,IAa4BqB,KAAKC,IAAIf,EA9I5B,GA8I8CzN,OAASkN,EAAOO,GAE3E,OACErF,EAAAxC,EAAAC,cAAA,OAAK4I,UAAW3H,EAAQ4C,MACtBtB,EAAAxC,EAAAC,cAAC6I,EAAA,EAAD,CAAOD,UAAW3H,EAAQ2D,OAaxBrC,EAAAxC,EAAAC,cAAC8I,EAAA,EAAD,KAEEvG,EAAAxC,EAAAC,cAAC+I,EAAA,EAAD,CACEC,aAAa,EACbJ,UAAW3H,EAAQ9E,MACnB8M,kBAAgB,aAChBC,KAAM,QACN3F,aAAW,kBAEXhB,EAAAxC,EAAAC,cAACgB,EAAD,CAEEC,QAASA,EACTI,YAAa6D,EAAS/K,OACtBgH,MAAOA,EACPC,QAASA,EACTF,iBA5GiB,SAACzF,GAC5B,GAAGyJ,EAAS/K,OAAO,EACjB6L,EAAS+B,EAAkB,EAAE,KAC7Bd,EAAY,SAET,GAAIxL,EAAMI,OAAOC,QAAS,CAC7B,IAAMqN,EAAexQ,EAAMoB,KAAKyJ,IAAI,SAAC3C,GAAD,OAAOA,EAAElI,EAAM8I,OAAO,MACtDiG,EAASyB,EAAahP,OAK1B,OAFA6L,EAAS+B,EAAkBL,EAAOyB,SAClClC,EAAYkC,GAGdnD,EAAS+B,EAAkB,EAAE,KAC7Bd,EAAY,KA8FFzF,cAnHc,SAAC/F,EAAO2N,GAEhC1C,EADctF,IAAYgI,GAAsB,QAAVjI,EACrB,OAAS,OAC1B0F,EAAWuC,IAiHD9H,SAAU3I,EAAM0Q,WAChB5H,OAAQ9I,EAAM8I,SAGhBc,EAAAxC,EAAAC,cAACsJ,EAAA,EAAD,KAGI3Q,EAAMoB,KAAKyJ,IAAI,SAACzF,EAAKI,GACnB,IA5CIb,EA4CEiM,GA5CFjM,EA4C8BS,EAAIpF,EAAM8I,OAAO,KA5CV,IAA5ByD,EAASsE,QAAQlM,IA6CxBmM,EAAO,2BAAAC,OAA8B3L,EAAIpF,EAAM8I,OAAO,KAE5D,OACEc,EAAAxC,EAAAC,cAACyC,EAAA,EAAD,CACAxC,GAAG,WACHgF,OAAK,EAEL2D,UAAW3H,EAAQ8D,SACnB9D,QAAS,CAAEgE,MAAOhE,EAAQgE,MAAOC,SAASjE,EAAQiE,UAClDmD,MAAO,CAACsB,OAAO,WACfC,aAA+B,GAAjB1E,EAAS/K,OAAUsO,EAAY,KAC7CoB,aAA+B,GAAjB3E,EAAS/K,OAAU+N,EAAY,KAC7ChI,QAAS,SAACzE,GAAD,OArGP,SAACA,EAAO6B,GAC1B,IAAMwM,EAAgB5E,EAASsE,QAAQlM,GAGnCyM,EAAc,IAEK,IAAnBD,EACFC,EAAcA,EAAYL,OAAOxE,EAAU5H,GAChB,IAAlBwM,EACTC,EAAcA,EAAYL,OAAOxE,EAAS8E,MAAM,IACvCF,IAAkB5E,EAAS/K,OAAS,EAC7C4P,EAAcA,EAAYL,OAAOxE,EAAS8E,MAAM,GAAI,IAC3CF,EAAgB,IACzBC,EAAcA,EAAYL,OACxBxE,EAAS8E,MAAM,EAAGF,GAClB5E,EAAS8E,MAAMF,EAAgB,KAGnC,IAAIpC,EAASqC,EAAY5P,OAGzB6L,EAAS+B,EAAkBL,EAAOqC,IAClC9C,EAAY8C,GA+EwBE,CAAYxO,EAAOsC,EAAIpF,EAAM8I,OAAO,MAExDyI,KAAK,WACLC,eAAcZ,EACda,SAAU,EAEVrI,IAAK5D,EACL+G,SAAUqE,GAERhH,EAAAxC,EAAAC,cAAC0C,EAAA,EAAD,CAAYC,QAAQ,YAClBJ,EAAAxC,EAAAC,cAAC4C,EAAA,EAAD,CAAUyF,MAAO,CAACC,QAAQhC,GACxBxK,QAASyN,EACTvG,KAAMT,EAAAxC,EAAAC,cAACiD,EAAAlD,EAAD,MACNmD,YAAaX,EAAAxC,EAAAC,cAACmD,EAAApD,EAAD,MACb8C,MAAQ,UACRS,WAAY,CAAE2F,kBAAmBQ,MAGrClH,EAAAxC,EAAAC,cAAC0C,EAAA,EAAD,CAAWX,IAAK,UACf5D,EAAM,GAAGyJ,GAAaP,EAAK,GAAGO,IAG9BjP,EAAM8I,OAAO+B,IAAI,SAAC6G,EAAOC,GACtB,GAAW,GAARA,EAKF,OAEC/H,EAAAxC,EAAAC,cAAC0C,EAAA,EAAD,CAAWX,IAAKuI,GAEfvM,EAAIsM,GAAOlQ,OAAO,KAAOoP,EAAexL,EAAIsM,GAAOL,MAAM,EAAG,IAAIN,OAAO,OAAO3L,EAAIsM,GAAOlQ,OAAO,GAAG4D,EAAIsM,GAAOL,MAAM,EAAG,IAAIN,OAAO,OAAO3L,EAAIsM,YAwBlK9H,EAAAxC,EAAAC,cAACuK,EAAA,EAAD,CACEC,mBAAoB,CAAC,EAAG,GAAI,IAC5BC,UAAU,MACVC,MAAO/R,EAAM0Q,WACbzB,YAAaA,EACbP,KAAMA,EACNsD,aA1IiB,SAAClP,EAAOmP,GAC/BtD,EAAQsD,GACR5E,EAASwC,EAAiBZ,EAAagD,EAAQ,KAyIzCC,oBAlIwB,SAACpP,GAC/BoM,EAAeiD,SAASrP,EAAMI,OAAOmG,MAAO,KAC5CgE,EAASwC,EAAiB/M,EAAMI,OAAOmG,MAAO,IAC9CsF,EAAQ","file":"static/js/28.17cab40a.chunk.js","sourcesContent":["import React, { Component } from 'react';\r\nimport ReactDOM from 'react-dom';\r\nimport classNames from 'classnames';\r\nimport { Row, Col } from 'reactstrap'\r\nimport { rgbToHex } from '@coreui/coreui/dist/js/coreui-utilities'\r\nimport Table from \"./../../../components/Table\";\r\nimport { HotTable } from '@handsontable/react';\r\nimport Handsontable from 'handsontable';\r\nimport API from 'api';\r\n\r\nclass ReportView extends Component {\r\n  constructor(props) {\r\n    super(props);\r\n    this.cols = [\r\n      {\r\n        data: 'roleid',\r\n        readOnly: true,\r\n        allowEmpty: false\r\n      },\r\n      {\r\n        data: 'rolename',\r\n        readOnly: true,\r\n        allowEmpty: false\r\n      }\r\n    ]\r\n    this.colsEdit = [\r\n      {\r\n        data: 'roleid',\r\n        readOnly: false,\r\n        allowEmpty: false\r\n      },\r\n      {\r\n        data: 'rolename',\r\n        readOnly: false,\r\n        allowEmpty: false\r\n      }\r\n    ]\r\n    this.colsHeader = ['Role ID','Role Name']\r\n    this.dataChanges = []\r\n    this.hotSettings = {\r\n      // data: Handsontable.helper.createSpreadsheetData(100, 500),\r\n      //data: this.getUserData(), //this.createEmptyCell(500,20),\r\n      columns: this.colsEdit,\r\n      colWidths: [150, 200],\r\n      width: '100%',\r\n      height: 320,\r\n      rowHeights: 23,\r\n      //colHeaders: true,\r\n      //colHeaders: this.colsHeader,\r\n      rowHeaders: true,\r\n      columnSorting: true,\r\n      contextMenu: {\r\n        items: {\r\n          'undo': {},\r\n          'redo': {},\r\n          'separator': Handsontable.plugins.ContextMenu.SEPARATOR,\r\n          'row_above': {\r\n            name: 'Insert row above'\r\n          },\r\n          'row_below': {},\r\n          'separator': Handsontable.plugins.ContextMenu.SEPARATOR,\r\n          'remove_row': {},\r\n          'separator': Handsontable.plugins.ContextMenu.SEPARATOR\r\n        }\r\n      },\r\n      manualColumnResize: true,\r\n      manualRowResize: true,\r\n      manualRowMove: true,\r\n      manualColumnMove: true,\r\n\r\n      afterOnCellMouseOver: (event, coords) => {\r\n        // console.log('afterOnCellMouseOver : '+coords.col + \" | \"+coords.row + \" | \" + this.hotTableComponent.current.hotInstance.getColHeader(coords.col))\r\n        // console.log(this.hotTableComponent.current.hotInstance.getCellMeta(coords.row,coords.col).prop)\r\n        if(this.cols[0].readOnly === false) {\r\n          if(this.hotTableComponent.current.hotInstance.getCellMeta(coords.row,coords.col).prop==='roleid') {\r\n            this.hotTableComponent.current.hotInstance.updateSettings({\r\n               columns: this.colsEdit\r\n             });         \r\n           }\r\n        }\r\n      },\r\n      beforeRemoveRow: (index, amount, physicalRows) => {\r\n        console.log(index + \" - \"+amount)\r\n        console.log(this.hotTableComponent.current.hotInstance.getCellMeta(index,0).prop)\r\n\r\n        //check and remove from dataChanges\r\n        let tempObject = {Action:\"\", RowNumber:null, Key:{FieldName:\"roleid\",FieldValue:\"\"}, RecordData:{}}\r\n        let removedOpt = \"\"\r\n        let removedKey = \"\"\r\n        let isNew = false\r\n        for(let i=0;i<this.dataChanges.length;i++) {\r\n          if(this.dataChanges[i].RowNumber==index) {\r\n            removedOpt = this.dataChanges[i].Action\r\n            removedKey = this.dataChanges[i].Key.FieldValue\r\n            this.dataChanges.splice(i,1)\r\n            isNew = true\r\n          }\r\n        }\r\n        //insert as D if not I\r\n        if(isNew && removedOpt!=\"I\") {\r\n          tempObject.Action = 'D'\r\n          tempObject.RowNumber = null\r\n          tempObject.Key.FieldValue = removedKey\r\n          this.dataChanges.push(tempObject)\r\n        } else {\r\n          tempObject.Action = 'D'\r\n          tempObject.RowNumber = null\r\n          tempObject.Key.FieldValue = this.hotTableComponent.current.hotInstance.getDataAtCell(index,0)\r\n          this.dataChanges.push(tempObject)\r\n        }\r\n        //adjust dataChanges Row index\r\n        console.log(index)\r\n        for(let i=0;i<this.dataChanges.length;i++) {\r\n          if(this.dataChanges[i].RowNumber>=index)\r\n          this.dataChanges[i].RowNumber -= 1\r\n        }\r\n        console.log(this.dataChanges)\r\n      },\r\n      afterRemoveRow: (index, amount, physicalRows) => {\r\n      \r\n      },\r\n      beforeCreateRow: (index, amount, source) => {\r\n        //adjust dataChanges Row index\r\n        console.log(index)\r\n        for(let i=0;i<this.dataChanges.length;i++) {\r\n          if(this.dataChanges[i].RowNumber>=index)\r\n          this.dataChanges[i].RowNumber += 1\r\n        }\r\n        console.log(this.dataChanges)\r\n      },\r\n      afterCreateRow: (index, amount, source) => {\r\n        //console.log(index+\" - \"+amount)\r\n      },\r\n      beforeChange: (changes,source) => {\r\n        // console.log('beforeChange')\r\n        //console.log(this.hotTableComponent.current.hotInstance.getCellMeta(changes[0],0))\r\n        \r\n        let tempObject = {Action:\"\", RowNumber:null, Key:{FieldName:\"roleid\",FieldValue:\"\"}, RecordData:{}}\r\n        let isExists = false\r\n\r\n        if(this.hotTableComponent.current.hotInstance.getCellMeta(changes[0][0],0).prop=='roleid') {\r\n          //validation\r\n          for(let i=0;i<this.hotTableComponent.current.hotInstance.getSourceData().length;i++) {\r\n            //console.log(this.hotTableComponent.current.hotInstance.getDataAtCell(i,0),changes[0][3])\r\n            if(this.hotTableComponent.current.hotInstance.getDataAtCell(i,0)==changes[0][3]) {\r\n              return false;\r\n            }\r\n          }\r\n        }\r\n        \r\n        for(let i=0;i<this.dataChanges.length;i++) {\r\n          if(this.dataChanges[i].RowNumber==changes[0][0]) {\r\n            isExists = true\r\n            //tempObject.RecordData[changes[0][1]] = changes[0][3]\r\n            this.dataChanges[i].RecordData[changes[0][1]] = changes[0][3]\r\n          }\r\n        }\r\n        if(isExists == false) {\r\n          if(changes[0][2]==undefined) { //new record\r\n            tempObject.Action = 'I'\r\n            if(changes[0][1]==\"roleid\") {\r\n              tempObject.Key.FieldValue = changes[0][3]\r\n            }\r\n            tempObject.RowNumber = changes[0][0]\r\n            tempObject.RecordData[changes[0][1]] = changes[0][3]\r\n          } else {\r\n            tempObject.Action = 'U'\r\n            tempObject.RowNumber = changes[0][0]\r\n            tempObject.Key.FieldValue = this.hotTableComponent.current.hotInstance.getDataAtCell(changes[0][0],0)\r\n            tempObject.RecordData[changes[0][1]] = changes[0][3]\r\n          }\r\n          this.dataChanges.push(tempObject)\r\n        }\r\n        console.log(this.dataChanges)\r\n      \r\n      },\r\n      afterChange: (changes,source) => {\r\n        if (source !== 'loadData') {\r\n          this.hotTableComponent.current.hotInstance.updateSettings({\r\n            columns: this.cols\r\n          });\r\n          this.hotTableComponent.current.hotInstance.updateSettings({\r\n            columns: this.colsEdit\r\n          });\r\n\r\n        }\r\n      }\r\n    };\r\n    this.state = {\r\n    }\r\n    this.hotTableComponent = React.createRef();\r\n  }\r\n  getTableData = () => {\r\n    //console.log(\"this.hotSettings.data\")\r\n    // console.log(this.hotSettings.data)\r\n    // console.log(\"this.hotTableComponent.current.hotInstace.getSourceData()\")\r\n    // console.log(this.hotTableComponent.current.hotInstance.getSourceData());\r\n    // console.log(\"this.hotTableComponent.current.hotInstance.getData()\")\r\n    // console.log(this.hotTableComponent.current.hotInstance.getData())\r\n    this.hotTableComponent.current.hotInstance.updateSettings({\r\n      columns: this.cols\r\n    });\r\n    this.hotTableComponent.current.hotInstance.validateColumns([0,1,2],(valid) => {\r\n      if (valid) {\r\n        // ... code for validated columns\r\n        API.post(\"/api/credential/role/put\", null, { \r\n          params: {\r\n            data: this.dataChanges,//this.hotTableComponent.current.hotInstance.getSourceData(),\r\n            len: this.hotTableComponent.current.hotInstance.getSourceData().length\r\n          }\r\n        }).then(data => {\r\n          // console.log(data);\r\n        });\r\n      } else {\r\n        alert(\"Invalid!\");\r\n      }\r\n    })\r\n  }\r\n  resetTableData = () => {\r\n    this.getRoleData();  \r\n    this.dataChanges = []\r\n  }\r\n  lockTableData = () => {\r\n    for(let i=0;i<this.cols.length;i++) {\r\n      this.cols[i].readOnly = true;\r\n    }\r\n    this.hotTableComponent.current.hotInstance.updateSettings({\r\n      columns: this.cols\r\n    });\r\n  }\r\n  editTableData = () => {\r\n    for(let i=0;i<this.cols.length;i++) {\r\n      this.cols[i].readOnly = false;\r\n    }\r\n    this.hotTableComponent.current.hotInstance.updateSettings({\r\n      columns: this.colsEdit,\r\n      colHeaders: this.colsHeader\r\n    });\r\n  }\r\n  createEmptyCell = (x,y) => {\r\n    var _data = [];\r\n    var _row = [];\r\n\r\n    for (let i = 0; i < x; i++) {\r\n      for (let j = 0; j < y; j++) {\r\n        _row.push(\"\");\r\n      }\r\n      _data.push(_row);\r\n      _row = [];\r\n    }\r\n    return _data;\r\n  }\r\n  handleChange = (setting, states) => {\r\n    return (event) => {\r\n      this.setState({\r\n        settings: {\r\n          [setting]: states[event.target.checked ? 1 : 0],\r\n        }\r\n      });\r\n    }\r\n  };\r\n  getConfig = () => {\r\n    API.get(\"/api/report/config/get?report=LB01\").then(data => {\r\n      console.log(data.data.table);\r\n      // this.hotTableComponent.current.hotInstance.updateSettings(\r\n      //   JSON.parse(data.data).table\r\n      // );\r\n      \r\n    })\r\n  }\r\n  componentWillMount () {\r\n    //alert(\"will mount..\")\r\n    console.log(\"will mount..\")\r\n    this.getConfig();    \r\n  }\r\n\r\n  render() {\r\n\r\n    return (\r\n      <div id=\"hot-app\">\r\n        <button id=\"btnReset\" onClick={this.resetTableData}>Reset</button>\r\n        <button id=\"btnSave\" onClick={this.getTableData}>Save</button>\r\n\r\n        <button id=\"btnEdit\" onClick={this.editTableData}>Edit</button>\r\n        <button id=\"btnLock\" onClick={this.lockTableData}>Lock</button>\r\n        \r\n        <a href={`http://localhost:3001/api/credential/role/download/excel`} >Download</a>\r\n        <Table data={this.dataSet}/>\r\n\r\n        {/* <HotTable ref={this.hotTableComponent} id=\"hot2\" settings={this.hotSettings} licenseKey=\"non-commercial-and-evaluation\" /> */}\r\n      </div>\r\n    )\r\n  }\r\n}\r\n\r\nexport default ReportView;\r\n","import { Tab, Tabs, TabList, TabPanel } from 'react-tabs';\r\nimport 'react-tabs/style/react-tabs.css';\r\nimport React from 'react';\r\n\r\nimport ClearIcon from '@material-ui/icons/Clear';\r\nexport default () => (\r\n  <Tabs>\r\n    <TabList>\r\n      <Tab>Add 1 <ClearIcon></ClearIcon> </Tab>\r\n      <Tab>Edit 2  <ClearIcon></ClearIcon></Tab>\r\n    </TabList>\r\n\r\n    <TabPanel>\r\n      <h2>Any content 1</h2>\r\n    </TabPanel>\r\n    <TabPanel>\r\n      <h2>Any content 2</h2>\r\n    </TabPanel>\r\n  </Tabs>\r\n);","import React from 'react';\r\nimport Skeleton from '@material-ui/lab/Skeleton';\r\n\r\nexport default function Variants() {\r\n  return (\r\n    <div>\r\n      <Skeleton variant=\"text\" />\r\n      {/* <Skeleton variant=\"circle\" width={40} height={40} /> */}\r\n      <Skeleton variant=\"rect\" width={'100%'} height={400} />\r\n    </div>\r\n  );\r\n}","import React, { useEffect } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport clsx from 'clsx';\r\nimport { lighten, makeStyles } from '@material-ui/core/styles';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TablePagination from '@material-ui/core/TablePagination';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport TableSortLabel from '@material-ui/core/TableSortLabel';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Switch from '@material-ui/core/Switch';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport FilterListIcon from '@material-ui/icons/FilterList';\r\nimport set from 'core-js/es6/set';\r\nimport {useSelector,useDispatch} from 'react-redux';\r\nimport Tabs from  '../tabkomponen/tabs.js';\r\nimport CheckCircleIcon from '@material-ui/icons/CheckCircle';\r\nimport RadioButtonUncheckedIcon from '@material-ui/icons/RadioButtonUnchecked';\r\nimport RemoveCircleIcon from '@material-ui/icons/RemoveCircle';\r\nimport Skeleton from './../Skeleton';\r\n\r\n\r\n\r\nfunction descendingComparator(a, b, orderBy) {\r\n  if (b[orderBy] < a[orderBy]) {\r\n    return -1;\r\n  }\r\n  if (b[orderBy] > a[orderBy]) {\r\n    return 1;\r\n  }\r\n  return 0;\r\n}\r\n\r\nfunction getComparator(order, orderBy) {\r\n  return order === 'desc'\r\n    ? (a, b) => descendingComparator(a, b, orderBy)\r\n    : (a, b) => -descendingComparator(a, b, orderBy);\r\n}\r\n\r\nfunction stableSort(array, comparator) {\r\n  const stabilizedThis = array.map((el, index) => [el, index]);\r\n  stabilizedThis.sort((a, b) => {\r\n    const order = comparator(a[0], b[0]);\r\n    if (order !== 0) return order;\r\n    return a[1] - b[1];\r\n  });\r\n  return stabilizedThis.map((el) => el[0]);\r\n}\r\n\r\n\r\nfunction EnhancedTableHead(props) {\r\n  const { classes, onSelectAllClick, order, orderBy, numSelected, rowCount, onRequestSort } = props;\r\n  const createSortHandler = (property) => (event) => {\r\n    onRequestSort(event, property);\r\n  };\r\n\r\n  // console.log(\"hay\"+props.data)\r\n  const headCells = [];\r\n  let i=0;\r\n  if(props.schema){\r\n    for(const key of props.schema ){\r\n      if(i==0){\r\n        headCells.push({ id: 'no', numeric: true, disablePadding: true, label: 'No' })\r\n  \r\n      }\r\n      else{\r\n        headCells.push({ id: key, numeric: false, disablePadding: false, label: key })\r\n      }\r\n      i++;\r\n    }\r\n    \r\n  }\r\n//  headCells = [\r\n//     { id: 'username', numeric: false, disablePadding: false, label: 'Username' },\r\n//     { id: 'name', numeric: false, disablePadding: false, label: 'Name' },\r\n//     { id: 'password', numeric: false, disablePadding: false, label: 'Password' },\r\n//     { id: 'role', numeric: false, disablePadding: false, label: 'Role' },\r\n//     { id: 'nik', numeric: false, disablePadding: false, label: 'Nik' },\r\n//     { id: 'dept', numeric: false, disablePadding: false, label: 'Departement' },\r\n//     { id: 'group', numeric: false, disablePadding: false, label: 'Group' },\r\n\r\n\r\n//   ];\r\n\r\n  \r\n  return (\r\n  \r\n    <TableHead>\r\n      <TableRow >\r\n        <TableCell  padding=\"checkbox\">\r\n          <Checkbox\r\n           color = \"primary\"\r\n           indeterminateIcon={<RemoveCircleIcon/>}\r\n           icon={<RadioButtonUncheckedIcon></RadioButtonUncheckedIcon>}\r\n           checkedIcon={<CheckCircleIcon></CheckCircleIcon>}\r\n            indeterminate={numSelected > 0 && numSelected < rowCount}\r\n            checked={rowCount > 0 && numSelected === rowCount}\r\n            onChange={onSelectAllClick}\r\n            inputProps={{ 'aria-label': 'select all desserts' }}\r\n          />\r\n        </TableCell>\r\n        {headCells.map((headCell) => (\r\n          <TableCell\r\n            key={headCell.id}\r\n          \r\n          \r\n            // padding={20}\r\n            sortDirection={orderBy === headCell.id ? order : false}\r\n          >\r\n           \r\n              {headCell.label }\r\n             \r\n           \r\n          </TableCell>\r\n        ))}\r\n      </TableRow>\r\n    </TableHead>\r\n  );\r\n}\r\n\r\nEnhancedTableHead.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n  numSelected: PropTypes.number.isRequired,\r\n  onRequestSort: PropTypes.func.isRequired,\r\n  onSelectAllClick: PropTypes.func.isRequired,\r\n  order: PropTypes.oneOf(['asc', 'desc']).isRequired,\r\n  orderBy: PropTypes.string.isRequired,\r\n  rowCount: PropTypes.number.isRequired,\r\n};\r\n\r\nconst useToolbarStyles = makeStyles((theme) => ({\r\n  root: {\r\n    paddingLeft: theme.spacing(2),\r\n    paddingRight: theme.spacing(1),\r\n  },\r\n  highlight:\r\n    theme.palette.type === 'light'\r\n      ? {\r\n        color: \"#0078d4\",\r\n        backgroundColor: \"#c7e0f4\",\r\n        }\r\n      : {\r\n          color: theme.palette.text.primary,\r\n          backgroundColor: theme.palette.secondary.dark,\r\n        },\r\n  title: {\r\n    flex: '1 1 100%',\r\n  },\r\n}));\r\n\r\nconst EnhancedTableToolbar = (props) => {\r\n  const classes = useToolbarStyles();\r\n  const { numSelected } = props;\r\n\r\n  return (\r\n    <Toolbar\r\n      className={clsx(classes.root, {\r\n        [classes.highlight]: numSelected > 0,\r\n      })}\r\n    >\r\n      {numSelected > 0 ? (\r\n        <Typography className={classes.title} color=\"inherit\" variant=\"subtitle1\" component=\"div\">\r\n          {numSelected} selected\r\n        </Typography>\r\n      ) : (\r\n        <Typography className={classes.title} variant=\"h6\" id=\"tableTitle\" component=\"div\">\r\n          {props.name}\r\n        </Typography>\r\n      )}\r\n\r\n      {/* {numSelected > 0 ? (\r\n        <Tooltip title=\"Delete\">\r\n          <IconButton aria-label=\"delete\">\r\n            <DeleteIcon />\r\n          </IconButton>\r\n        </Tooltip>\r\n      ) : (\r\n        <Tooltip title=\"Filter list\">\r\n          <IconButton aria-label=\"filter list\">\r\n            <FilterListIcon />\r\n          </IconButton>\r\n        </Tooltip>\r\n      )} */}\r\n    </Toolbar>\r\n  );\r\n};\r\n\r\nEnhancedTableToolbar.propTypes = {\r\n  numSelected: PropTypes.number.isRequired,\r\n};\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    width: '100%',\r\n  },\r\n  paper: {\r\n    width: '100%',\r\n    marginBottom: theme.spacing(2),\r\n  },\r\n  table: {\r\n    minWidth: 750,\r\n  },\r\n  tableRow: {\r\n    \r\n    \"&$selected,&$hover:hover\": {\r\n      backgroundColor: \"#c7e0f4\"\r\n    },\r\n    \r\n  },\r\n  // tableCell: {\r\n  //   \"$hover:hover &\": {\r\n  //     color: \"pink\"\r\n  //   }\r\n  \r\n  hover: {},\r\n  selected: {},\r\n  visuallyHidden: {\r\n    border: 0,\r\n    clip: 'rect(0 0 0 0)',\r\n    height: 1,\r\n    margin: -1,\r\n    overflow: 'hidden',\r\n    padding: 0,\r\n    position: 'absolute',\r\n    top: 20,\r\n    width: 1,\r\n  },\r\n}));\r\n\r\nexport default function EnhancedTable(props) {\r\n  const classes = useStyles();\r\n  const selectedusersetting = useSelector(state =>state.userSettingSelected);\r\n  const paging = useSelector(state=>state.rowperpageUser);\r\n  const dispatch = useDispatch();\r\n  const [hiding, setHiding] = React.useState(\"none\");\r\n  const [order, setOrder] = React.useState('asc');\r\n  const [orderBy, setOrderBy] = React.useState('calories');\r\n  const [selected, setSelected] = React.useState(selectedusersetting.selectedId);\r\n  const [page, setPage] = React.useState(paging.halaman-1);\r\n  const [dense, setDense] = React.useState(false);\r\n  const [rowsPerPage, setRowsPerPage] = React.useState(paging.jumlah);\r\n  let deptName = [];\r\n  useEffect(()=>{\r\n    setSelected(selectedusersetting.selectedId);\r\n},[selectedusersetting.selectedId])\r\n\r\n  function createData(userdata) {\r\n    return {userdata};\r\n  }\r\n  const rows = [];\r\n  \r\n  let dataUser = props.data;\r\n// console.log(props.deptName[0])\r\n// let nomorTogel = rowsPerPage*(page+1)-rowsPerPage;\r\n//   for(let i=0;i<dataUser.length;i++){\r\n//     nomorTogel++;\r\n//     rows[i] = createData(dataUser[i].user_id,(nomorTogel),dataUser[i].username, dataUser[i].name, dataUser[i].password,props.roleName[i], dataUser[i].nik,props.deptName[i], props.groupName[i]);\r\n    \r\n//   }\r\n\r\n  \r\n\r\n\r\n\r\n  const kirimuserselected = (jumlah, data)=>{\r\n    return{\r\n      type:\"SELECTEDUSER\",\r\n      payload:{\r\n        selectedUser: jumlah,\r\n        selectedId:data\r\n      }\r\n    }\r\n  }\r\n  let handleLeave = (e)=>{\r\n    \r\n    if(e.target.nodeName==\"INPUT\"){\r\n      e.target.parentNode.parentNode.style.display=\"none\";\r\n    }\r\n    else if(e.target.parentNode==null){\r\n\r\n    }else if(e.target.parentNode.children[0]==null){\r\n\r\n    }else if(e.target.parentNode.children[0].children[0]==null){\r\n\r\n    }\r\n    else{\r\n      e.target.parentNode.children[0].children[0].style.display=\"none\";\r\n    }\r\n  }\r\n  const kirimurowperpage = (jumlah, halaman)=>{\r\n    return{\r\n      type:\"CHANGEROWUSER\",\r\n      payload:{\r\n        jumlah: jumlah,\r\n        halaman:halaman\r\n      }\r\n    }\r\n  }\r\n  let handleEnter = (e)=>{\r\n    if(e.target.parentNode==null){\r\n\r\n    }else if(e.target.parentNode.children[0]==null){\r\n\r\n    }else if(e.target.parentNode.children[0].children[0]==null){\r\n\r\n    }else{\r\n      e.target.parentNode.children[0].children[0].style.display=\"block\";\r\n    }\r\n  }\r\n  const handleRequestSort = (event, property) => {\r\n    const isAsc = orderBy === property && order === 'asc';\r\n    setOrder(isAsc ? 'desc' : 'asc');\r\n    setOrderBy(property);\r\n  };\r\n\r\n  const handleSelectAllClick = (event) => {\r\n    if(selected.length>0){\r\n      dispatch(kirimuserselected(0,[]))\r\n      setSelected([]);\r\n    }\r\n    else if (event.target.checked) {\r\n      const newSelecteds = props.data.map((n) => n[props.schema[0]]);\r\n      let jumlah = newSelecteds.length;\r\n      \r\n   \r\n      dispatch(kirimuserselected(jumlah,newSelecteds))\r\n      setSelected(newSelecteds);\r\n      return;\r\n    }\r\n    dispatch(kirimuserselected(0,[]))\r\n    setSelected([]);\r\n  };\r\n  useEffect(()=>{\r\n    if(selected.length>0){\r\n      setHiding(\"block\");\r\n     \r\n\r\n        \r\n      \r\n    }else{\r\n      setHiding(\"none\")\r\n    }\r\n   \r\n  },[selected])\r\n \r\n  const handleClick = (event, name) => {\r\n    const selectedIndex = selected.indexOf(name);\r\n    \r\n    \r\n    let newSelected = [];\r\n\r\n    if (selectedIndex === -1) {\r\n      newSelected = newSelected.concat(selected, name);\r\n    } else if (selectedIndex === 0) {\r\n      newSelected = newSelected.concat(selected.slice(1));\r\n    } else if (selectedIndex === selected.length - 1) {\r\n      newSelected = newSelected.concat(selected.slice(0, -1));\r\n    } else if (selectedIndex > 0) {\r\n      newSelected = newSelected.concat(\r\n        selected.slice(0, selectedIndex),\r\n        selected.slice(selectedIndex + 1),\r\n      );\r\n    }\r\n    let jumlah = newSelected.length;\r\n\r\n   \r\n    dispatch(kirimuserselected(jumlah,newSelected))\r\n    setSelected(newSelected);\r\n  };\r\n\r\n  const handleChangePage = (event, newPage) => {\r\n    setPage(newPage);\r\n    dispatch(kirimurowperpage(rowsPerPage, newPage+1))\r\n    \r\n   \r\n  };\r\n  useEffect(()=>{\r\n    console.log(rowsPerPage+\" \"+page)\r\n  }, [page])\r\n  const handleChangeRowsPerPage = (event) => {\r\n    setRowsPerPage(parseInt(event.target.value, 10));\r\n    dispatch(kirimurowperpage(event.target.value, 1))\r\n    setPage(0);\r\n  };\r\n\r\n  const handleChangeDense = (event) => {\r\n    setDense(event.target.checked);\r\n  };\r\n\r\n  const isSelected = (name) => selected.indexOf(name) !== -1;\r\n\r\n  const emptyRows = rowsPerPage - Math.min(rowsPerPage, rows.length - page * rowsPerPage);\r\n  // console.log(rows)\r\n  return (\r\n    <div className={classes.root}>\r\n      <Paper className={classes.paper}>\r\n      {/* <Tabs>\r\n        <div label=\"Gator\">\r\n          See ya later, <em>Alligator</em>!\r\n        </div>\r\n        <div label=\"Croc\">\r\n          After 'while, <em>Crocodile</em>!\r\n        </div>\r\n        <div label=\"Sarcosuchus\">\r\n          Nothing to see here, this tab is <em>extinct</em>!\r\n        </div>\r\n      </Tabs> */}\r\n        {/* <EnhancedTableToolbar numSelected={selected.length} /> */}\r\n        <TableContainer>\r\n         \r\n          <Table\r\n            fixedHeader={true}\r\n            className={classes.table}\r\n            aria-labelledby=\"tableTitle\"\r\n            size={'small'}\r\n            aria-label=\"enhanced table\"\r\n          >\r\n            <EnhancedTableHead\r\n             \r\n              classes={classes}\r\n              numSelected={selected.length}\r\n              order={order}\r\n              orderBy={orderBy}\r\n              onSelectAllClick={handleSelectAllClick}\r\n              onRequestSort={handleRequestSort}\r\n              rowCount={props.jumlahdata}\r\n              schema={props.schema}\r\n              \r\n            />\r\n            <TableBody>\r\n              {\r\n                \r\n                props.data.map((row, index) => {\r\n                  const isItemSelected = isSelected(row[props.schema[0]]);\r\n                  const labelId = `enhanced-table-checkbox-${row[props.schema[0]]}`;\r\n                  \r\n                  return (\r\n                    <TableRow\r\n                    id=\"rowcheck\"\r\n                    hover\r\n                \r\n                    className={classes.tableRow}\r\n                    classes={{ hover: classes.hover, selected:classes.selected }}\r\n                    style={{cursor:\"pointer\"}}\r\n                    onMouseEnter={selected.length==0?handleEnter:null}\r\n                    onMouseLeave={selected.length==0?handleLeave:null}\r\n                    onClick={(event) => handleClick(event, row[props.schema[0]])}\r\n                    \r\n                    role=\"checkbox\"\r\n                    aria-checked={isItemSelected}\r\n                    tabIndex={1}\r\n                  \r\n                    key={index}\r\n                    selected={isItemSelected}\r\n                    >\r\n                      <TableCell  padding=\"checkbox\">\r\n                        <Checkbox style={{display:hiding}}\r\n                          checked={isItemSelected}\r\n                          icon={<RadioButtonUncheckedIcon></RadioButtonUncheckedIcon>}\r\n                          checkedIcon={<CheckCircleIcon></CheckCircleIcon>}\r\n                          color = \"primary\"\r\n                          inputProps={{ 'aria-labelledby': labelId }}\r\n                        />\r\n                      </TableCell>\r\n                      <TableCell key={\"nowrap\"}>\r\n                      {index+1+(rowsPerPage*(page+1)-rowsPerPage)}\r\n                      \r\n                      </TableCell>\r\n                      {props.schema.map((field, index1)=>{\r\n                          if(index1==0){\r\n\r\n                          }\r\n                          \r\n                          else{\r\n                           return(\r\n                            \r\n                            <TableCell key={index1} >\r\n\r\n                            {row[field].length>15 && !isItemSelected?row[field].slice(0, 15).concat('...'):row[field].length>50?row[field].slice(0, 50).concat('...'):row[field]}\r\n                            </TableCell>\r\n\r\n                           );\r\n                          } \r\n                      })}\r\n                     \r\n                      {/* <TableCell  >{row.name}</TableCell>\r\n                      \r\n                      <TableCell >{row.password}</TableCell>\r\n                      <TableCell  >{row.role}</TableCell>\r\n                      <TableCell >{row.nik}</TableCell>\r\n                      \r\n                      <TableCell  >{row.dept}</TableCell>\r\n                   \r\n                      <TableCell >{row.group}</TableCell> */}\r\n                      \r\n                    </TableRow>\r\n                  );\r\n                })}\r\n           \r\n            </TableBody>\r\n          </Table>\r\n        </TableContainer>\r\n        <TablePagination\r\n          rowsPerPageOptions={[5, 10, 25]}\r\n          component=\"div\"\r\n          count={props.jumlahdata}\r\n          rowsPerPage={rowsPerPage}\r\n          page={page}\r\n          onChangePage={handleChangePage}\r\n          onChangeRowsPerPage={handleChangeRowsPerPage}\r\n        />\r\n      </Paper>\r\n      {/* <FormControlLabel\r\n        control={<Switch checked={dense} onChange={handleChangeDense} />}\r\n        label=\"Dense padding\"\r\n      /> */}\r\n    </div>\r\n  );\r\n}"],"sourceRoot":""}