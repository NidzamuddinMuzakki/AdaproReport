{"version":3,"sources":["components/TableLog/index.js","components/PopUpLog/PopUpLog.js","views/Adapro/Log/Log.js","components/tabkomponen/tabs.js","components/Skeleton.js","../node_modules/date-fns/_lib/format/longFormatters/index.js","../node_modules/date-fns/esm/_lib/toInteger/index.js","../node_modules/date-fns/esm/_lib/requiredArgs/index.js","../node_modules/date-fns/esm/toDate/index.js","../node_modules/date-fns/esm/addDays/index.js","../node_modules/date-fns/esm/addMilliseconds/index.js","../node_modules/date-fns/esm/addMinutes/index.js","../node_modules/date-fns/esm/addHours/index.js","../node_modules/date-fns/esm/addMonths/index.js","../node_modules/date-fns/esm/addYears/index.js","../node_modules/date-fns/esm/compareAsc/index.js","../node_modules/date-fns/esm/differenceInYears/index.js","../node_modules/date-fns/esm/differenceInCalendarYears/index.js","../node_modules/date-fns/esm/differenceInMonths/index.js","../node_modules/date-fns/esm/differenceInCalendarMonths/index.js","../node_modules/date-fns/esm/_lib/getTimezoneOffsetInMilliseconds/index.js","../node_modules/date-fns/esm/startOfDay/index.js","../node_modules/date-fns/esm/differenceInCalendarDays/index.js","../node_modules/date-fns/esm/differenceInDays/index.js","../node_modules/date-fns/esm/differenceInMilliseconds/index.js","../node_modules/date-fns/esm/differenceInHours/index.js","../node_modules/date-fns/esm/differenceInMinutes/index.js","../node_modules/date-fns/esm/endOfDay/index.js","../node_modules/date-fns/esm/endOfWeek/index.js","../node_modules/date-fns/esm/endOfYear/index.js","../node_modules/date-fns/esm/isValid/index.js","../node_modules/date-fns/esm/locale/en-US/_lib/formatDistance/index.js","../node_modules/date-fns/esm/locale/_lib/buildFormatLongFn/index.js","../node_modules/date-fns/esm/locale/en-US/_lib/formatLong/index.js","../node_modules/date-fns/esm/locale/en-US/_lib/formatRelative/index.js","../node_modules/date-fns/esm/locale/_lib/buildLocalizeFn/index.js","../node_modules/date-fns/esm/locale/_lib/buildMatchFn/index.js","../node_modules/date-fns/esm/locale/en-US/_lib/match/index.js","../node_modules/date-fns/esm/locale/_lib/buildMatchPatternFn/index.js","../node_modules/date-fns/esm/locale/en-US/index.js","../node_modules/date-fns/esm/locale/en-US/_lib/localize/index.js","../node_modules/date-fns/esm/subMilliseconds/index.js","../node_modules/date-fns/esm/_lib/addLeadingZeros/index.js","../node_modules/date-fns/esm/_lib/format/lightFormatters/index.js","../node_modules/date-fns/esm/_lib/getUTCDayOfYear/index.js","../node_modules/date-fns/esm/_lib/startOfUTCISOWeek/index.js","../node_modules/date-fns/esm/_lib/getUTCISOWeekYear/index.js","../node_modules/date-fns/esm/_lib/getUTCISOWeek/index.js","../node_modules/date-fns/esm/_lib/startOfUTCISOWeekYear/index.js","../node_modules/date-fns/esm/_lib/startOfUTCWeek/index.js","../node_modules/date-fns/esm/_lib/getUTCWeekYear/index.js","../node_modules/date-fns/esm/_lib/getUTCWeek/index.js","../node_modules/date-fns/esm/_lib/startOfUTCWeekYear/index.js","../node_modules/date-fns/esm/_lib/format/formatters/index.js","../node_modules/date-fns/esm/_lib/format/longFormatters/index.js","../node_modules/date-fns/esm/_lib/protectedTokens/index.js","../node_modules/date-fns/esm/format/index.js","../node_modules/date-fns/esm/isAfter/index.js","../node_modules/date-fns/esm/isBefore/index.js","../node_modules/date-fns/esm/startOfHour/index.js","../node_modules/date-fns/esm/_lib/assign/index.js","../node_modules/date-fns/esm/_lib/setUTCDay/index.js","../node_modules/date-fns/esm/parse/_lib/parsers/index.js","../node_modules/date-fns/esm/_lib/setUTCWeek/index.js","../node_modules/date-fns/esm/_lib/setUTCISOWeek/index.js","../node_modules/date-fns/esm/_lib/setUTCISODay/index.js","../node_modules/date-fns/esm/parse/index.js","../node_modules/date-fns/esm/getDaysInMonth/index.js","../node_modules/date-fns/esm/startOfMonth/index.js","../node_modules/date-fns/esm/endOfMonth/index.js","../node_modules/date-fns/esm/startOfWeek/index.js","../node_modules/date-fns/esm/startOfYear/index.js","../node_modules/@date-io/date-fns/build/index.esm.js","../node_modules/date-fns/esm/addSeconds/index.js","../node_modules/date-fns/esm/addWeeks/index.js","../node_modules/date-fns/esm/differenceInQuarters/index.js","../node_modules/date-fns/esm/differenceInWeeks/index.js","../node_modules/date-fns/esm/differenceInSeconds/index.js","../node_modules/date-fns/esm/getHours/index.js","../node_modules/date-fns/esm/setHours/index.js","../node_modules/date-fns/esm/setMinutes/index.js","../node_modules/date-fns/esm/getSeconds/index.js","../node_modules/date-fns/esm/setSeconds/index.js","../node_modules/date-fns/esm/isSameDay/index.js","../node_modules/date-fns/esm/isSameMonth/index.js","../node_modules/date-fns/esm/isSameYear/index.js","../node_modules/date-fns/esm/isSameHour/index.js","../node_modules/date-fns/esm/getYear/index.js","../node_modules/date-fns/esm/setYear/index.js","../node_modules/date-fns/esm/isEqual/index.js","../node_modules/date-fns/esm/isWithinInterval/index.js","../node_modules/date-fns/esm/setMonth/index.js","../node_modules/date-fns/esm/eachDayOfInterval/index.js","views/Adapro/Kerno/configKey.js","views/Adapro/filter.js","../node_modules/@material-ui/lab/esm/Skeleton/Skeleton.js","../node_modules/@material-ui/core/esm/Tooltip/Tooltip.js"],"names":["EnhancedTableHead","props","classes","onSelectAllClick","order","orderBy","headCells","numSelected","rowCount","onRequestSort","i","schema","_step","_iterator","Object","createForOfIteratorHelper","s","n","done","key","value","push","id","numeric","disablePadding","label","err","e","f","react_default","a","createElement","TableHead","TableRow","map","headCell","TableCell","padding","sortDirection","makeStyles","theme","root","paddingLeft","spacing","paddingRight","highlight","palette","type","color","backgroundColor","text","primary","secondary","dark","title","flex","useStyles","width","paper","marginBottom","table","minWidth","tableRow","&$selected,&$hover:hover","hover","selected","visuallyHidden","border","clip","height","margin","overflow","position","top","EnhancedTable","dispatch","useSelector","state","userSettingSelected","useDispatch","_React$useState","React","useState","_React$useState2","slicedToArray","setHiding","_React$useState3","_React$useState4","setOrder","_React$useState5","_React$useState6","setOrderBy","_React$useState7","_React$useState8","setSelected","_React$useState9","_React$useState10","page","setPage","_React$useState11","_React$useState12","_React$useState13","_React$useState14","rowsPerPage","setRowsPerPage","createData","no","deptName","groupName","crtDate","updDate","rows","dataUser","data","nomorTogel","length","dept_id","dept_name","created_time","updated_time","kirimuserselected","jumlah","payload","selectedUser","selectedId","kirimurowperpage","halaman","useEffect","Math","min","className","Paper","TableContainer","Table","aria-labelledby","size","aria-label","event","target","checked","newSelecteds","property","jumlahdata","TableBody","row","index","name","isItemSelected","indexOf","concat","style","cursor","role","aria-checked","tabIndex","field","index1","action_information","split","Button","onClick","newSelected","handleClick","TablePagination","paddingTop","rowsPerPageOptions","component","count","onChangePage","newPage","onChangeRowsPerPage","parseInt","CheckBoxOutlineBlank_default","CheckBox_default","back","background","control","popup","&:hover","boxShadow","DialogTitle","withStyles","closeButton","right","grey","children","onClose","other","objectWithoutProperties","assign","disableTypography","Typography","variant","IconButton","Close_default","DialogContent","MuiDialogContent","DialogActions","MuiDialogActions","CustomizedDialogs","_React$useState19","dataDetail","setDataDetail","dataDetailBefore","setDataDetailBefore","dataDetailAfter","setDataDetailAfter","dataDetailColoumns","setDataDetailColoumns","open","setOpen","Date","prototype","toDateInputValue","local","this","setMinutes","getMinutes","getTimezoneOffset","toJSON","slice","dataMenuRedux","menupilihan","menu","_React$useState15","_React$useState16","setDataGroup","_React$useState17","role_name","role_id","group_name","group_id","branch_id","branch_name","menu_id","report_id","module_id","menu_url","defineProperty","_React$useState18","dataChange","setDataChange","actionForm","getDetail","popupDepart","isOpen","popupGroup","useCallback","token","localStorage","getItem","API","post","action_id","info_data","then","uaja","ambilafter","data_after","ambilbefore","data_before","parseAmbilafter","values","JSON","parse","parseAmbilbefore","columns","keys","console","log","dataMenuAction","menubaru","Menu","uuu","Name","_step2","_iterator2","kirimisOpen","resetForm","objectSpread2","_setDataChange","handleClose","memo","selectedDetail","Dialog","fullWidth","maxWidth","PopUpLog_DialogTitle","display","justifyContent","alignItems","Person_default","marginLeft","lineHeight","fontFamily","PopUpLog_DialogContent","Grid","container","item","xs","sm","fontWeight","borderBottom","PopUpLog_DialogActions","Button_Button","autoFocus","alert","catch","menu_desc","Log","_useState","_useState2","dataLogAll","setLogAll","_useState3","_useState4","_useState5","_useState6","filterOpen","setfilterOpen","setGroupName","_useState7","_useState8","setActionForm","_useState9","_useState10","setSelectedDetail","dataSelected","userAcces","rowperpageDepart","rowperpageLog","_useState11","_useState12","setJumlahData","MenuAccess","_useState13","_useState14","loading","setLoading","_useState15","access_view","access_create","access_update","access_delete","_useState16","setMenu","setSchema","kirimisOpenDepart","kirimSelected","arr","toConsumableArray","rowAdd","rowEdit","tableFilter","rowDelete","fetches","hasil","_loop","Promise","all","getLogAll","getSelected","renderAll","hal","rowperpage","ficos","arguments","undefined","per_page","count_data","marginTop","Skeleton","Tooltip","fontSize","filter","__webpack_require__","d","__webpack_exports__","Variants","react__WEBPACK_IMPORTED_MODULE_0__","react__WEBPACK_IMPORTED_MODULE_0___default","_material_ui_lab_Skeleton__WEBPACK_IMPORTED_MODULE_1__","dateLongFormatter","pattern","formatLong","date","timeLongFormatter","time","exports","default","_default","p","P","dateTimeFormat","matchResult","match","datePattern","timePattern","dateTime","replace","module","toInteger","dirtyNumber","NaN","number","Number","isNaN","ceil","floor","requiredArgs","required","args","TypeError","toDate","argument","argStr","toString","call","getTime","warn","Error","stack","addDays","dirtyDate","dirtyAmount","amount","setDate","getDate","addMilliseconds","timestamp","MILLISECONDS_IN_MINUTE","MILLISECONDS_IN_HOUR","addMonths","dayOfMonth","endOfDesiredMonth","setMonth","getMonth","setFullYear","getFullYear","addYears","compareAsc","dirtyDateLeft","dirtyDateRight","dateLeft","dateRight","diff","differenceInYears","sign","difference","abs","differenceInCalendarYears","result","differenceInMonths","differenceInCalendarMonths","getTimezoneOffsetInMilliseconds_MILLISECONDS_IN_MINUTE","getDateMillisecondsPart","getTimezoneOffsetInMilliseconds","baseTimezoneOffset","setSeconds","millisecondsPartOfTimezoneOffset","startOfDay","setHours","MILLISECONDS_IN_DAY","compareLocalAsc","getHours","getSeconds","getMilliseconds","differenceInDays","startOfDayLeft","startOfDayRight","timestampLeft","timestampRight","round","differenceInCalendarDays","differenceInMilliseconds","differenceInHours_MILLISECONDS_IN_HOUR","differenceInMinutes_MILLISECONDS_IN_MINUTE","endOfDay","endOfWeek","dirtyOptions","options","locale","localeWeekStartsOn","weekStartsOn","defaultWeekStartsOn","RangeError","day","getDay","endOfYear","year","isValid","formatDistanceLocale","lessThanXSeconds","one","xSeconds","halfAMinute","lessThanXMinutes","xMinutes","aboutXHours","xHours","xDays","aboutXWeeks","xWeeks","aboutXMonths","xMonths","aboutXYears","xYears","overXYears","almostXYears","buildFormatLongFn","String","defaultWidth","formats","full","long","medium","short","formatRelativeLocale","lastWeek","yesterday","today","tomorrow","nextWeek","buildLocalizeFn","dirtyIndex","valuesArray","context","formattingValues","defaultFormattingWidth","_defaultWidth","_width","argumentCallback","buildMatchFn","dirtyString","string","matchPattern","matchPatterns","defaultMatchWidth","matchedString","parsePatterns","defaultParseWidth","array","predicate","findIndex","test","object","hasOwnProperty","findKey","valueCallback","rest","en_US","code","formatDistance","addSuffix","comparison","formatRelative","_date","_baseDate","_options","localize","ordinalNumber","_dirtyOptions","rem100","era","narrow","abbreviated","wide","quarter","month","dayPeriod","am","pm","midnight","noon","morning","afternoon","evening","night","parsePattern","parseResult","any","firstWeekContainsDate","subMilliseconds","addLeadingZeros","targetLength","output","lightFormatters","y","signedYear","getUTCFullYear","M","getUTCMonth","getUTCDate","dayPeriodEnumValue","getUTCHours","toUpperCase","h","H","m","getUTCMinutes","getUTCSeconds","S","numberOfDigits","milliseconds","getUTCMilliseconds","pow","getUTCDayOfYear_MILLISECONDS_IN_DAY","startOfUTCISOWeek","getUTCDay","setUTCDate","setUTCHours","getUTCISOWeekYear","fourthOfJanuaryOfNextYear","setUTCFullYear","startOfNextYear","fourthOfJanuaryOfThisYear","startOfThisYear","MILLISECONDS_IN_WEEK","getUTCISOWeek","fourthOfJanuary","startOfUTCISOWeekYear","startOfUTCWeek","getUTCWeekYear","localeFirstWeekContainsDate","defaultFirstWeekContainsDate","firstWeekOfNextYear","firstWeekOfThisYear","getUTCWeek_MILLISECONDS_IN_WEEK","getUTCWeek","firstWeek","startOfUTCWeekYear","dayPeriodEnum","formatTimezoneShort","offset","dirtyDelimiter","absOffset","hours","minutes","delimiter","formatTimezoneWithOptionalMinutes","formatTimezone","format_formatters","G","unit","Y","signedWeekYear","weekYear","R","u","Q","q","L","w","week","I","isoWeek","D","dayOfYear","setUTCMonth","getUTCDayOfYear","E","dayOfWeek","localDayOfWeek","c","isoDayOfWeek","b","B","K","k","X","_localize","timezoneOffset","_originalDate","x","O","z","t","originalDate","T","format_longFormatters","protectedDayOfYearTokens","protectedWeekYearTokens","isProtectedDayOfYearToken","isProtectedWeekYearToken","throwProtectedError","format","input","formattingTokensRegExp","longFormattingTokensRegExp","escapedStringRegExp","doubleQuoteRegExp","unescapedLatinCharacterRegExp","format_format","dirtyFormatStr","formatStr","utcDate","formatterOptions","substring","firstCharacter","longFormatter","join","formatter","useAdditionalWeekYearTokens","useAdditionalDayOfYearTokens","isAfter","dirtyDateToCompare","dateToCompare","isBefore","startOfHour","assign_assign","dirtyObject","setUTCDay","dirtyDay","parsers_MILLISECONDS_IN_HOUR","parsers_MILLISECONDS_IN_MINUTE","MILLISECONDS_IN_SECOND","numericPatterns","hour23h","hour24h","hour11h","hour12h","minute","second","singleDigit","twoDigits","threeDigits","fourDigits","anyDigitsSigned","singleDigitSigned","twoDigitsSigned","threeDigitsSigned","fourDigitsSigned","timezonePatterns","parseNumericPattern","parseTimezonePattern","seconds","parseAnyDigitsSigned","parseNDigits","RegExp","parseNDigitsSigned","dayPeriodEnumToHours","enumValue","normalizeTwoDigitYear","twoDigitYear","currentYear","isCommonEra","absCurrentYear","rangeEnd","DAYS_IN_MONTH","DAYS_IN_MONTH_LEAP_YEAR","isLeapYearIndex","_lib_parsers","priority","set","flags","incompatibleTokens","isTwoDigitYear","validate","normalizedTwoDigitYear","_match","_flags","firstWeekOfYear","dirtyWeek","setUTCWeek","dirtyISOWeek","setUTCISOWeek","subPriority","isLeapYear","wholeWeekDays","setUTCISODay","isPM","setUTCMinutes","setUTCSeconds","setUTCMilliseconds","timestampIsSet","_token","TIMEZONE_UNIT_PRIORITY","parse_formattingTokensRegExp","parse_longFormattingTokensRegExp","parse_escapedStringRegExp","parse_doubleQuoteRegExp","notWhitespaceRegExp","parse_unescapedLatinCharacterRegExp","dateToSystemTimezone","convertedDate","getDaysInMonth","monthIndex","lastDayOfMonth","startOfMonth","endOfMonth","startOfWeek","startOfYear","cleanDate","defaultFormats","fullDate","fullDateWithWeekday","fullDateTime","fullDateTime12h","fullDateTime24h","fullTime","fullTime12h","fullTime24h","hours12h","hours24h","keyboardDate","keyboardDateTime","keyboardDateTime12h","keyboardDateTime24h","monthAndDate","monthAndYear","monthShort","weekday","weekdayShort","normalDate","normalDateWithWeekday","shortDate","index_esm_DateFnsUtils","DateFnsUtils","_a","_b","lib","is12HourCycleInCurrentLocale","getFormatHelperText","longFormatters_default","toLocaleLowerCase","getCurrentLocaleCode","addSeconds","addMinutes","addHours","addWeeks","getDiff","comparing","differenceInQuarters","differenceInWeeks","differenceInHours","differenceInMinutes","differenceInSeconds","dirtyHours","dirtyMinutes","dirtySeconds","isSameDay","dateLeftStartOfDay","dateRightStartOfDay","isSameMonth","isSameYear","isSameHour","dateLeftStartOfHour","dateRightStartOfHour","getYear","setYear","dirtyYear","toJsDate","formatString","dirtyDateString","dirtyFormatString","dirtyReferenceDate","dateString","subFnOptions","setters","tokens","usedTokens","parser","Array","isArray","incompatibleToken","_i","usedToken","fullToken","uniquePrioritySetters","setter","sort","setterArray","formatKey","formatByString","isEqual","dirtyLeftDate","dirtyRightDate","isNull","isAfterDay","isBeforeDay","isBeforeYear","isAfterYear","isWithinRange","dirtyInterval","interval","startTime","start","endTime","end","isWithinInterval","formatNumber","numberToFormat","dirtyMonth","dateWithDesiredMonth","daysInMonth","getMeridiemText","ampm","getNextMonth","getPreviousMonth","getMonthArray","monthArray","prevMonth","mergeDateAndTime","getWeekdays","_this","now","startDate","dates","currentDate","step","eachDayOfInterval","getWeekArray","current","nestedWeeks","weekNumber","getYearRange","endDate","years","Widgets","TextWidget","NumberWidget","SliderWidget","RangeWidget","SelectWidget","MultiSelectWidget","DateWidget","BooleanWidget","TimeWidget","DateTimeWidget","ValueFieldWidget","Operators","ProximityOperator","InitialConfig","MaterialConfig","queryValue","QbUtils","uuid","DemoQueryBuilder","classCallCheck","_super","cari","Stringsql","sqlFormat","tree","config","jsonString","jsonLogicFormat","stringify","logic","render","reset","onChange","renderBuilder","setState","checkTree","loadTree","immutableTree","fields","qty","fieldSettings","valueSources","preferWidgets","price","max","listValues","is_promotion","operators","sss","prev","_this2","obj","cuy","from","Set","find","Component","_babel_runtime_helpers_esm_extends__WEBPACK_IMPORTED_MODULE_0__","_babel_runtime_helpers_esm_objectWithoutProperties__WEBPACK_IMPORTED_MODULE_1__","react__WEBPACK_IMPORTED_MODULE_2__","clsx__WEBPACK_IMPORTED_MODULE_3__","_material_ui_core_styles__WEBPACK_IMPORTED_MODULE_5__","_material_ui_core_styles__WEBPACK_IMPORTED_MODULE_6__","ref","_props$animation","animation","_props$component","_props$variant","hasChildren","Boolean","withChildren","fitContent","heightAuto","transformOrigin","transform","borderRadius","shape","&:empty:before","content","rect","circle","pulse","@keyframes pulse","0%","opacity","50%","100%","wave","&::after","action","bottom","left","@keyframes wave","60%","& > *","visibility","_babel_runtime_helpers_esm_slicedToArray__WEBPACK_IMPORTED_MODULE_1__","_babel_runtime_helpers_esm_objectWithoutProperties__WEBPACK_IMPORTED_MODULE_2__","_babel_runtime_helpers_esm_defineProperty__WEBPACK_IMPORTED_MODULE_3__","react__WEBPACK_IMPORTED_MODULE_4__","react_dom__WEBPACK_IMPORTED_MODULE_5__","clsx__WEBPACK_IMPORTED_MODULE_7__","_material_ui_utils__WEBPACK_IMPORTED_MODULE_8__","_styles_colorManipulator__WEBPACK_IMPORTED_MODULE_9__","_styles_withStyles__WEBPACK_IMPORTED_MODULE_10__","_utils_capitalize__WEBPACK_IMPORTED_MODULE_11__","_Grow__WEBPACK_IMPORTED_MODULE_12__","_Popper__WEBPACK_IMPORTED_MODULE_13__","_utils_useForkRef__WEBPACK_IMPORTED_MODULE_14__","_utils_unstable_useId__WEBPACK_IMPORTED_MODULE_15__","_utils_setRef__WEBPACK_IMPORTED_MODULE_16__","_utils_useIsFocusVisible__WEBPACK_IMPORTED_MODULE_17__","_utils_useControlled__WEBPACK_IMPORTED_MODULE_18__","_styles_useTheme__WEBPACK_IMPORTED_MODULE_19__","hystersisOpen","hystersisTimer","_props$arrow","arrow","_props$disableFocusLi","disableFocusListener","_props$disableHoverLi","disableHoverListener","_props$disableTouchLi","disableTouchListener","_props$enterDelay","enterDelay","_props$enterNextDelay","enterNextDelay","_props$enterTouchDela","enterTouchDelay","idProp","_props$interactive","interactive","_props$leaveDelay","leaveDelay","_props$leaveTouchDela","leaveTouchDelay","onOpen","openProp","_props$placement","placement","_props$PopperComponen","PopperComponent","PopperProps","_props$TransitionComp","TransitionComponent","TransitionProps","childNode","setChildNode","arrowRef","setArrowRef","ignoreNonTouchEvents","closeTimer","enterTimer","leaveTimer","touchTimer","_useControlled","controlled","_useControlled2","openState","setOpenState","clearTimeout","handleOpen","handleEnter","forward","childrenProps","onMouseOver","removeAttribute","persist","setTimeout","_useIsFocusVisible","isFocusVisible","onBlurVisible","focusVisibleRef","childIsFocusVisible","setChildIsFocusVisible","handleFocus","currentTarget","onFocus","transitions","duration","shortest","handleLeave","onBlur","onMouseLeave","detectTouchStart","onTouchStart","handleUseRef","handleFocusRef","handleOwnRef","instance","handleRef","shouldShowNativeTitle","aria-describedby","interactiveWrapperListeners","onTouchEnd","mergedPopperProps","popperOptions","modifiers","enabled","element","popper","popperInteractive","popperArrow","anchorEl","transition","_ref","placementInner","TransitionPropsInner","timeout","shorter","tooltip","touch","tooltipArrow","zIndex","pointerEvents","&[x-placement*=\"bottom\"] $arrow","marginRight","&::before","&[x-placement*=\"top\"] $arrow","&[x-placement*=\"right\"] $arrow","&[x-placement*=\"left\"] $arrow","common","white","typography","pxToRem","wordWrap","fontWeightMedium","boxSizing","fontWeightRegular","tooltipPlacementLeft","breakpoints","up","tooltipPlacementRight","tooltipPlacementTop","tooltipPlacementBottom","flip"],"mappings":"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","file":"static/js/24.68866115.chunk.js","sourcesContent":["import React, { useEffect } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport clsx from 'clsx';\r\nimport { lighten, makeStyles } from '@material-ui/core/styles';\r\nimport Table from '@material-ui/core/Table';\r\nimport TableBody from '@material-ui/core/TableBody';\r\nimport TableCell from '@material-ui/core/TableCell';\r\nimport TableContainer from '@material-ui/core/TableContainer';\r\nimport TableHead from '@material-ui/core/TableHead';\r\nimport TablePagination from '@material-ui/core/TablePagination';\r\nimport TableRow from '@material-ui/core/TableRow';\r\nimport TableSortLabel from '@material-ui/core/TableSortLabel';\r\nimport Toolbar from '@material-ui/core/Toolbar';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport Paper from '@material-ui/core/Paper';\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport Tooltip from '@material-ui/core/Tooltip';\r\nimport FormControlLabel from '@material-ui/core/FormControlLabel';\r\nimport Switch from '@material-ui/core/Switch';\r\nimport DeleteIcon from '@material-ui/icons/Delete';\r\nimport FilterListIcon from '@material-ui/icons/FilterList';\r\nimport set from 'core-js/es6/set';\r\nimport {useSelector,useDispatch} from 'react-redux';\r\nimport Tabs from  '../tabkomponen/tabs.js';\r\nimport CheckCircleIcon from '@material-ui/icons/CheckCircle';\r\nimport RadioButtonUncheckedIcon from '@material-ui/icons/RadioButtonUnchecked';\r\nimport RemoveCircleIcon from '@material-ui/icons/RemoveCircle';\r\nimport { Button} from 'reactstrap'\r\n\r\n\r\n\r\nfunction descendingComparator(a, b, orderBy) {\r\n  if (b[orderBy] < a[orderBy]) {\r\n    return -1;\r\n  }\r\n  if (b[orderBy] > a[orderBy]) {\r\n    return 1;\r\n  }\r\n  return 0;\r\n}\r\n\r\nfunction getComparator(order, orderBy) {\r\n  return order === 'desc'\r\n    ? (a, b) => descendingComparator(a, b, orderBy)\r\n    : (a, b) => -descendingComparator(a, b, orderBy);\r\n}\r\n\r\nfunction stableSort(array, comparator) {\r\n  const stabilizedThis = array.map((el, index) => [el, index]);\r\n  stabilizedThis.sort((a, b) => {\r\n    const order = comparator(a[0], b[0]);\r\n    if (order !== 0) return order;\r\n    return a[1] - b[1];\r\n  });\r\n  return stabilizedThis.map((el) => el[0]);\r\n}\r\n\r\n\r\nfunction EnhancedTableHead(props) {\r\n  const { classes, onSelectAllClick, order, orderBy, numSelected, rowCount, onRequestSort } = props;\r\n  const createSortHandler = (property) => (event) => {\r\n    onRequestSort(event, property);\r\n  };\r\n\r\n  // console.log(\"hay\"+props.data)\r\n  const headCells = [];\r\n  let i=0;\r\n  if(props.schema){\r\n    for(const key of props.schema ){\r\n      if(i==0){\r\n        headCells.push({ id: 'no', numeric: true, disablePadding: true, label: 'No' })\r\n  \r\n      }else if(i==5){\r\n        headCells.push({ id: \"Action\", numeric: false, disablePadding: false, label: \"Action\" })\r\n      }\r\n      else if(i>5){\r\n\r\n      }\r\n      else{\r\n        headCells.push({ id: key, numeric: false, disablePadding: false, label: key })\r\n      }\r\n      i++;\r\n    }\r\n    \r\n  }\r\n\r\n\r\n  // const headCells = [\r\n  //   { id: 'no', numeric: true, disablePadding: true, label: 'No' },\r\n  //   { id: 'dept_id', numeric: false, disablePadding: false, label: 'ID' },\r\n  //   { id: 'dept_name', numeric: false, disablePadding: false, label: 'Department' },\r\n  //   { id: 'group_name', numeric: false, disablePadding: false, label: 'Group' },\r\n  //   { id: 'create_time', numeric: false, disablePadding: false, label: 'Create Time' },\r\n  //   { id: 'update_time', numeric: false, disablePadding: false, label: 'Update Time' },\r\n \r\n\r\n\r\n  // ];\r\n  \r\n  return (\r\n  \r\n    <TableHead>\r\n      <TableRow>\r\n        {/* <TableCell padding=\"checkbox\">\r\n          <Checkbox\r\n           color = \"primary\"\r\n           indeterminateIcon={<RemoveCircleIcon/>}\r\n           icon={<RadioButtonUncheckedIcon></RadioButtonUncheckedIcon>}\r\n           checkedIcon={<CheckCircleIcon></CheckCircleIcon>}\r\n            indeterminate={numSelected > 0 && numSelected < rowCount}\r\n            checked={rowCount > 0 && numSelected === rowCount}\r\n            onChange={onSelectAllClick}\r\n            inputProps={{ 'aria-label': 'select all desserts' }}\r\n          />\r\n        </TableCell> */}\r\n        {headCells.map((headCell) => (\r\n          <TableCell\r\n            key={headCell.id}\r\n           \r\n            padding={'default'}\r\n            sortDirection={orderBy === headCell.id ? order : false}\r\n          >\r\n           \r\n              {headCell.label}\r\n             \r\n           \r\n          </TableCell>\r\n        ))}\r\n      </TableRow>\r\n    </TableHead>\r\n  );\r\n}\r\n\r\nEnhancedTableHead.propTypes = {\r\n  classes: PropTypes.object.isRequired,\r\n  numSelected: PropTypes.number.isRequired,\r\n  onRequestSort: PropTypes.func.isRequired,\r\n  onSelectAllClick: PropTypes.func.isRequired,\r\n  order: PropTypes.oneOf(['asc', 'desc']).isRequired,\r\n  orderBy: PropTypes.string.isRequired,\r\n  rowCount: PropTypes.number.isRequired,\r\n};\r\n\r\nconst useToolbarStyles = makeStyles((theme) => ({\r\n  root: {\r\n    paddingLeft: theme.spacing(2),\r\n    paddingRight: theme.spacing(1),\r\n  },\r\n  highlight:\r\n    theme.palette.type === 'light'\r\n      ? {\r\n        color: \"#0078d4\",\r\n        backgroundColor: \"#c7e0f4\",\r\n        }\r\n      : {\r\n          color: theme.palette.text.primary,\r\n          backgroundColor: theme.palette.secondary.dark,\r\n        },\r\n  title: {\r\n    flex: '1 1 100%',\r\n  },\r\n}));\r\n\r\nconst EnhancedTableToolbar = (props) => {\r\n  const classes = useToolbarStyles();\r\n  const { numSelected } = props;\r\n\r\n  return (\r\n    <Toolbar\r\n      className={clsx(classes.root, {\r\n        [classes.highlight]: numSelected > 0,\r\n      })}\r\n    >\r\n      {numSelected > 0 ? (\r\n        <Typography className={classes.title} color=\"inherit\" variant=\"subtitle1\" component=\"div\">\r\n          {numSelected} selected\r\n        </Typography>\r\n      ) : (\r\n        <Typography className={classes.title} variant=\"h6\" id=\"tableTitle\" component=\"div\">\r\n          {props.name}\r\n        </Typography>\r\n      )}\r\n\r\n      {/* {numSelected > 0 ? (\r\n        <Tooltip title=\"Delete\">\r\n          <IconButton aria-label=\"delete\">\r\n            <DeleteIcon />\r\n          </IconButton>\r\n        </Tooltip>\r\n      ) : (\r\n        <Tooltip title=\"Filter list\">\r\n          <IconButton aria-label=\"filter list\">\r\n            <FilterListIcon />\r\n          </IconButton>\r\n        </Tooltip>\r\n      )} */}\r\n    </Toolbar>\r\n  );\r\n};\r\n\r\nEnhancedTableToolbar.propTypes = {\r\n  numSelected: PropTypes.number.isRequired,\r\n};\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n    width: '100%',\r\n  },\r\n  paper: {\r\n    width: '100%',\r\n    marginBottom: theme.spacing(2),\r\n  },\r\n  table: {\r\n    minWidth: 400,\r\n  },\r\n  tableRow: {\r\n    \r\n    \"&$selected,&$hover:hover\": {\r\n      backgroundColor: \"#c7e0f4\"\r\n    },\r\n    \r\n  },\r\n  // tableCell: {\r\n  //   \"$hover:hover &\": {\r\n  //     color: \"pink\"\r\n  //   }\r\n  \r\n  hover: {},\r\n  selected: {},\r\n  visuallyHidden: {\r\n    border: 0,\r\n    clip: 'rect(0 0 0 0)',\r\n    height: 1,\r\n    margin: -1,\r\n    overflow: 'hidden',\r\n    padding: 0,\r\n    position: 'absolute',\r\n    top: 20,\r\n    width: 1,\r\n  },\r\n}));\r\n\r\nexport default function EnhancedTable(props) {\r\n  const classes = useStyles();\r\n  const selectedusersetting = useSelector(state =>state.userSettingSelected);\r\n  const dispatch = useDispatch();\r\n  const [hiding, setHiding] = React.useState(\"none\");\r\n  const [order, setOrder] = React.useState('asc');\r\n  const [orderBy, setOrderBy] = React.useState('calories');\r\n  const [selected, setSelected] = React.useState([]);\r\n  const [page, setPage] = React.useState(0);\r\n  const [dense, setDense] = React.useState(false);\r\n  const [rowsPerPage, setRowsPerPage] = React.useState(5);\r\n\r\n  let deptName = [];\r\n  \r\n  function createData(id,no,deptName,groupName ,crtDate, updDate) {\r\n    return { id,no,deptName,groupName,crtDate, updDate };\r\n  }\r\n  const rows = [];\r\n  \r\n  let dataUser = props.data;\r\n  let nomorTogel = rowsPerPage*(page+1)-rowsPerPage;\r\n// console.log(props.deptName[0])\r\n  for(let i=0;i<dataUser.length;i++){\r\n    nomorTogel++;\r\n   \r\n    rows[i] = createData(dataUser[i].dept_id,(nomorTogel),dataUser[i].dept_name,props.groupName[i] ,dataUser[i].created_time, dataUser[i].updated_time);\r\n    \r\n  }\r\n\r\n  \r\n  \r\n\r\n\r\n  const kirimuserselected = (jumlah, data)=>{\r\n    return{\r\n      type:\"SELECTEDUSER\",\r\n      payload:{\r\n        selectedUser: jumlah,\r\n        selectedId:data\r\n      }\r\n    }\r\n  }\r\n  let handleLeave = (e)=>{\r\n    \r\n    if(e.target.nodeName==\"INPUT\"){\r\n      e.target.parentNode.parentNode.style.display=\"none\";\r\n    }\r\n    else if(e.target.parentNode==null){\r\n\r\n    }else if(e.target.parentNode.children[0]==null){\r\n\r\n    }else if(e.target.parentNode.children[0].children[0]==null){\r\n\r\n    }\r\n    else{\r\n      e.target.parentNode.children[0].children[0].style.display=\"none\";\r\n    }\r\n  }\r\n  let handleEnter = (e)=>{\r\n    if(e.target.parentNode==null){\r\n\r\n    }else if(e.target.parentNode.children[0]==null){\r\n\r\n    }else if(e.target.parentNode.children[0].children[0]==null){\r\n\r\n    }else{\r\n      e.target.parentNode.children[0].children[0].style.display=\"block\";\r\n    }\r\n  }\r\n  const handleRequestSort = (event, property) => {\r\n    const isAsc = orderBy === property && order === 'asc';\r\n    setOrder(isAsc ? 'desc' : 'asc');\r\n    setOrderBy(property);\r\n  };\r\n  const kirimurowperpage = (jumlah, halaman)=>{\r\n    return{\r\n      type:\"CHANGEROWBRANCH\",\r\n      payload:{\r\n        jumlah: jumlah,\r\n        halaman:halaman\r\n      }\r\n    }\r\n  }\r\n  const handleSelectAllClick = (event) => {\r\n    if(selected.length>0){\r\n      dispatch(kirimuserselected(0,[]))\r\n      setSelected([]);\r\n    }\r\n    else if (event.target.checked) {\r\n      const newSelecteds = props.data.map((n) => n[props.schema[0]]);\r\n      let jumlah = newSelecteds.length;\r\n      \r\n   \r\n      dispatch(kirimuserselected(jumlah,newSelecteds))\r\n      setSelected(newSelecteds);\r\n      return;\r\n    }\r\n    dispatch(kirimuserselected(0,[]))\r\n    setSelected([]);\r\n  };\r\n  useEffect(()=>{\r\n    if(selected.length>0){\r\n      setHiding(\"block\");\r\n     \r\n\r\n        \r\n      \r\n    }else{\r\n      setHiding(\"none\")\r\n    }\r\n   \r\n  },[selected])\r\n \r\n  const handleClick = (event, name) => {\r\n    const selectedIndex = selected.indexOf(name);\r\n    \r\n    \r\n    let newSelected = [];\r\n\r\n    if (selectedIndex === -1) {\r\n      newSelected = newSelected.concat(selected, name);\r\n    } \r\n   \r\n    // else if (selectedIndex === 0) {\r\n    //   newSelected = newSelected.concat(selected.slice(1));\r\n    // } else if (selectedIndex === selected.length - 1) {\r\n    //   newSelected = newSelected.concat(selected.slice(0, -1));\r\n    // } else if (selectedIndex > 0) {\r\n    //   newSelected = newSelected.concat(\r\n    //     selected.slice(0, selectedIndex),\r\n    //     selected.slice(selectedIndex + 1),\r\n    //   );\r\n    // }\r\n\r\n    let jumlah = newSelected.length;\r\n    props.onClick(newSelected)\r\n    \r\n    dispatch(kirimuserselected(jumlah,newSelected))\r\n    // setSelected(newSelected);\r\n  };\r\n\r\n  const handleChangePage = (event, newPage) => {\r\n    setPage(newPage);\r\n    dispatch(kirimurowperpage(rowsPerPage, newPage+1))\r\n  };\r\n\r\n  const handleChangeRowsPerPage = (event) => {\r\n    setRowsPerPage(parseInt(event.target.value, 10));\r\n    dispatch(kirimurowperpage(event.target.value, 1))\r\n    setPage(0);\r\n    \r\n  };\r\n\r\n  const handleChangeDense = (event) => {\r\n    setDense(event.target.checked);\r\n  };\r\n\r\n  const isSelected = (name) => selected.indexOf(name) !== -1;\r\n\r\n  const emptyRows = rowsPerPage - Math.min(rowsPerPage, rows.length - page * rowsPerPage);\r\n  // console.log(rows)\r\n  return (\r\n    <div className={classes.root}>\r\n      <Paper className={classes.paper}>\r\n      {/* <Tabs>\r\n        <div label=\"Gator\">\r\n          See ya later, <em>Alligator</em>!\r\n        </div>\r\n        <div label=\"Croc\">\r\n          After 'while, <em>Crocodile</em>!\r\n        </div>\r\n        <div label=\"Sarcosuchus\">\r\n          Nothing to see here, this tab is <em>extinct</em>!\r\n        </div>\r\n      </Tabs> */}\r\n        {/* <EnhancedTableToolbar numSelected={selected.length} /> */}\r\n        <TableContainer>\r\n          <Table\r\n            className={classes.table}\r\n            aria-labelledby=\"tableTitle\"\r\n            size={'small'}\r\n            aria-label=\"enhanced table\"\r\n          >\r\n            <EnhancedTableHead\r\n              classes={classes}\r\n              numSelected={selected.length}\r\n              order={order}\r\n              orderBy={orderBy}\r\n              schema={props.schema}\r\n              onSelectAllClick={handleSelectAllClick}\r\n              onRequestSort={handleRequestSort}\r\n              rowCount={props.jumlahdata}\r\n              \r\n            />\r\n            <TableBody>\r\n              {\r\n                props.data.map((row, index) => {\r\n                  \r\n                  const isItemSelected = isSelected(row[props.schema[0]]);\r\n                  const labelId = `enhanced-table-checkbox-${row[props.schema[0]]}`;\r\n                  \r\n                  return (\r\n                    <TableRow\r\n                      id=\"rowcheck\"\r\n                      hover\r\n                      className={classes.tableRow}\r\n                      classes={{ hover: classes.hover, selected:classes.selected }}\r\n                      style={{cursor:\"pointer\"}}\r\n                    //   onMouseEnter={selected.length==0?handleEnter:null}\r\n                    //   onMouseLeave={selected.length==0?handleLeave:null}\r\n                    //   onClick={(event) => handleClick(event, row[props.schema[0]])}\r\n                      role=\"checkbox\"\r\n                      aria-checked={isItemSelected}\r\n                      tabIndex={1}\r\n                      key={index}\r\n                      selected={isItemSelected}\r\n                    >\r\n                      {/* <TableCell  padding=\"checkbox\">\r\n                        <Checkbox style={{display:hiding}}\r\n                          checked={isItemSelected}\r\n                          icon={<RadioButtonUncheckedIcon></RadioButtonUncheckedIcon>}\r\n                          checkedIcon={<CheckCircleIcon></CheckCircleIcon>}\r\n                          color = \"primary\"\r\n                          inputProps={{ 'aria-labelledby': labelId }}\r\n                        />\r\n                      </TableCell> */}\r\n                     \r\n                      <TableCell >\r\n                        {index+1+(rowsPerPage*(page+1)-rowsPerPage)}\r\n                      </TableCell>\r\n                      {props.schema.map((field, index1)=>{\r\n                          if(index1==0){\r\n\r\n                          }\r\n                          else if(index1==5 && (row.action_information.split(\" \")[0]!=\"view\" && row.action_information.split(\" \")[0]!=\"\") ){\r\n                            return(\r\n                            \r\n                                <TableCell key={index1} >\r\n                                <Button   onClick={(event) => handleClick(event, row[props.schema[0]])} className=\"btn-pill\">Detail</Button>\r\n                                </TableCell>\r\n    \r\n                               ); \r\n                          }\r\n                          else if(index1>5){\r\n                    \r\n                          }\r\n                          else{\r\n                           return(\r\n                            \r\n                            <TableCell key={index1} >\r\n                            {row[field]}\r\n                            </TableCell>\r\n\r\n                           );\r\n                          } \r\n                      })}\r\n                      {/* <TableCell  >\r\n                        {row.id}\r\n                      </TableCell>\r\n                      <TableCell  >{row.deptName}</TableCell>\r\n                      <TableCell  >{row.groupName}</TableCell>\r\n                      <TableCell  >{row.crtDate}</TableCell>\r\n                      <TableCell  >{row.updDate}</TableCell> */}\r\n                      \r\n                      \r\n                      \r\n                    </TableRow>\r\n                  );\r\n                })}\r\n           \r\n            </TableBody>\r\n          </Table>\r\n        </TableContainer>\r\n        <TablePagination\r\n         style={{height:'50px',paddingTop:'-20px'}}\r\n          rowsPerPageOptions={[5, 10, 25]}\r\n          component=\"div\"\r\n          count={props.jumlahdata}\r\n          rowsPerPage={rowsPerPage}\r\n          page={page}\r\n          onChangePage={handleChangePage}\r\n          onChangeRowsPerPage={handleChangeRowsPerPage}\r\n        />\r\n      </Paper>\r\n      {/* <FormControlLabel\r\n        control={<Switch checked={dense} onChange={handleChangeDense} />}\r\n        label=\"Dense padding\"\r\n      /> */}\r\n    </div>\r\n  );\r\n}","import React from 'react';\r\nimport { withStyles, useStyle, makeStyles } from '@material-ui/core/styles';\r\nimport Button from '@material-ui/core/Button';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Dialog from '@material-ui/core/Dialog';\r\nimport Paper from '@material-ui/core/Paper';\r\n\r\nimport Checkbox from '@material-ui/core/Checkbox';\r\n\r\nimport CheckBoxOutlineBlankIcon from '@material-ui/icons/CheckBoxOutlineBlank';\r\nimport CheckBoxIcon from '@material-ui/icons/CheckBox';\r\nimport Switch from '@material-ui/core/Switch';\r\nimport InputLabel from '@material-ui/core/InputLabel';\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Autocomplete from '@material-ui/lab/Autocomplete';\r\nimport MuiDialogTitle from '@material-ui/core/DialogTitle';\r\nimport MuiDialogContent from '@material-ui/core/DialogContent';\r\nimport MuiDialogActions from '@material-ui/core/DialogActions';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport API from './../../api/api';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport { useEffect } from 'react';\r\nimport set from 'core-js/es6/set';\r\nimport DatePicker from './../datepicker/index';\r\nimport { connect } from 'react-redux';\r\nimport PersonIcon from '@material-ui/icons/Person';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { popupDepart } from '../../reducers/PopAll';\r\n\r\n\r\nconst icon = <CheckBoxOutlineBlankIcon fontSize=\"small\" />;\r\nconst checkedIcon = <CheckBoxIcon fontSize=\"small\" />;\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  root: {\r\n   \r\n  },\r\n  back:{\r\n    background:\"#ebeff1\"\r\n  },\r\n  paper: {\r\n    height: 140,\r\n    width: 100,\r\n  },\r\n  control: {\r\n    padding: theme.spacing(2),\r\n  },\r\n  popup:{\r\n    \"&:hover\":{\r\n      boxShadow: \"rgba(0, 0, 0, 0.16) 0px 3px 6px, rgba(0, 0, 0, 0.23) 0px 3px 6px\"\r\n    }\r\n  }\r\n}));\r\nconst styles = (theme) => ({\r\n  root: {\r\n    margin: 0,\r\n\r\n  },\r\n  closeButton: {\r\n    position: 'absolute',\r\n    right: theme.spacing(1),\r\n    top: theme.spacing(1),\r\n    color: theme.palette.grey[500],\r\n  },\r\n});\r\n\r\nconst DialogTitle = withStyles(styles)((props) => {\r\n  const { children, classes, onClose, ...other } = props;\r\n\r\n  return (\r\n    <MuiDialogTitle disableTypography className={classes.root} {...other}>\r\n      <Typography variant=\"h6\">{children}</Typography>\r\n      {onClose ? (\r\n        <IconButton aria-label=\"close\" className={classes.closeButton} onClick={onClose}>\r\n          <CloseIcon />\r\n        </IconButton>\r\n      ) : null}\r\n    </MuiDialogTitle>\r\n  );\r\n});\r\n\r\nconst DialogContent = withStyles((theme) => ({\r\n  root: {\r\n    padding: theme.spacing(2),\r\n  },\r\n}))(MuiDialogContent);\r\n\r\nconst DialogActions = withStyles((theme) => ({\r\n  root: {\r\n    margin: 0,\r\n    padding: theme.spacing(1),\r\n  },\r\n}))(MuiDialogActions);\r\n\r\nexport default function CustomizedDialogs(props) {\r\n  const classes = useStyles();\r\nconst [dataDetail, setDataDetail] = React.useState([]);\r\nconst [dataDetailBefore, setDataDetailBefore] = React.useState([]);\r\nconst [dataDetailAfter, setDataDetailAfter] = React.useState([]);\r\nconst [dataDetailColoumns, setDataDetailColoumns] = React.useState([]);\r\n  const [open, setOpen] = React.useState(false);\r\n  const [label, setLabel] = React.useState([]);\r\n//   console.log(open)\r\n  Date.prototype.toDateInputValue = (function () {\r\n    var local = new Date(this);\r\n    local.setMinutes(this.getMinutes() - this.getTimezoneOffset());\r\n    return local.toJSON().slice(0, 10);\r\n  });\r\n  \r\n\r\n  const selectedusersetting = useSelector(state => state.userSettingSelected);\r\n  const dataMenuRedux = useSelector(state=>state.menupilihan.menu);\r\n  // const [username, setUsername] = React.useState(\"\");\r\n  // const [password, setPassword] = React.useState(\"\");\r\n  // const [name, setName] = React.useState(\"\");\r\n  // const [userid, setUserId] = React.useState(\"\");\r\n  const [ambildataMenu, setAmbildataMenu] = React.useState([]);\r\n  const [dataGroup, setDataGroup] = React.useState([]);\r\n\r\n  // const [nik, setNik] = React.useState(\"\");\r\n  // const [depart, setDepart] = React.useState(0);\r\n  // const [role, setRole] = React.useState(0);\r\n  // const [periode, setPeriode] = React.useState(0);\r\n  // const [branch, setBranch] = React.useState(0);\r\n  // const [expired, setExpired] = React.useState(\"\");\r\n  // const [status, setStatus] = React.useState(\"\");\r\n  const [dataChange, setDataChange] = React.useState({\r\n   dept_name:'',\r\n   dept_id:'',\r\n   role_name:'',\r\n   role_id:'',\r\n   group_name:'',\r\n   group_id:'',\r\n   branch_id:'',\r\n   branch_name:'',\r\n   menu_id:'',\r\n   report_id:'',\r\n   module_id:'',\r\n   menu_url:'',\r\n   menu_id:'',\r\n   menu_desc:'',\r\n   \r\n   menu:dataMenuRedux,\r\n  })\r\n  \r\n \r\n  let actionForm = props.actionForm;\r\n \r\n \r\n  const isOpenDepart = useSelector(state=>state.popupDepart.isOpen)\r\n  const isOpenGroup = useSelector(state=>state.popupGroup.isOpen)\r\n  \r\n  const selected = useSelector(state => state.userSettingSelected);\r\n  \r\n  const getDetail = React.useCallback((id) => {  //on startup function\r\n    let token = localStorage.getItem('id_token');\r\n\r\n    API.post(\"get_log\", {\r\n      key: token,\r\n      action_id: id ,\r\n      info_data: \"detail\"\r\n    }).then(data => {\r\n      let uaja = data.data.data;\r\n      let ambilafter  = uaja[0].data_after;\r\n      let ambilbefore  = uaja[0].data_before;\r\n      let parseAmbilafter = ambilafter?Object.values(JSON.parse(ambilafter)):[];\r\n      let parseAmbilbefore = ambilbefore?Object.values(JSON.parse(ambilbefore)):[];\r\n      let columns = ambilafter?Object.keys(JSON.parse(ambilafter)):Object.keys(JSON.parse(ambilbefore));\r\n      setDataDetail(uaja[0])\r\n      setDataDetailAfter(parseAmbilafter);\r\n      setDataDetailBefore(parseAmbilbefore);\r\n      setDataDetailColoumns(columns)\r\n        \r\n    })\r\n    \r\n    },[setDataDetail]  ) \r\n    const getBranchDetail = React.useCallback((id) => {  //on startup function\r\n        let token = localStorage.getItem('id_token');\r\n    \r\n        // API.post(\"get_branch\", {\r\n        //   key: token,\r\n        //   branch_id: id,\r\n        //   info_data: \"detail\"\r\n        // }).then(data => {\r\n        //   let uaja = data.data.data;\r\n          \r\n        //   setDataChange({\r\n        //         branch_name:data.data.data.branch_name,\r\n        //         branch_id:data.data.data.branch_id,\r\n                \r\n        //     }) \r\n        // })\r\n        \r\n    },[setDataChange])\r\nuseEffect(()=>{\r\n  console.log(dataChange.menu)\r\n  console.log(props.dataMenuAction)\r\n \r\n  \r\n},[dataMenuRedux])\r\nconst getGroupDetail = React.useCallback((id) => {  //on startup function\r\n    let token = localStorage.getItem('id_token');\r\n\r\n    API.post(\"get_group\", {\r\n      key: token,\r\n      group_id: id,\r\n      info_data: \"detail\"\r\n    }).then(data => {\r\n      let uaja = data.data.data;\r\n    \r\n      console.log(uaja[\"Group Name\"])\r\n      setDataChange({\r\n            group_name:uaja[\"Group Name\"],\r\n            group_id:uaja[\"Group Id\"]\r\n        }) \r\n    })\r\n    \r\n},[setDataChange])\r\n\r\nconst getMenuDetail = React.useCallback((id) => {  //on startup function\r\n  let token = localStorage.getItem('id_token');\r\n\r\n  // API.post(\"get_menu\", {\r\n  //   key: token,\r\n  //   menu_id: id,\r\n  //   info_data: \"detail\"\r\n  // }).then(data => {\r\n  //   let uaja = data.data.data;\r\n    \r\n  //   setDataChange({\r\n  //         menu_url:data.data.data.menu_url,\r\n  //         menu_id:data.data.data.menu_id,\r\n  //         menu_desc:data.data.data.menu_desc\r\n  //     }) \r\n  // })\r\n  \r\n},[setDataChange])\r\nconst getRoleDetail = React.useCallback((id) => {  //on startup function\r\n  let token = localStorage.getItem('id_token');\r\n \r\n  API.post(\"get_role\", {\r\n    key: token,\r\n    role_id: id,\r\n    info_data: \"detail\"\r\n  }).then(data => {\r\n    let uaja = data.data.data;\r\n    let menubaru = [];\r\n    console.log(data.data.data)\r\n    let i = 0;\r\n    for(const uuu of data.data.data.Menu){\r\n      console.log(dataChange.menu[i])\r\n      console.log(uuu.Name)\r\n      for(const dataMenu of dataChange.menu){\r\n        if(dataMenu.Name==uuu.Name){\r\n          menubaru.push(uuu)\r\n        }\r\n      }\r\n    }\r\n    if(menubaru.length==0){\r\n      menubaru = dataChange.menu;\r\n    }\r\n    setDataChange({\r\n          role_name:data.data.data[\"Role Name\"],\r\n          role_id:id,\r\n          menu:menubaru\r\n      }) \r\n  })\r\n  \r\n},[setDataChange])\r\n\r\n\r\n\r\n\r\n    \r\n      // setUserId(data.data.data.user_id)\r\n      // setUsername(data.data.data.username)\r\n      // setPassword(data.data.data.password)\r\n      // setName(data.data.data.name)\r\n      // setNik(data.data.data.nik)\r\n      // setPeriode(data.data.data.periode_usage)\r\n      // setStatus(data.data.data.status_date)\r\n      // setExpired(data.data.data.expired_date)\r\n      // setBranch(data.data.data.branch_id)\r\n      // setRole(data.data.data.role_id)\r\n      // setDepart(data.data.data.dept_id)\r\n      // setGroup(data.data.data.group_id)\r\n      // this.setState({\r\n      //   dataSet: data.data.data\r\n      // });\r\n\r\n\r\nconst getGroup = React.useCallback(() => {  //on startup function\r\n    let token = localStorage.getItem('id_token');\r\n\r\n    API.post(\"get_group\", {\r\n      key: token,\r\n      info_data: \"all\"\r\n    }).then(data => {\r\n      let uaja = data.data.data;\r\n      setDataGroup(data.data.data)\r\n    })\r\n},[setDataGroup])\r\n  const kirimuserselected = (jumlah, data) => {\r\n    return {\r\n      type: \"SELECTEDUSER\",\r\n      payload: {\r\n        selectedUser: jumlah,\r\n        selectedId: data\r\n      }\r\n    }\r\n  }\r\n\r\n\r\n\r\n\r\n\r\n  \r\n\r\n\r\n  \r\n\r\n\r\n\r\n\r\n \r\n\r\n  \r\n  const dispatch = useDispatch();\r\n  const kirimisOpen = (isOpen, type) => {\r\n    return {\r\n      type: type,\r\n      payload: {\r\n        isOpen: isOpen,\r\n      }\r\n    }\r\n  }\r\n  const convert = (name, value) => ({\r\n    target: {\r\n      name, value\r\n    }\r\n  })\r\n  const handleSubmitUser = (e) => {\r\n\r\n   \r\n    let token = localStorage.getItem('id_token');\r\n    // console.log(role);\r\n    // dispatch(kirimuserselected(0, []))\r\n    if (actionForm == \"Edit Department\") {\r\n      API.post(\"update_department\", {\r\n        key: token,\r\n        dept_id:dataChange.dept_id,\r\n        dept_name:dataChange.dept_name,\r\n        group_id:dataChange.group_id\r\n\r\n      }).then(data => {\r\n\r\n        // console.log(data.data)\r\n        alert(\"berhasil Mengubah\")\r\n        setOpen(false);\r\n        dispatch(kirimisOpen(false,\"CLOSEDEPART\"))\r\n        resetForm();\r\n        // this.setState({\r\n        //   dataSet: data.data.data\r\n        // });\r\n\r\n      }).catch((err) => {\r\n        alert(\"Anda Bukan Admin\")\r\n        setOpen(false);\r\n        dispatch(kirimisOpen(false,\"CLOSEDEPART\"))\r\n        resetForm();\r\n      })\r\n    } else  if (actionForm == \"Add Department\") {\r\n      API.post(\"create_department\", {\r\n        key: token,\r\n        \r\n        dept_id:dataChange.dept_id,\r\n        dept_name:dataChange.dept_name,\r\n        group_id:dataChange.group_id\r\n\r\n      }).then(data => {\r\n\r\n        // console.log(data.data)\r\n        alert(\"berhasil menambah\")\r\n        setOpen(false);\r\n        dispatch(kirimisOpen(false,\"CLOSEDEPART\"))\r\n        resetForm();\r\n        // this.setState({\r\n        //   dataSet: data.data.data\r\n        // });\r\n\r\n      })\r\n    }\r\n    else  if (actionForm == \"Add Branch\") {\r\n        API.post(\"create_branch\", {\r\n          key: token,\r\n          \r\n          branch_id:dataChange.branch_id,\r\n          branch_name:dataChange.branch_name,\r\n         \r\n  \r\n        }).then(data => {\r\n  \r\n          // console.log(data.data)\r\n          alert(\"berhasil menambah\")\r\n          setOpen(false);\r\n          dispatch(kirimisOpen(false,\"CLOSEBRANCH\"))\r\n          resetForm();\r\n          // this.setState({\r\n          //   dataSet: data.data.data\r\n          // });\r\n  \r\n        })\r\n      }\r\n      else  if (actionForm == \"Add Role\") {\r\n        API.post(\"create_role\", {\r\n          key: token,\r\n          \r\n          role_id:dataChange.role_id,\r\n          role_name:dataChange.role_name,\r\n          menu_id:dataChange.menu_id,\r\n          report_id:dataChange.report_id,\r\n          module_id:dataChange.module_id,\r\n         \r\n  \r\n        }).then(data => {\r\n  \r\n          // console.log(data.data)\r\n          alert(\"berhasil menambah\")\r\n          setOpen(false);\r\n          dispatch(kirimisOpen(false,\"CLOSEROLE\"))\r\n          resetForm();\r\n          // this.setState({\r\n          //   dataSet: data.data.data\r\n          // });\r\n  \r\n        })\r\n      }\r\n      else if (actionForm == \"Edit Role\") {\r\n        API.post(\"update_role\", {\r\n          key: token,\r\n        \r\n          role_id:dataChange.role_id,\r\n          role_name:dataChange.role_name,\r\n          menu_id:dataChange.menu_id,\r\n          report_id:dataChange.report_id,\r\n          module_id:dataChange.module_id,\r\n        }).then(data => {\r\n  \r\n          // console.log(data.data)\r\n          alert(\"berhasil Mengubah\")\r\n          setOpen(false);\r\n          dispatch(kirimisOpen(false,\"CLOSEROLE\"))\r\n          resetForm();\r\n          // this.setState({\r\n          //   dataSet: data.data.data\r\n          // });\r\n  \r\n        }).catch((err) => {\r\n          alert(\"Anda Bukan Admin\")\r\n          setOpen(false);\r\n          dispatch(kirimisOpen(false,\"CLOSEROLE\"))\r\n          resetForm();\r\n        })\r\n      }\r\n    else  if (actionForm == \"Add Group\") {\r\n        API.post(\"create_group\", {\r\n          key: token,\r\n          \r\n         \r\n          group_name:dataChange.group_name,\r\n          group_id:dataChange.group_id\r\n  \r\n        }).then(data => {\r\n  \r\n          // console.log(data.data)\r\n          alert(\"berhasil menambah\")\r\n          setOpen(false);\r\n          dispatch(kirimisOpen(false,\"CLOSEGROUP\"))\r\n          resetForm();\r\n          // this.setState({\r\n          //   dataSet: data.data.data\r\n          // });\r\n  \r\n        })\r\n      }\r\n      else  if (actionForm == \"Add Menu\") {\r\n        API.post(\"create_menu\", {\r\n          key: token,\r\n          \r\n         \r\n          menu_id:dataChange.menu_id,\r\n          menu_desc:dataChange.menu_desc,\r\n          menu_url:dataChange.menu_url\r\n  \r\n        }).then(data => {\r\n  \r\n          // console.log(data.data)\r\n          alert(\"berhasil menambah\")\r\n          setOpen(false);\r\n          dispatch(kirimisOpen(false,\"CLOSEMENU\"))\r\n          resetForm();\r\n          // this.setState({\r\n          //   dataSet: data.data.data\r\n          // });\r\n  \r\n        })\r\n      }\r\n      else if (actionForm == \"Edit Menu\") {\r\n        API.post(\"update_menu\", {\r\n          key: token,\r\n          menu_id:dataChange.menu_id,\r\n          menu_desc:dataChange.menu_desc,\r\n          menu_url:dataChange.menu_url\r\n  \r\n        }).then(data => {\r\n  \r\n          // console.log(data.data)\r\n          alert(\"berhasil Mengubah\")\r\n          setOpen(false);\r\n          dispatch(kirimisOpen(false,\"CLOSEMENU\"))\r\n          resetForm();\r\n          // this.setState({\r\n          //   dataSet: data.data.data\r\n          // });\r\n  \r\n        }).catch((err) => {\r\n          alert(\"Anda Bukan Admin\")\r\n          setOpen(false);\r\n          dispatch(kirimisOpen(false,\"CLOSEMENU\"))\r\n          resetForm();\r\n        })\r\n      }\r\n     else if (actionForm == \"Edit Group\") {\r\n        API.post(\"update_group\", {\r\n          key: token,\r\n        \r\n          group_name:dataChange.group_name,\r\n          group_id:dataChange.group_id\r\n  \r\n        }).then(data => {\r\n  \r\n          // console.log(data.data)\r\n          alert(\"berhasil Mengubah\")\r\n          setOpen(false);\r\n          dispatch(kirimisOpen(false,\"CLOSEGROUP\"))\r\n          resetForm();\r\n          // this.setState({\r\n          //   dataSet: data.data.data\r\n          // });\r\n  \r\n        }).catch((err) => {\r\n          alert(\"Anda Bukan Admin\")\r\n          setOpen(false);\r\n          dispatch(kirimisOpen(false,\"CLOSEGROUP\"))\r\n          resetForm();\r\n        })\r\n      }\r\n      else if (actionForm == \"Edit Branch\") {\r\n        API.post(\"update_branch\", {\r\n          key: token,\r\n        \r\n          branch_name:dataChange.branch_name,\r\n          branch_id:dataChange.branch_id\r\n  \r\n        }).then(data => {\r\n  \r\n          // console.log(data.data)\r\n          alert(\"berhasil Mengubah\")\r\n          setOpen(false);\r\n          dispatch(kirimisOpen(false,\"CLOSEBRANCH\"))\r\n          resetForm();\r\n          // this.setState({\r\n          //   dataSet: data.data.data\r\n          // });\r\n  \r\n        }).catch((err) => {\r\n          alert(\"Anda Bukan Admin\")\r\n          setOpen(false);\r\n          dispatch(kirimisOpen(false,\"CLOSEBRANCH\"))\r\n          resetForm();\r\n        })\r\n      }\r\n\r\n  }\r\n  const handleChange = React.useCallback((e) => {\r\n\r\n      setDataChange({\r\n        ...dataChange,\r\n        [e.target.name]:e.target.value \r\n      })\r\n    // let etarget = e.target.name;\r\n    // console.log(e.target.name)\r\n    // if (etarget == \"username\") {\r\n    //   setDataChange({\r\n    //     username:e.target.value\r\n    //   })\r\n    // }\r\n    // else if (etarget == \"password\") {\r\n    //     setDataChange({\r\n    //       password:e.target.value\r\n\r\n    //     } )\r\n    // }\r\n    // }  else if (etarget == \"nik\") {\r\n    //   setNik(e.target.value)\r\n    // } else if (etarget == \"name\") {\r\n    //   setName(e.target.value)\r\n    // } else if (etarget == \"depart\") {\r\n    //   setDepart(e.target.value)\r\n    // } else if (etarget == \"userid\") {\r\n    //   setUserId(e.target.value)\r\n    // } else if (etarget == \"group\") {\r\n    //   setGroup(e.target.value)\r\n    // } else if (etarget == \"role\") {\r\n    //   setRole(e.target.value)\r\n    // } else if (etarget == \"branch\") {\r\n    //   console.log(e.target.value)\r\n    //   setBranch(e.target.value)\r\n    // }\r\n    // else if (etarget == \"periode\") {\r\n    //   console.log(e.target.name)\r\n    //   setPeriode(e.target.value)\r\n    // } else if (etarget == \"expired\") {\r\n    //   setExpired(e.target.value)\r\n    // } else if (etarget == \"status\") {\r\n    //   setStatus(e.target.value)\r\n    // }\r\n\r\n\r\n \r\n  }, [dataChange])\r\n  const handleClickOpen = () => {\r\n    setOpen(true);\r\n  };\r\n\r\n  const resetForm = React.useCallback(() => {\r\n    setDataChange({\r\n     \r\n        dept_name:'',\r\n        dept_id:'',\r\n        role_name:'',\r\n        role_id:'',\r\n        group_name:'',\r\n        group_id:'',\r\n        branch_id:'',\r\n\r\n        branch_name:'',\r\n        menu_id:'',\r\n        report_id:'',\r\n        module_id:'',\r\n        menu_url:'',\r\n        menu_id:'',\r\n        menu_desc:'',\r\n        menu:dataMenuRedux\r\n   \r\n    })\r\n    dispatch(kirimuserselected(0,[]))\r\n  },[setDataChange]);\r\n \r\n  const Form  = React.memo((props)=>{\r\n      return (\r\n          <div>\r\n                 \r\n\r\n          </div>\r\n      )\r\n  })\r\n  const handleClose = React.useCallback(() => {\r\n    dispatch(kirimuserselected(0,[]))\r\n    // if(props.actionForm==\"Add Department\"||props.actionForm==\"Edit Department\"){\r\n    //     dispatch(kirimisOpen(false,\"CLOSEDEPART\"))\r\n     \r\n\r\n    // }else if(props.actionForm==\"Add Group\" || props.actionForm==\"Edit Group\"){\r\n    //     dispatch(kirimisOpen(false,\"CLOSEGROUP\"))\r\n       \r\n    // }\r\n    // else if(props.actionForm==\"Add Branch\" || props.actionForm==\"Edit Branch\"){\r\n    //     dispatch(kirimisOpen(false,\"CLOSEBRANCH\"))\r\n       \r\n    // }\r\n    // else if(props.actionForm==\"Add Role\" || props.actionForm==\"Edit Role\"){\r\n    //   dispatch(kirimisOpen(false,\"CLOSEROLE\"))\r\n    // }\r\n    // else if(props.actionForm==\"Add Menu\" || props.actionForm==\"Edit Menu\"){\r\n   \r\n    // }\r\n    // dispatch(kirimisOpen(false,\"CLOSEMENU\"))\r\n    setOpen(false);\r\n    props.onClick(false)\r\n    resetForm();\r\n\r\n  },[open]);\r\n\r\n  useEffect(() => {\r\n    setOpen(props.open) \r\n    if(props.open==true){\r\n        getDetail(props.selectedDetail);\r\n    }\r\n    \r\n\r\n  }, [props.open])\r\n  const value = \"ACCU-SEAL 35-532 Bag Sealer\";\r\n  return (\r\n    <div >\r\n\r\n      <Dialog\r\n     \r\n        fullWidth={true}\r\n        maxWidth={\"md\"} style={{ }}  onClose={handleClose}  aria-labelledby=\"customized-dialog-title\" open={open}>\r\n        <DialogTitle style={{ }} id=\"customized-dialog-title\" onClose={handleClose}>\r\n          <div style={{ display: \"flex\", }}>\r\n            <Paper style={{ width: \"50px\", height: \"50px\", display: \"flex\", justifyContent: \"center\", alignItems: \"center\" }}><PersonIcon ></PersonIcon></Paper>\r\n            <div style={{width: \"300px\", height: \"50px\",  marginLeft:\"10px\",alignItems:\"center\",justifyContent:\"center\" }}>\r\n                \r\n                  <span color=\"primary\" style={{display: \"flex\",lineHeight: \"50px\", fontFamily:\"revert\", color:\"primary\",}}  >{ \"Detail Data \"+dataDetail.action_information+\" \"+props.selectedDetail}</span>\r\n                 \r\n            </div> \r\n\r\n          </div>\r\n\r\n        </DialogTitle>\r\n\r\n        <DialogContent className={classes.root}  >\r\n          <Grid container spacing={1} style={{display:'flex', justifyContent:'center', alignItems:'center' ,}} >\r\n            <Grid item xs={3} sm={3}>\r\n                <span style={{fontWeight:'bold'}}>Coloumn</span>\r\n                <hr></hr>\r\n                \r\n                {dataDetailColoumns.map((data, index)=>(\r\n                    <div style={{borderBottom:\"1px dashed black\"}}>{data}</div>\r\n                ))}\r\n               \r\n            </Grid> \r\n            <Grid item xs={3} sm={3}>\r\n            <span style={{fontWeight:'bold'}}>Data Before</span>\r\n                <hr></hr>\r\n                \r\n                {dataDetailBefore.length>0?dataDetailBefore.map((data,index)=>(\r\n                    <div style={{borderBottom:\"1px dashed black\"}}>{data}</div>\r\n                )):dataDetailColoumns.map((data, index)=>(\r\n                    <div style={{borderBottom:\"1px dashed black\"}}>{\"null\"}</div>\r\n                ))}\r\n                   \r\n                \r\n            </Grid> \r\n            <Grid item xs={3} sm={3}>\r\n            <span style={{fontWeight:'bold'}}>After</span>\r\n                <hr></hr>\r\n               \r\n                {dataDetailAfter.length>0?dataDetailAfter.map((data,index)=>(\r\n                    <div style={{borderBottom:\"1px dashed black\"}}>{data?data:'null'}</div>\r\n                )):dataDetailColoumns.map((data, index)=>(\r\n                    <div style={{borderBottom:\"1px dashed black\"}}>{\"null\"}</div>\r\n                ))}\r\n                \r\n                    \r\n                \r\n                   \r\n               \r\n            </Grid> \r\n\r\n           \r\n\r\n            \r\n            \r\n          </Grid>\r\n        </DialogContent>\r\n        <DialogActions style={{}}>\r\n          <Button className={classes.popup} autoFocus onClick={handleSubmitUser} >\r\n            Save\r\n          </Button>\r\n        </DialogActions>\r\n      </Dialog>\r\n    </div>\r\n  );\r\n}\r\n","import React,{useState, useEffect} from 'react';\r\nimport API from 'api';\r\nimport {Paper} from '@material-ui/core'\r\nimport Table from './../../../components/TableLog/index'\r\nimport {useSelector, useDispatch} from 'react-redux'\r\nimport { Button} from 'reactstrap'\r\nimport { AlternateEmail } from '@material-ui/icons';\r\nimport Dialog from './../../../components/PopUpLog/PopUpLog'\r\nimport Tooltip from '@material-ui/core/Tooltip';  \r\nimport Filterdata from './../filter';\r\nimport Skeleton from './../../../components/Skeleton';\r\nimport { \r\n  Card,\r\n  CardBody,\r\n  CardFooter,\r\n  CardHeader,Label,Input,\r\n  } from 'reactstrap';\r\n\r\n\r\nimport {Query, Builder, BasicConfig, Utils as QbUtils} from 'react-awesome-query-builder';\r\nconst Log = React.memo(() =>{\r\n    let token = localStorage.getItem('id_token');\r\n    const [dataLogAll, setLogAll] = useState([]);\r\n    const [open, setOpen] = useState(false);\r\n    const [filterOpen, setfilterOpen] = useState(false);\r\n    const [groupName, setGroupName] = React.useState([]);\r\n    const [actionForm, setActionForm] = useState('');\r\n    const [selectedDetail, setSelectedDetail] = useState(0);\r\n    const userAccess = useSelector(state=>state.userAcces);\r\n    const dataSelected = useSelector(state=>state.userSettingSelected);\r\n    const popupDepart = useSelector(state=>state.popupDepart.isOpen);\r\n    const rowperpageDepart = useSelector(state=>state.rowperpageLog);\r\n    const [jumlahdata, setJumlahData] = useState(5);\r\n    const MenuAccess = useSelector(state=>state.MenuAccess);\r\n    const [loading, setLoading] = useState(false);\r\n    const [Menu , setMenu] = useState({\r\n      access_view:false,\r\n      access_create:false,\r\n      access_update:false,\r\n      access_delete:false\r\n    })\r\n    const [schema, setSchema] = React.useState([]);\r\n    const dispatch = useDispatch();\r\n    const kirimisOpenDepart = (isOpen) => {\r\n        return {\r\n          type: \"OPENDEPART\",\r\n          payload: {\r\n            isOpen: isOpen,\r\n          }\r\n        }\r\n      }\r\n    const kirimSelected = (jumlah, data) => {\r\n        return {\r\n          type: \"SELECTEDUSER\",\r\n          payload: {\r\n            selectedUser: jumlah,\r\n            selectedId:data\r\n          }\r\n        }\r\n      }  \r\n      useEffect(()=>{\r\n        dispatch(kirimSelected(0,[]))  \r\n        for(const key of MenuAccess.menu){\r\n          if(key.name==\"log\"){\r\n            setMenu({\r\n              access_view:(key.access_view ===\"true\"),\r\n              access_create:(key.access_create ===\"true\"),\r\n              access_update:(key.access_update ===\"true\"),\r\n              access_delete:(key.access_delete ===\"true\")\r\n            })\r\n          }\r\n        }\r\n      }, [])\r\n      const getGroupDetail = React.useCallback((id) => {  //on startup function\r\n        let token = localStorage.getItem('id_token');\r\n    \r\n        API.post(\"/get_group\", {\r\n          key: token,\r\n          group_id: id,\r\n          info_data: \"detail\"\r\n        }).then(data => {\r\n          let uaja = data.data.data;\r\n          \r\n          setGroupName( arr => [...arr, uaja.group_name]);\r\n        })\r\n        \r\n    },[setGroupName])\r\n\r\n    const rowAdd =  React.useCallback(()=>{\r\n        dispatch(kirimisOpenDepart(true))\r\n        setOpen(true);\r\n        setActionForm(\"Add Department\")\r\n    }, [dataSelected])\r\n    const rowEdit = React.useCallback( ()=>{\r\n        if(dataSelected.selectedUser==0){\r\n            alert(\"no item selected\")\r\n        }else{\r\n            dispatch(kirimisOpenDepart(true))\r\n            setOpen(true);\r\n            setActionForm(\"Edit Department\")\r\n\r\n        }\r\n    }, [dataSelected])\r\n    const tableFilter  = React.useCallback(()=>{\r\n      if(filterOpen==true){\r\n        setfilterOpen(false)\r\n        \r\n\r\n      }else{\r\n        setfilterOpen(true)\r\n      }\r\n    }, [filterOpen])\r\n    const rowDelete = React.useCallback( ()=>{\r\n        if(dataSelected.selectedUser==0){\r\n            alert(\"no item selected\")\r\n        }else{\r\n         \r\n          \r\n            \r\n          let hasil = '';\r\n          var fetches = [];\r\n            for(let i=0;i<dataSelected.selectedId.length;i++){\r\n                let token = localStorage.getItem('id_token');\r\n             \r\n                fetches.push(API.post(\"delete_department\",{\r\n                  key: token,\r\n                  dept_id: dataSelected.selectedId[i]\r\n                }).then(data => {\r\n               hasil = hasil +\"Department ID \"+dataSelected.selectedId[i]+\" \"+data.data.data+\"\\n\";\r\n               \r\n               \r\n              }).catch(err=>{\r\n                  alert(err);\r\n              })\r\n                )}\r\n\r\n            Promise.all(fetches).then(function(){\r\n              alert(hasil);\r\n              getLogAll(rowperpageDepart.halaman, rowperpageDepart.jumlah);\r\n\r\n            })    \r\n           \r\n        }\r\n\r\n    },[dataSelected])\r\n    const getSelected = React.useCallback((data)=>{\r\n        setOpen(true)\r\n        setSelectedDetail(data)\r\n    }, [])\r\n    \r\n    const renderAll = React.useCallback((data)=>{\r\n      dispatch(kirimSelected(0,[]))  \r\n      getLogAll(rowperpageDepart.halaman, rowperpageDepart.jumlah,data)\r\n  }, [setLogAll])\r\n    const getLogAll = React.useCallback((hal, rowperpage,ficos='')=>{\r\n      setLoading(true)  \r\n  \r\n      API.post(\"get_log\",{\r\n            key: token,\r\n            info_data:'all',\r\n            ficos:ficos,\r\n            per_page:rowperpage,\r\n            page:hal\r\n        }).then(data => {\r\n            setLogAll(data.data.data);\r\n            setSchema(Object.keys(data.data.data[0]));\r\n            setJumlahData(data.data.count_data);\r\n            setLoading(false);\r\n            \r\n          \r\n        })\r\n    },[setLogAll,rowperpageDepart.halaman,rowperpageDepart.jumlah])\r\n  \r\n    useEffect(()=>{\r\n      \r\n\r\n        getLogAll(rowperpageDepart.halaman,rowperpageDepart.jumlah);\r\n        \r\n       \r\n       \r\n        setOpen(open)\r\n       \r\n    },[open,rowperpageDepart.halaman,rowperpageDepart.jumlah])\r\n    return(\r\n    <div style={{marginTop:'-22px'}}>\r\n        {/* <Button color=\"dark\" id=\"btnRowAdd\" className=\"btn-pill\" onClick={rowAdd}>&nbsp;&nbsp;<i className=\"fa fa-plus-square\"></i>&nbsp;<span>Add&nbsp;&nbsp;</span></Button>\r\n        {dataSelected.selectedUser>0?<Button color=\"danger\" id=\"btnRowDelete\" className=\"btn-pill\" onClick={rowDelete}><i className=\"fa fa-window-close\"></i>&nbsp;<span>Delete</span></Button>:''}\r\n        {dataSelected.selectedUser==1?<Button color=\"warning\" id=\"btnTableEdit\" className=\"btn-pill\" onClick={rowEdit}>&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;<i className=\"fa fa-edit\"></i>&nbsp;<span>Edit&nbsp;&nbsp;&nbsp;&nbsp;&nbsp;</span></Button> : null} */}\r\n        {!loading?\r\n        <div>\r\n        { Menu.access_create==true? \r\n        <Tooltip title=\"Add Department\" aria-label=\"Add Department\">\r\n         \r\n         <Button  id=\"btnRowAdd\" className=\"btn-pill btn-outline-dark btn-m\" style={{fontSize:'20px'}} onClick={rowAdd}><i className=\"fa fa-plus-square\"></i></Button>\r\n          \r\n         \r\n       </Tooltip>\r\n        \r\n        :''}\r\n       {dataSelected.selectedUser>0  && Menu.access_delete==true?  <Tooltip title=\"Delete Department\" aria-label=\"Delete Department\"><Button style={{fontSize:'20px', marginLeft:'5px'}}  id=\"btnRowDelete\" className=\"btn-pill btn-outline-danger btn-m\" onClick={rowDelete}><i className=\"fa fa-window-close\"></i></Button></Tooltip>:''}\r\n       {dataSelected.selectedUser==1  && Menu.access_update==true?<Tooltip title=\"Edit Department\" aria-label=\"Edit Department\"><Button color=\"warning\" id=\"btnTableEdit\" className=\"btn-pill btn-m\" style={{fontSize:'20px', marginLeft:'5px'}} onClick={rowEdit}><i className=\"fa fa-edit\"></i></Button></Tooltip> : null}\r\n       <Tooltip title=\"Filter User\" aria-label=\"Filter User\"><Button  id=\"btnFilter\"  className=\"btn-pill btn-outline-light btn-m\" style={{fontSize:'20px', marginLeft:'5px'}} onClick={tableFilter}><i className=\"fa fa-filter\"></i></Button></Tooltip>\r\n       \r\n       {filterOpen? \r\n                        \r\n                       \r\n                           \r\n                          <div>\r\n                                <Filterdata data={dataLogAll} onClick={renderAll} name={\"Log\"} schema={schema}  jumlahdata={jumlahdata} groupName={groupName}></Filterdata>\r\n                                {/* <QueryBuilder fields={fields} operators={operators} /> */}\r\n                                {/* <QueryBuilderComponent /> */}\r\n                                {/* <Query \r\n                                   \r\n                                ></Query> */}\r\n                                  {/* <Query \r\n                                    {...BasicConfig}{...fields}\r\n                                    value={loadTree(this.state.initValue)}\r\n                                    get_children={this.getChildren}\r\n                                    onChange={this.changes}\r\n                                ></Query> */}\r\n\r\n                            \r\n</div>\r\n\r\n                        :'' }\r\n        <Table data={dataLogAll} schema={schema} jumlahdata={jumlahdata} onClick={getSelected} groupName={groupName}></Table>\r\n        <Dialog open={open} selectedDetail={selectedDetail} onClick={(open)=>{setOpen(open)}} actionForm={actionForm}></Dialog>\r\n        </div>\r\n\r\n        :<Skeleton></Skeleton>}\r\n        \r\n    </div>    \r\n    );\r\n})\r\n\r\nexport default Log;","import { Tab, Tabs, TabList, TabPanel } from 'react-tabs';\r\nimport 'react-tabs/style/react-tabs.css';\r\nimport React from 'react';\r\n\r\nimport ClearIcon from '@material-ui/icons/Clear';\r\nexport default () => (\r\n  <Tabs>\r\n    <TabList>\r\n      <Tab>Add 1 <ClearIcon></ClearIcon> </Tab>\r\n      <Tab>Edit 2  <ClearIcon></ClearIcon></Tab>\r\n    </TabList>\r\n\r\n    <TabPanel>\r\n      <h2>Any content 1</h2>\r\n    </TabPanel>\r\n    <TabPanel>\r\n      <h2>Any content 2</h2>\r\n    </TabPanel>\r\n  </Tabs>\r\n);","import React from 'react';\r\nimport Skeleton from '@material-ui/lab/Skeleton';\r\n\r\nexport default function Variants() {\r\n  return (\r\n    <div>\r\n      <Skeleton variant=\"text\" />\r\n      {/* <Skeleton variant=\"circle\" width={40} height={40} /> */}\r\n      <Skeleton variant=\"rect\" width={'100%'} height={400} />\r\n    </div>\r\n  );\r\n}","\"use strict\";\n\nObject.defineProperty(exports, \"__esModule\", {\n  value: true\n});\nexports.default = void 0;\n\nfunction dateLongFormatter(pattern, formatLong) {\n  switch (pattern) {\n    case 'P':\n      return formatLong.date({\n        width: 'short'\n      });\n\n    case 'PP':\n      return formatLong.date({\n        width: 'medium'\n      });\n\n    case 'PPP':\n      return formatLong.date({\n        width: 'long'\n      });\n\n    case 'PPPP':\n    default:\n      return formatLong.date({\n        width: 'full'\n      });\n  }\n}\n\nfunction timeLongFormatter(pattern, formatLong) {\n  switch (pattern) {\n    case 'p':\n      return formatLong.time({\n        width: 'short'\n      });\n\n    case 'pp':\n      return formatLong.time({\n        width: 'medium'\n      });\n\n    case 'ppp':\n      return formatLong.time({\n        width: 'long'\n      });\n\n    case 'pppp':\n    default:\n      return formatLong.time({\n        width: 'full'\n      });\n  }\n}\n\nfunction dateTimeLongFormatter(pattern, formatLong) {\n  var matchResult = pattern.match(/(P+)(p+)?/);\n  var datePattern = matchResult[1];\n  var timePattern = matchResult[2];\n\n  if (!timePattern) {\n    return dateLongFormatter(pattern, formatLong);\n  }\n\n  var dateTimeFormat;\n\n  switch (datePattern) {\n    case 'P':\n      dateTimeFormat = formatLong.dateTime({\n        width: 'short'\n      });\n      break;\n\n    case 'PP':\n      dateTimeFormat = formatLong.dateTime({\n        width: 'medium'\n      });\n      break;\n\n    case 'PPP':\n      dateTimeFormat = formatLong.dateTime({\n        width: 'long'\n      });\n      break;\n\n    case 'PPPP':\n    default:\n      dateTimeFormat = formatLong.dateTime({\n        width: 'full'\n      });\n      break;\n  }\n\n  return dateTimeFormat.replace('{{date}}', dateLongFormatter(datePattern, formatLong)).replace('{{time}}', timeLongFormatter(timePattern, formatLong));\n}\n\nvar longFormatters = {\n  p: timeLongFormatter,\n  P: dateTimeLongFormatter\n};\nvar _default = longFormatters;\nexports.default = _default;\nmodule.exports = exports.default;","export default function toInteger(dirtyNumber) {\n  if (dirtyNumber === null || dirtyNumber === true || dirtyNumber === false) {\n    return NaN;\n  }\n\n  var number = Number(dirtyNumber);\n\n  if (isNaN(number)) {\n    return number;\n  }\n\n  return number < 0 ? Math.ceil(number) : Math.floor(number);\n}","export default function requiredArgs(required, args) {\n  if (args.length < required) {\n    throw new TypeError(required + ' argument' + (required > 1 ? 's' : '') + ' required, but only ' + args.length + ' present');\n  }\n}","import requiredArgs from '../_lib/requiredArgs/index.js';\n/**\n * @name toDate\n * @category Common Helpers\n * @summary Convert the given argument to an instance of Date.\n *\n * @description\n * Convert the given argument to an instance of Date.\n *\n * If the argument is an instance of Date, the function returns its clone.\n *\n * If the argument is a number, it is treated as a timestamp.\n *\n * If the argument is none of the above, the function returns Invalid Date.\n *\n * **Note**: *all* Date arguments passed to any *date-fns* function is processed by `toDate`.\n *\n * @param {Date|Number} argument - the value to convert\n * @returns {Date} the parsed date in the local time zone\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // Clone the date:\n * const result = toDate(new Date(2014, 1, 11, 11, 30, 30))\n * //=> Tue Feb 11 2014 11:30:30\n *\n * @example\n * // Convert the timestamp to date:\n * const result = toDate(1392098430000)\n * //=> Tue Feb 11 2014 11:30:30\n */\n\nexport default function toDate(argument) {\n  requiredArgs(1, arguments);\n  var argStr = Object.prototype.toString.call(argument); // Clone the date\n\n  if (argument instanceof Date || typeof argument === 'object' && argStr === '[object Date]') {\n    // Prevent the date to lose the milliseconds when passed to new Date() in IE10\n    return new Date(argument.getTime());\n  } else if (typeof argument === 'number' || argStr === '[object Number]') {\n    return new Date(argument);\n  } else {\n    if ((typeof argument === 'string' || argStr === '[object String]') && typeof console !== 'undefined') {\n      // eslint-disable-next-line no-console\n      console.warn(\"Starting with v2.0.0-beta.1 date-fns doesn't accept strings as date arguments. Please use `parseISO` to parse strings. See: https://git.io/fjule\"); // eslint-disable-next-line no-console\n\n      console.warn(new Error().stack);\n    }\n\n    return new Date(NaN);\n  }\n}","import toInteger from '../_lib/toInteger/index.js';\nimport toDate from '../toDate/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\n/**\n * @name addDays\n * @category Day Helpers\n * @summary Add the specified number of days to the given date.\n *\n * @description\n * Add the specified number of days to the given date.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the date to be changed\n * @param {Number} amount - the amount of days to be added. Positive decimals will be rounded using `Math.floor`, decimals less than zero will be rounded using `Math.ceil`.\n * @returns {Date} the new date with the days added\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // Add 10 days to 1 September 2014:\n * var result = addDays(new Date(2014, 8, 1), 10)\n * //=> Thu Sep 11 2014 00:00:00\n */\n\nexport default function addDays(dirtyDate, dirtyAmount) {\n  requiredArgs(2, arguments);\n  var date = toDate(dirtyDate);\n  var amount = toInteger(dirtyAmount);\n\n  if (isNaN(amount)) {\n    return new Date(NaN);\n  }\n\n  if (!amount) {\n    // If 0 days, no-op to avoid changing times in the hour before end of DST\n    return date;\n  }\n\n  date.setDate(date.getDate() + amount);\n  return date;\n}","import toInteger from '../_lib/toInteger/index.js';\nimport toDate from '../toDate/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\n/**\n * @name addMilliseconds\n * @category Millisecond Helpers\n * @summary Add the specified number of milliseconds to the given date.\n *\n * @description\n * Add the specified number of milliseconds to the given date.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the date to be changed\n * @param {Number} amount - the amount of milliseconds to be added. Positive decimals will be rounded using `Math.floor`, decimals less than zero will be rounded using `Math.ceil`.\n * @returns {Date} the new date with the milliseconds added\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // Add 750 milliseconds to 10 July 2014 12:45:30.000:\n * var result = addMilliseconds(new Date(2014, 6, 10, 12, 45, 30, 0), 750)\n * //=> Thu Jul 10 2014 12:45:30.750\n */\n\nexport default function addMilliseconds(dirtyDate, dirtyAmount) {\n  requiredArgs(2, arguments);\n  var timestamp = toDate(dirtyDate).getTime();\n  var amount = toInteger(dirtyAmount);\n  return new Date(timestamp + amount);\n}","import toInteger from '../_lib/toInteger/index.js';\nimport addMilliseconds from '../addMilliseconds/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\nvar MILLISECONDS_IN_MINUTE = 60000;\n/**\n * @name addMinutes\n * @category Minute Helpers\n * @summary Add the specified number of minutes to the given date.\n *\n * @description\n * Add the specified number of minutes to the given date.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the date to be changed\n * @param {Number} amount - the amount of minutes to be added. Positive decimals will be rounded using `Math.floor`, decimals less than zero will be rounded using `Math.ceil`.\n * @returns {Date} the new date with the minutes added\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // Add 30 minutes to 10 July 2014 12:00:00:\n * var result = addMinutes(new Date(2014, 6, 10, 12, 0), 30)\n * //=> Thu Jul 10 2014 12:30:00\n */\n\nexport default function addMinutes(dirtyDate, dirtyAmount) {\n  requiredArgs(2, arguments);\n  var amount = toInteger(dirtyAmount);\n  return addMilliseconds(dirtyDate, amount * MILLISECONDS_IN_MINUTE);\n}","import toInteger from '../_lib/toInteger/index.js';\nimport addMilliseconds from '../addMilliseconds/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\nvar MILLISECONDS_IN_HOUR = 3600000;\n/**\n * @name addHours\n * @category Hour Helpers\n * @summary Add the specified number of hours to the given date.\n *\n * @description\n * Add the specified number of hours to the given date.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the date to be changed\n * @param {Number} amount - the amount of hours to be added. Positive decimals will be rounded using `Math.floor`, decimals less than zero will be rounded using `Math.ceil`.\n * @returns {Date} the new date with the hours added\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // Add 2 hours to 10 July 2014 23:00:00:\n * var result = addHours(new Date(2014, 6, 10, 23, 0), 2)\n * //=> Fri Jul 11 2014 01:00:00\n */\n\nexport default function addHours(dirtyDate, dirtyAmount) {\n  requiredArgs(2, arguments);\n  var amount = toInteger(dirtyAmount);\n  return addMilliseconds(dirtyDate, amount * MILLISECONDS_IN_HOUR);\n}","import toInteger from '../_lib/toInteger/index.js';\nimport toDate from '../toDate/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\n/**\n * @name addMonths\n * @category Month Helpers\n * @summary Add the specified number of months to the given date.\n *\n * @description\n * Add the specified number of months to the given date.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the date to be changed\n * @param {Number} amount - the amount of months to be added. Positive decimals will be rounded using `Math.floor`, decimals less than zero will be rounded using `Math.ceil`.\n * @returns {Date} the new date with the months added\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // Add 5 months to 1 September 2014:\n * var result = addMonths(new Date(2014, 8, 1), 5)\n * //=> Sun Feb 01 2015 00:00:00\n */\n\nexport default function addMonths(dirtyDate, dirtyAmount) {\n  requiredArgs(2, arguments);\n  var date = toDate(dirtyDate);\n  var amount = toInteger(dirtyAmount);\n\n  if (isNaN(amount)) {\n    return new Date(NaN);\n  }\n\n  if (!amount) {\n    // If 0 months, no-op to avoid changing times in the hour before end of DST\n    return date;\n  }\n\n  var dayOfMonth = date.getDate(); // The JS Date object supports date math by accepting out-of-bounds values for\n  // month, day, etc. For example, new Date(2020, 1, 0) returns 31 Dec 2019 and\n  // new Date(2020, 13, 1) returns 1 Feb 2021.  This is *almost* the behavior we\n  // want except that dates will wrap around the end of a month, meaning that\n  // new Date(2020, 13, 31) will return 3 Mar 2021 not 28 Feb 2021 as desired. So\n  // we'll default to the end of the desired month by adding 1 to the desired\n  // month and using a date of 0 to back up one day to the end of the desired\n  // month.\n\n  var endOfDesiredMonth = new Date(date.getTime());\n  endOfDesiredMonth.setMonth(date.getMonth() + amount + 1, 0);\n  var daysInMonth = endOfDesiredMonth.getDate();\n\n  if (dayOfMonth >= daysInMonth) {\n    // If we're already at the end of the month, then this is the correct date\n    // and we're done.\n    return endOfDesiredMonth;\n  } else {\n    // Otherwise, we now know that setting the original day-of-month value won't\n    // cause an overflow, so set the desired day-of-month. Note that we can't\n    // just set the date of `endOfDesiredMonth` because that object may have had\n    // its time changed in the unusual case where where a DST transition was on\n    // the last day of the month and its local time was in the hour skipped or\n    // repeated next to a DST transition.  So we use `date` instead which is\n    // guaranteed to still have the original time.\n    date.setFullYear(endOfDesiredMonth.getFullYear(), endOfDesiredMonth.getMonth(), dayOfMonth);\n    return date;\n  }\n}","import toInteger from '../_lib/toInteger/index.js';\nimport addMonths from '../addMonths/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\n/**\n * @name addYears\n * @category Year Helpers\n * @summary Add the specified number of years to the given date.\n *\n * @description\n * Add the specified number of years to the given date.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the date to be changed\n * @param {Number} amount - the amount of years to be added. Positive decimals will be rounded using `Math.floor`, decimals less than zero will be rounded using `Math.ceil`.\n * @returns {Date} the new date with the years added\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // Add 5 years to 1 September 2014:\n * var result = addYears(new Date(2014, 8, 1), 5)\n * //=> Sun Sep 01 2019 00:00:00\n */\n\nexport default function addYears(dirtyDate, dirtyAmount) {\n  requiredArgs(2, arguments);\n  var amount = toInteger(dirtyAmount);\n  return addMonths(dirtyDate, amount * 12);\n}","import toDate from '../toDate/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\n/**\n * @name compareAsc\n * @category Common Helpers\n * @summary Compare the two dates and return -1, 0 or 1.\n *\n * @description\n * Compare the two dates and return 1 if the first date is after the second,\n * -1 if the first date is before the second or 0 if dates are equal.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} dateLeft - the first date to compare\n * @param {Date|Number} dateRight - the second date to compare\n * @returns {Number} the result of the comparison\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // Compare 11 February 1987 and 10 July 1989:\n * var result = compareAsc(new Date(1987, 1, 11), new Date(1989, 6, 10))\n * //=> -1\n *\n * @example\n * // Sort the array of dates:\n * var result = [\n *   new Date(1995, 6, 2),\n *   new Date(1987, 1, 11),\n *   new Date(1989, 6, 10)\n * ].sort(compareAsc)\n * //=> [\n * //   Wed Feb 11 1987 00:00:00,\n * //   Mon Jul 10 1989 00:00:00,\n * //   Sun Jul 02 1995 00:00:00\n * // ]\n */\n\nexport default function compareAsc(dirtyDateLeft, dirtyDateRight) {\n  requiredArgs(2, arguments);\n  var dateLeft = toDate(dirtyDateLeft);\n  var dateRight = toDate(dirtyDateRight);\n  var diff = dateLeft.getTime() - dateRight.getTime();\n\n  if (diff < 0) {\n    return -1;\n  } else if (diff > 0) {\n    return 1; // Return 0 if diff is 0; return NaN if diff is NaN\n  } else {\n    return diff;\n  }\n}","import toDate from '../toDate/index.js';\nimport differenceInCalendarYears from '../differenceInCalendarYears/index.js';\nimport compareAsc from '../compareAsc/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\n/**\n * @name differenceInYears\n * @category Year Helpers\n * @summary Get the number of full years between the given dates.\n *\n * @description\n * Get the number of full years between the given dates.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} dateLeft - the later date\n * @param {Date|Number} dateRight - the earlier date\n * @returns {Number} the number of full years\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // How many full years are between 31 December 2013 and 11 February 2015?\n * var result = differenceInYears(new Date(2015, 1, 11), new Date(2013, 11, 31))\n * //=> 1\n */\n\nexport default function differenceInYears(dirtyDateLeft, dirtyDateRight) {\n  requiredArgs(2, arguments);\n  var dateLeft = toDate(dirtyDateLeft);\n  var dateRight = toDate(dirtyDateRight);\n  var sign = compareAsc(dateLeft, dateRight);\n  var difference = Math.abs(differenceInCalendarYears(dateLeft, dateRight)); // Set both dates to a valid leap year for accurate comparison when dealing\n  // with leap days\n\n  dateLeft.setFullYear('1584');\n  dateRight.setFullYear('1584'); // Math.abs(diff in full years - diff in calendar years) === 1 if last calendar year is not full\n  // If so, result must be decreased by 1 in absolute value\n\n  var isLastYearNotFull = compareAsc(dateLeft, dateRight) === -sign;\n  var result = sign * (difference - isLastYearNotFull); // Prevent negative zero\n\n  return result === 0 ? 0 : result;\n}","import toDate from '../toDate/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\n/**\n * @name differenceInCalendarYears\n * @category Year Helpers\n * @summary Get the number of calendar years between the given dates.\n *\n * @description\n * Get the number of calendar years between the given dates.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} dateLeft - the later date\n * @param {Date|Number} dateRight - the earlier date\n * @returns {Number} the number of calendar years\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // How many calendar years are between 31 December 2013 and 11 February 2015?\n * var result = differenceInCalendarYears(\n *   new Date(2015, 1, 11),\n *   new Date(2013, 11, 31)\n * )\n * //=> 2\n */\n\nexport default function differenceInCalendarYears(dirtyDateLeft, dirtyDateRight) {\n  requiredArgs(2, arguments);\n  var dateLeft = toDate(dirtyDateLeft);\n  var dateRight = toDate(dirtyDateRight);\n  return dateLeft.getFullYear() - dateRight.getFullYear();\n}","import toDate from '../toDate/index.js';\nimport differenceInCalendarMonths from '../differenceInCalendarMonths/index.js';\nimport compareAsc from '../compareAsc/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\n/**\n * @name differenceInMonths\n * @category Month Helpers\n * @summary Get the number of full months between the given dates.\n *\n * @description\n * Get the number of full months between the given dates.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} dateLeft - the later date\n * @param {Date|Number} dateRight - the earlier date\n * @returns {Number} the number of full months\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // How many full months are between 31 January 2014 and 1 September 2014?\n * var result = differenceInMonths(new Date(2014, 8, 1), new Date(2014, 0, 31))\n * //=> 7\n */\n\nexport default function differenceInMonths(dirtyDateLeft, dirtyDateRight) {\n  requiredArgs(2, arguments);\n  var dateLeft = toDate(dirtyDateLeft);\n  var dateRight = toDate(dirtyDateRight);\n  var sign = compareAsc(dateLeft, dateRight);\n  var difference = Math.abs(differenceInCalendarMonths(dateLeft, dateRight));\n  dateLeft.setMonth(dateLeft.getMonth() - sign * difference); // Math.abs(diff in full months - diff in calendar months) === 1 if last calendar month is not full\n  // If so, result must be decreased by 1 in absolute value\n\n  var isLastMonthNotFull = compareAsc(dateLeft, dateRight) === -sign;\n  var result = sign * (difference - isLastMonthNotFull); // Prevent negative zero\n\n  return result === 0 ? 0 : result;\n}","import toDate from '../toDate/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\n/**\n * @name differenceInCalendarMonths\n * @category Month Helpers\n * @summary Get the number of calendar months between the given dates.\n *\n * @description\n * Get the number of calendar months between the given dates.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} dateLeft - the later date\n * @param {Date|Number} dateRight - the earlier date\n * @returns {Number} the number of calendar months\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // How many calendar months are between 31 January 2014 and 1 September 2014?\n * var result = differenceInCalendarMonths(\n *   new Date(2014, 8, 1),\n *   new Date(2014, 0, 31)\n * )\n * //=> 8\n */\n\nexport default function differenceInCalendarMonths(dirtyDateLeft, dirtyDateRight) {\n  requiredArgs(2, arguments);\n  var dateLeft = toDate(dirtyDateLeft);\n  var dateRight = toDate(dirtyDateRight);\n  var yearDiff = dateLeft.getFullYear() - dateRight.getFullYear();\n  var monthDiff = dateLeft.getMonth() - dateRight.getMonth();\n  return yearDiff * 12 + monthDiff;\n}","var MILLISECONDS_IN_MINUTE = 60000;\n\nfunction getDateMillisecondsPart(date) {\n  return date.getTime() % MILLISECONDS_IN_MINUTE;\n}\n/**\n * Google Chrome as of 67.0.3396.87 introduced timezones with offset that includes seconds.\n * They usually appear for dates that denote time before the timezones were introduced\n * (e.g. for 'Europe/Prague' timezone the offset is GMT+00:57:44 before 1 October 1891\n * and GMT+01:00:00 after that date)\n *\n * Date#getTimezoneOffset returns the offset in minutes and would return 57 for the example above,\n * which would lead to incorrect calculations.\n *\n * This function returns the timezone offset in milliseconds that takes seconds in account.\n */\n\n\nexport default function getTimezoneOffsetInMilliseconds(dirtyDate) {\n  var date = new Date(dirtyDate.getTime());\n  var baseTimezoneOffset = Math.ceil(date.getTimezoneOffset());\n  date.setSeconds(0, 0);\n  var hasNegativeUTCOffset = baseTimezoneOffset > 0;\n  var millisecondsPartOfTimezoneOffset = hasNegativeUTCOffset ? (MILLISECONDS_IN_MINUTE + getDateMillisecondsPart(date)) % MILLISECONDS_IN_MINUTE : getDateMillisecondsPart(date);\n  return baseTimezoneOffset * MILLISECONDS_IN_MINUTE + millisecondsPartOfTimezoneOffset;\n}","import toDate from '../toDate/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\n/**\n * @name startOfDay\n * @category Day Helpers\n * @summary Return the start of a day for the given date.\n *\n * @description\n * Return the start of a day for the given date.\n * The result will be in the local timezone.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the original date\n * @returns {Date} the start of a day\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // The start of a day for 2 September 2014 11:55:00:\n * var result = startOfDay(new Date(2014, 8, 2, 11, 55, 0))\n * //=> Tue Sep 02 2014 00:00:00\n */\n\nexport default function startOfDay(dirtyDate) {\n  requiredArgs(1, arguments);\n  var date = toDate(dirtyDate);\n  date.setHours(0, 0, 0, 0);\n  return date;\n}","import getTimezoneOffsetInMilliseconds from '../_lib/getTimezoneOffsetInMilliseconds/index.js';\nimport startOfDay from '../startOfDay/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\nvar MILLISECONDS_IN_DAY = 86400000;\n/**\n * @name differenceInCalendarDays\n * @category Day Helpers\n * @summary Get the number of calendar days between the given dates.\n *\n * @description\n * Get the number of calendar days between the given dates. This means that the times are removed\n * from the dates and then the difference in days is calculated.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} dateLeft - the later date\n * @param {Date|Number} dateRight - the earlier date\n * @returns {Number} the number of calendar days\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // How many calendar days are between\n * // 2 July 2011 23:00:00 and 2 July 2012 00:00:00?\n * var result = differenceInCalendarDays(\n *   new Date(2012, 6, 2, 0, 0),\n *   new Date(2011, 6, 2, 23, 0)\n * )\n * //=> 366\n * // How many calendar days are between\n * // 2 July 2011 23:59:00 and 3 July 2011 00:01:00?\n * var result = differenceInCalendarDays(\n *   new Date(2011, 6, 3, 0, 1),\n *   new Date(2011, 6, 2, 23, 59)\n * )\n * //=> 1\n */\n\nexport default function differenceInCalendarDays(dirtyDateLeft, dirtyDateRight) {\n  requiredArgs(2, arguments);\n  var startOfDayLeft = startOfDay(dirtyDateLeft);\n  var startOfDayRight = startOfDay(dirtyDateRight);\n  var timestampLeft = startOfDayLeft.getTime() - getTimezoneOffsetInMilliseconds(startOfDayLeft);\n  var timestampRight = startOfDayRight.getTime() - getTimezoneOffsetInMilliseconds(startOfDayRight); // Round the number of days to the nearest integer\n  // because the number of milliseconds in a day is not constant\n  // (e.g. it's different in the day of the daylight saving time clock shift)\n\n  return Math.round((timestampLeft - timestampRight) / MILLISECONDS_IN_DAY);\n}","import toDate from '../toDate/index.js';\nimport differenceInCalendarDays from '../differenceInCalendarDays/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js'; // Like `compareAsc` but uses local time not UTC, which is needed\n// for accurate equality comparisons of UTC timestamps that end up\n// having the same representation in local time, e.g. one hour before\n// DST ends vs. the instant that DST ends.\n\nfunction compareLocalAsc(dateLeft, dateRight) {\n  var diff = dateLeft.getFullYear() - dateRight.getFullYear() || dateLeft.getMonth() - dateRight.getMonth() || dateLeft.getDate() - dateRight.getDate() || dateLeft.getHours() - dateRight.getHours() || dateLeft.getMinutes() - dateRight.getMinutes() || dateLeft.getSeconds() - dateRight.getSeconds() || dateLeft.getMilliseconds() - dateRight.getMilliseconds();\n\n  if (diff < 0) {\n    return -1;\n  } else if (diff > 0) {\n    return 1; // Return 0 if diff is 0; return NaN if diff is NaN\n  } else {\n    return diff;\n  }\n}\n/**\n * @name differenceInDays\n * @category Day Helpers\n * @summary Get the number of full days between the given dates.\n *\n * @description\n * Get the number of full day periods between two dates. Fractional days are\n * truncated towards zero.\n *\n * One \"full day\" is the distance between a local time in one day to the same\n * local time on the next or previous day. A full day can sometimes be less than\n * or more than 24 hours if a daylight savings change happens between two dates.\n *\n * To ignore DST and only measure exact 24-hour periods, use this instead:\n * `Math.floor(differenceInHours(dateLeft, dateRight)/24)|0`.\n *\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} dateLeft - the later date\n * @param {Date|Number} dateRight - the earlier date\n * @returns {Number} the number of full days according to the local timezone\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // How many full days are between\n * // 2 July 2011 23:00:00 and 2 July 2012 00:00:00?\n * var result = differenceInDays(\n *   new Date(2012, 6, 2, 0, 0),\n *   new Date(2011, 6, 2, 23, 0)\n * )\n * //=> 365\n * // How many full days are between\n * // 2 July 2011 23:59:00 and 3 July 2011 00:01:00?\n * var result = differenceInDays(\n *   new Date(2011, 6, 3, 0, 1),\n *   new Date(2011, 6, 2, 23, 59)\n * )\n * //=> 0\n * // How many full days are between\n * // 1 March 2020 0:00 and 1 June 2020 0:00 ?\n * // Note: because local time is used, the\n * // result will always be 92 days, even in\n * // time zones where DST starts and the\n * // period has only 92*24-1 hours.\n * var result = differenceInDays(\n *   new Date(2020, 5, 1),\n *   new Date(2020, 2, 1)\n * )\n//=> 92\n */\n\n\nexport default function differenceInDays(dirtyDateLeft, dirtyDateRight) {\n  requiredArgs(2, arguments);\n  var dateLeft = toDate(dirtyDateLeft);\n  var dateRight = toDate(dirtyDateRight);\n  var sign = compareLocalAsc(dateLeft, dateRight);\n  var difference = Math.abs(differenceInCalendarDays(dateLeft, dateRight));\n  dateLeft.setDate(dateLeft.getDate() - sign * difference); // Math.abs(diff in full days - diff in calendar days) === 1 if last calendar day is not full\n  // If so, result must be decreased by 1 in absolute value\n\n  var isLastDayNotFull = compareLocalAsc(dateLeft, dateRight) === -sign;\n  var result = sign * (difference - isLastDayNotFull); // Prevent negative zero\n\n  return result === 0 ? 0 : result;\n}","import toDate from '../toDate/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\n/**\n * @name differenceInMilliseconds\n * @category Millisecond Helpers\n * @summary Get the number of milliseconds between the given dates.\n *\n * @description\n * Get the number of milliseconds between the given dates.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} dateLeft - the later date\n * @param {Date|Number} dateRight - the earlier date\n * @returns {Number} the number of milliseconds\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // How many milliseconds are between\n * // 2 July 2014 12:30:20.600 and 2 July 2014 12:30:21.700?\n * var result = differenceInMilliseconds(\n *   new Date(2014, 6, 2, 12, 30, 21, 700),\n *   new Date(2014, 6, 2, 12, 30, 20, 600)\n * )\n * //=> 1100\n */\n\nexport default function differenceInMilliseconds(dirtyDateLeft, dirtyDateRight) {\n  requiredArgs(2, arguments);\n  var dateLeft = toDate(dirtyDateLeft);\n  var dateRight = toDate(dirtyDateRight);\n  return dateLeft.getTime() - dateRight.getTime();\n}","import differenceInMilliseconds from '../differenceInMilliseconds/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\nvar MILLISECONDS_IN_HOUR = 3600000;\n/**\n * @name differenceInHours\n * @category Hour Helpers\n * @summary Get the number of hours between the given dates.\n *\n * @description\n * Get the number of hours between the given dates.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} dateLeft - the later date\n * @param {Date|Number} dateRight - the earlier date\n * @returns {Number} the number of hours\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // How many hours are between 2 July 2014 06:50:00 and 2 July 2014 19:00:00?\n * var result = differenceInHours(\n *   new Date(2014, 6, 2, 19, 0),\n *   new Date(2014, 6, 2, 6, 50)\n * )\n * //=> 12\n */\n\nexport default function differenceInHours(dirtyDateLeft, dirtyDateRight) {\n  requiredArgs(2, arguments);\n  var diff = differenceInMilliseconds(dirtyDateLeft, dirtyDateRight) / MILLISECONDS_IN_HOUR;\n  return diff > 0 ? Math.floor(diff) : Math.ceil(diff);\n}","import differenceInMilliseconds from '../differenceInMilliseconds/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\nvar MILLISECONDS_IN_MINUTE = 60000;\n/**\n * @name differenceInMinutes\n * @category Minute Helpers\n * @summary Get the number of minutes between the given dates.\n *\n * @description\n * Get the signed number of full (rounded towards 0) minutes between the given dates.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} dateLeft - the later date\n * @param {Date|Number} dateRight - the earlier date\n * @returns {Number} the number of minutes\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // How many minutes are between 2 July 2014 12:07:59 and 2 July 2014 12:20:00?\n * var result = differenceInMinutes(\n *   new Date(2014, 6, 2, 12, 20, 0),\n *   new Date(2014, 6, 2, 12, 7, 59)\n * )\n * //=> 12\n *\n * @example\n * // How many minutes are from 10:01:59 to 10:00:00\n * var result = differenceInMinutes(\n *   new Date(2000, 0, 1, 10, 0, 0),\n *   new Date(2000, 0, 1, 10, 1, 59)\n * )\n * //=> -1\n */\n\nexport default function differenceInMinutes(dirtyDateLeft, dirtyDateRight) {\n  requiredArgs(2, arguments);\n  var diff = differenceInMilliseconds(dirtyDateLeft, dirtyDateRight) / MILLISECONDS_IN_MINUTE;\n  return diff > 0 ? Math.floor(diff) : Math.ceil(diff);\n}","import toDate from '../toDate/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\n/**\n * @name endOfDay\n * @category Day Helpers\n * @summary Return the end of a day for the given date.\n *\n * @description\n * Return the end of a day for the given date.\n * The result will be in the local timezone.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the original date\n * @returns {Date} the end of a day\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // The end of a day for 2 September 2014 11:55:00:\n * var result = endOfDay(new Date(2014, 8, 2, 11, 55, 0))\n * //=> Tue Sep 02 2014 23:59:59.999\n */\n\nexport default function endOfDay(dirtyDate) {\n  requiredArgs(1, arguments);\n  var date = toDate(dirtyDate);\n  date.setHours(23, 59, 59, 999);\n  return date;\n}","import toDate from '../toDate/index.js';\nimport toInteger from '../_lib/toInteger/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\n/**\n * @name endOfWeek\n * @category Week Helpers\n * @summary Return the end of a week for the given date.\n *\n * @description\n * Return the end of a week for the given date.\n * The result will be in the local timezone.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the original date\n * @param {Object} [options] - an object with options.\n * @param {Locale} [options.locale=defaultLocale] - the locale object. See [Locale]{@link https://date-fns.org/docs/Locale}\n * @param {0|1|2|3|4|5|6} [options.weekStartsOn=0] - the index of the first day of the week (0 - Sunday)\n * @returns {Date} the end of a week\n * @throws {TypeError} 1 argument required\n * @throws {RangeError} `options.weekStartsOn` must be between 0 and 6\n *\n * @example\n * // The end of a week for 2 September 2014 11:55:00:\n * var result = endOfWeek(new Date(2014, 8, 2, 11, 55, 0))\n * //=> Sat Sep 06 2014 23:59:59.999\n *\n * @example\n * // If the week starts on Monday, the end of the week for 2 September 2014 11:55:00:\n * var result = endOfWeek(new Date(2014, 8, 2, 11, 55, 0), { weekStartsOn: 1 })\n * //=> Sun Sep 07 2014 23:59:59.999\n */\n\nexport default function endOfWeek(dirtyDate, dirtyOptions) {\n  requiredArgs(1, arguments);\n  var options = dirtyOptions || {};\n  var locale = options.locale;\n  var localeWeekStartsOn = locale && locale.options && locale.options.weekStartsOn;\n  var defaultWeekStartsOn = localeWeekStartsOn == null ? 0 : toInteger(localeWeekStartsOn);\n  var weekStartsOn = options.weekStartsOn == null ? defaultWeekStartsOn : toInteger(options.weekStartsOn); // Test if weekStartsOn is between 0 and 6 _and_ is not NaN\n\n  if (!(weekStartsOn >= 0 && weekStartsOn <= 6)) {\n    throw new RangeError('weekStartsOn must be between 0 and 6 inclusively');\n  }\n\n  var date = toDate(dirtyDate);\n  var day = date.getDay();\n  var diff = (day < weekStartsOn ? -7 : 0) + 6 - (day - weekStartsOn);\n  date.setDate(date.getDate() + diff);\n  date.setHours(23, 59, 59, 999);\n  return date;\n}","import toDate from '../toDate/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\n/**\n * @name endOfYear\n * @category Year Helpers\n * @summary Return the end of a year for the given date.\n *\n * @description\n * Return the end of a year for the given date.\n * The result will be in the local timezone.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the original date\n * @returns {Date} the end of a year\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // The end of a year for 2 September 2014 11:55:00:\n * var result = endOfYear(new Date(2014, 8, 2, 11, 55, 00))\n * //=> Wed Dec 31 2014 23:59:59.999\n */\n\nexport default function endOfYear(dirtyDate) {\n  requiredArgs(1, arguments);\n  var date = toDate(dirtyDate);\n  var year = date.getFullYear();\n  date.setFullYear(year + 1, 0, 0);\n  date.setHours(23, 59, 59, 999);\n  return date;\n}","import toDate from '../toDate/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\n/**\n * @name isValid\n * @category Common Helpers\n * @summary Is the given date valid?\n *\n * @description\n * Returns false if argument is Invalid Date and true otherwise.\n * Argument is converted to Date using `toDate`. See [toDate]{@link https://date-fns.org/docs/toDate}\n * Invalid Date is a Date, whose time value is NaN.\n *\n * Time value of Date: http://es5.github.io/#x15.9.1.1\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * - Now `isValid` doesn't throw an exception\n *   if the first argument is not an instance of Date.\n *   Instead, argument is converted beforehand using `toDate`.\n *\n *   Examples:\n *\n *   | `isValid` argument        | Before v2.0.0 | v2.0.0 onward |\n *   |---------------------------|---------------|---------------|\n *   | `new Date()`              | `true`        | `true`        |\n *   | `new Date('2016-01-01')`  | `true`        | `true`        |\n *   | `new Date('')`            | `false`       | `false`       |\n *   | `new Date(1488370835081)` | `true`        | `true`        |\n *   | `new Date(NaN)`           | `false`       | `false`       |\n *   | `'2016-01-01'`            | `TypeError`   | `false`       |\n *   | `''`                      | `TypeError`   | `false`       |\n *   | `1488370835081`           | `TypeError`   | `true`        |\n *   | `NaN`                     | `TypeError`   | `false`       |\n *\n *   We introduce this change to make *date-fns* consistent with ECMAScript behavior\n *   that try to coerce arguments to the expected type\n *   (which is also the case with other *date-fns* functions).\n *\n * @param {*} date - the date to check\n * @returns {Boolean} the date is valid\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // For the valid date:\n * var result = isValid(new Date(2014, 1, 31))\n * //=> true\n *\n * @example\n * // For the value, convertable into a date:\n * var result = isValid(1393804800000)\n * //=> true\n *\n * @example\n * // For the invalid date:\n * var result = isValid(new Date(''))\n * //=> false\n */\n\nexport default function isValid(dirtyDate) {\n  requiredArgs(1, arguments);\n  var date = toDate(dirtyDate);\n  return !isNaN(date);\n}","var formatDistanceLocale = {\n  lessThanXSeconds: {\n    one: 'less than a second',\n    other: 'less than {{count}} seconds'\n  },\n  xSeconds: {\n    one: '1 second',\n    other: '{{count}} seconds'\n  },\n  halfAMinute: 'half a minute',\n  lessThanXMinutes: {\n    one: 'less than a minute',\n    other: 'less than {{count}} minutes'\n  },\n  xMinutes: {\n    one: '1 minute',\n    other: '{{count}} minutes'\n  },\n  aboutXHours: {\n    one: 'about 1 hour',\n    other: 'about {{count}} hours'\n  },\n  xHours: {\n    one: '1 hour',\n    other: '{{count}} hours'\n  },\n  xDays: {\n    one: '1 day',\n    other: '{{count}} days'\n  },\n  aboutXWeeks: {\n    one: 'about 1 week',\n    other: 'about {{count}} weeks'\n  },\n  xWeeks: {\n    one: '1 week',\n    other: '{{count}} weeks'\n  },\n  aboutXMonths: {\n    one: 'about 1 month',\n    other: 'about {{count}} months'\n  },\n  xMonths: {\n    one: '1 month',\n    other: '{{count}} months'\n  },\n  aboutXYears: {\n    one: 'about 1 year',\n    other: 'about {{count}} years'\n  },\n  xYears: {\n    one: '1 year',\n    other: '{{count}} years'\n  },\n  overXYears: {\n    one: 'over 1 year',\n    other: 'over {{count}} years'\n  },\n  almostXYears: {\n    one: 'almost 1 year',\n    other: 'almost {{count}} years'\n  }\n};\nexport default function formatDistance(token, count, options) {\n  options = options || {};\n  var result;\n\n  if (typeof formatDistanceLocale[token] === 'string') {\n    result = formatDistanceLocale[token];\n  } else if (count === 1) {\n    result = formatDistanceLocale[token].one;\n  } else {\n    result = formatDistanceLocale[token].other.replace('{{count}}', count);\n  }\n\n  if (options.addSuffix) {\n    if (options.comparison > 0) {\n      return 'in ' + result;\n    } else {\n      return result + ' ago';\n    }\n  }\n\n  return result;\n}","export default function buildFormatLongFn(args) {\n  return function (dirtyOptions) {\n    var options = dirtyOptions || {};\n    var width = options.width ? String(options.width) : args.defaultWidth;\n    var format = args.formats[width] || args.formats[args.defaultWidth];\n    return format;\n  };\n}","import buildFormatLongFn from '../../../_lib/buildFormatLongFn/index.js';\nvar dateFormats = {\n  full: 'EEEE, MMMM do, y',\n  long: 'MMMM do, y',\n  medium: 'MMM d, y',\n  short: 'MM/dd/yyyy'\n};\nvar timeFormats = {\n  full: 'h:mm:ss a zzzz',\n  long: 'h:mm:ss a z',\n  medium: 'h:mm:ss a',\n  short: 'h:mm a'\n};\nvar dateTimeFormats = {\n  full: \"{{date}} 'at' {{time}}\",\n  long: \"{{date}} 'at' {{time}}\",\n  medium: '{{date}}, {{time}}',\n  short: '{{date}}, {{time}}'\n};\nvar formatLong = {\n  date: buildFormatLongFn({\n    formats: dateFormats,\n    defaultWidth: 'full'\n  }),\n  time: buildFormatLongFn({\n    formats: timeFormats,\n    defaultWidth: 'full'\n  }),\n  dateTime: buildFormatLongFn({\n    formats: dateTimeFormats,\n    defaultWidth: 'full'\n  })\n};\nexport default formatLong;","var formatRelativeLocale = {\n  lastWeek: \"'last' eeee 'at' p\",\n  yesterday: \"'yesterday at' p\",\n  today: \"'today at' p\",\n  tomorrow: \"'tomorrow at' p\",\n  nextWeek: \"eeee 'at' p\",\n  other: 'P'\n};\nexport default function formatRelative(token, _date, _baseDate, _options) {\n  return formatRelativeLocale[token];\n}","export default function buildLocalizeFn(args) {\n  return function (dirtyIndex, dirtyOptions) {\n    var options = dirtyOptions || {};\n    var context = options.context ? String(options.context) : 'standalone';\n    var valuesArray;\n\n    if (context === 'formatting' && args.formattingValues) {\n      var defaultWidth = args.defaultFormattingWidth || args.defaultWidth;\n      var width = options.width ? String(options.width) : defaultWidth;\n      valuesArray = args.formattingValues[width] || args.formattingValues[defaultWidth];\n    } else {\n      var _defaultWidth = args.defaultWidth;\n\n      var _width = options.width ? String(options.width) : args.defaultWidth;\n\n      valuesArray = args.values[_width] || args.values[_defaultWidth];\n    }\n\n    var index = args.argumentCallback ? args.argumentCallback(dirtyIndex) : dirtyIndex;\n    return valuesArray[index];\n  };\n}","export default function buildMatchFn(args) {\n  return function (dirtyString, dirtyOptions) {\n    var string = String(dirtyString);\n    var options = dirtyOptions || {};\n    var width = options.width;\n    var matchPattern = width && args.matchPatterns[width] || args.matchPatterns[args.defaultMatchWidth];\n    var matchResult = string.match(matchPattern);\n\n    if (!matchResult) {\n      return null;\n    }\n\n    var matchedString = matchResult[0];\n    var parsePatterns = width && args.parsePatterns[width] || args.parsePatterns[args.defaultParseWidth];\n    var value;\n\n    if (Object.prototype.toString.call(parsePatterns) === '[object Array]') {\n      value = findIndex(parsePatterns, function (pattern) {\n        return pattern.test(matchedString);\n      });\n    } else {\n      value = findKey(parsePatterns, function (pattern) {\n        return pattern.test(matchedString);\n      });\n    }\n\n    value = args.valueCallback ? args.valueCallback(value) : value;\n    value = options.valueCallback ? options.valueCallback(value) : value;\n    return {\n      value: value,\n      rest: string.slice(matchedString.length)\n    };\n  };\n}\n\nfunction findKey(object, predicate) {\n  for (var key in object) {\n    if (object.hasOwnProperty(key) && predicate(object[key])) {\n      return key;\n    }\n  }\n}\n\nfunction findIndex(array, predicate) {\n  for (var key = 0; key < array.length; key++) {\n    if (predicate(array[key])) {\n      return key;\n    }\n  }\n}","import buildMatchPatternFn from '../../../_lib/buildMatchPatternFn/index.js';\nimport buildMatchFn from '../../../_lib/buildMatchFn/index.js';\nvar matchOrdinalNumberPattern = /^(\\d+)(th|st|nd|rd)?/i;\nvar parseOrdinalNumberPattern = /\\d+/i;\nvar matchEraPatterns = {\n  narrow: /^(b|a)/i,\n  abbreviated: /^(b\\.?\\s?c\\.?|b\\.?\\s?c\\.?\\s?e\\.?|a\\.?\\s?d\\.?|c\\.?\\s?e\\.?)/i,\n  wide: /^(before christ|before common era|anno domini|common era)/i\n};\nvar parseEraPatterns = {\n  any: [/^b/i, /^(a|c)/i]\n};\nvar matchQuarterPatterns = {\n  narrow: /^[1234]/i,\n  abbreviated: /^q[1234]/i,\n  wide: /^[1234](th|st|nd|rd)? quarter/i\n};\nvar parseQuarterPatterns = {\n  any: [/1/i, /2/i, /3/i, /4/i]\n};\nvar matchMonthPatterns = {\n  narrow: /^[jfmasond]/i,\n  abbreviated: /^(jan|feb|mar|apr|may|jun|jul|aug|sep|oct|nov|dec)/i,\n  wide: /^(january|february|march|april|may|june|july|august|september|october|november|december)/i\n};\nvar parseMonthPatterns = {\n  narrow: [/^j/i, /^f/i, /^m/i, /^a/i, /^m/i, /^j/i, /^j/i, /^a/i, /^s/i, /^o/i, /^n/i, /^d/i],\n  any: [/^ja/i, /^f/i, /^mar/i, /^ap/i, /^may/i, /^jun/i, /^jul/i, /^au/i, /^s/i, /^o/i, /^n/i, /^d/i]\n};\nvar matchDayPatterns = {\n  narrow: /^[smtwf]/i,\n  short: /^(su|mo|tu|we|th|fr|sa)/i,\n  abbreviated: /^(sun|mon|tue|wed|thu|fri|sat)/i,\n  wide: /^(sunday|monday|tuesday|wednesday|thursday|friday|saturday)/i\n};\nvar parseDayPatterns = {\n  narrow: [/^s/i, /^m/i, /^t/i, /^w/i, /^t/i, /^f/i, /^s/i],\n  any: [/^su/i, /^m/i, /^tu/i, /^w/i, /^th/i, /^f/i, /^sa/i]\n};\nvar matchDayPeriodPatterns = {\n  narrow: /^(a|p|mi|n|(in the|at) (morning|afternoon|evening|night))/i,\n  any: /^([ap]\\.?\\s?m\\.?|midnight|noon|(in the|at) (morning|afternoon|evening|night))/i\n};\nvar parseDayPeriodPatterns = {\n  any: {\n    am: /^a/i,\n    pm: /^p/i,\n    midnight: /^mi/i,\n    noon: /^no/i,\n    morning: /morning/i,\n    afternoon: /afternoon/i,\n    evening: /evening/i,\n    night: /night/i\n  }\n};\nvar match = {\n  ordinalNumber: buildMatchPatternFn({\n    matchPattern: matchOrdinalNumberPattern,\n    parsePattern: parseOrdinalNumberPattern,\n    valueCallback: function valueCallback(value) {\n      return parseInt(value, 10);\n    }\n  }),\n  era: buildMatchFn({\n    matchPatterns: matchEraPatterns,\n    defaultMatchWidth: 'wide',\n    parsePatterns: parseEraPatterns,\n    defaultParseWidth: 'any'\n  }),\n  quarter: buildMatchFn({\n    matchPatterns: matchQuarterPatterns,\n    defaultMatchWidth: 'wide',\n    parsePatterns: parseQuarterPatterns,\n    defaultParseWidth: 'any',\n    valueCallback: function valueCallback(index) {\n      return index + 1;\n    }\n  }),\n  month: buildMatchFn({\n    matchPatterns: matchMonthPatterns,\n    defaultMatchWidth: 'wide',\n    parsePatterns: parseMonthPatterns,\n    defaultParseWidth: 'any'\n  }),\n  day: buildMatchFn({\n    matchPatterns: matchDayPatterns,\n    defaultMatchWidth: 'wide',\n    parsePatterns: parseDayPatterns,\n    defaultParseWidth: 'any'\n  }),\n  dayPeriod: buildMatchFn({\n    matchPatterns: matchDayPeriodPatterns,\n    defaultMatchWidth: 'any',\n    parsePatterns: parseDayPeriodPatterns,\n    defaultParseWidth: 'any'\n  })\n};\nexport default match;","export default function buildMatchPatternFn(args) {\n  return function (dirtyString, dirtyOptions) {\n    var string = String(dirtyString);\n    var options = dirtyOptions || {};\n    var matchResult = string.match(args.matchPattern);\n\n    if (!matchResult) {\n      return null;\n    }\n\n    var matchedString = matchResult[0];\n    var parseResult = string.match(args.parsePattern);\n\n    if (!parseResult) {\n      return null;\n    }\n\n    var value = args.valueCallback ? args.valueCallback(parseResult[0]) : parseResult[0];\n    value = options.valueCallback ? options.valueCallback(value) : value;\n    return {\n      value: value,\n      rest: string.slice(matchedString.length)\n    };\n  };\n}","import formatDistance from './_lib/formatDistance/index.js';\nimport formatLong from './_lib/formatLong/index.js';\nimport formatRelative from './_lib/formatRelative/index.js';\nimport localize from './_lib/localize/index.js';\nimport match from './_lib/match/index.js';\n/**\n * @type {Locale}\n * @category Locales\n * @summary English locale (United States).\n * @language English\n * @iso-639-2 eng\n * @author Sasha Koss [@kossnocorp]{@link https://github.com/kossnocorp}\n * @author Lesha Koss [@leshakoss]{@link https://github.com/leshakoss}\n */\n\nvar locale = {\n  code: 'en-US',\n  formatDistance: formatDistance,\n  formatLong: formatLong,\n  formatRelative: formatRelative,\n  localize: localize,\n  match: match,\n  options: {\n    weekStartsOn: 0\n    /* Sunday */\n    ,\n    firstWeekContainsDate: 1\n  }\n};\nexport default locale;","import buildLocalizeFn from '../../../_lib/buildLocalizeFn/index.js';\nvar eraValues = {\n  narrow: ['B', 'A'],\n  abbreviated: ['BC', 'AD'],\n  wide: ['Before Christ', 'Anno Domini']\n};\nvar quarterValues = {\n  narrow: ['1', '2', '3', '4'],\n  abbreviated: ['Q1', 'Q2', 'Q3', 'Q4'],\n  wide: ['1st quarter', '2nd quarter', '3rd quarter', '4th quarter'] // Note: in English, the names of days of the week and months are capitalized.\n  // If you are making a new locale based on this one, check if the same is true for the language you're working on.\n  // Generally, formatted dates should look like they are in the middle of a sentence,\n  // e.g. in Spanish language the weekdays and months should be in the lowercase.\n\n};\nvar monthValues = {\n  narrow: ['J', 'F', 'M', 'A', 'M', 'J', 'J', 'A', 'S', 'O', 'N', 'D'],\n  abbreviated: ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep', 'Oct', 'Nov', 'Dec'],\n  wide: ['January', 'February', 'March', 'April', 'May', 'June', 'July', 'August', 'September', 'October', 'November', 'December']\n};\nvar dayValues = {\n  narrow: ['S', 'M', 'T', 'W', 'T', 'F', 'S'],\n  short: ['Su', 'Mo', 'Tu', 'We', 'Th', 'Fr', 'Sa'],\n  abbreviated: ['Sun', 'Mon', 'Tue', 'Wed', 'Thu', 'Fri', 'Sat'],\n  wide: ['Sunday', 'Monday', 'Tuesday', 'Wednesday', 'Thursday', 'Friday', 'Saturday']\n};\nvar dayPeriodValues = {\n  narrow: {\n    am: 'a',\n    pm: 'p',\n    midnight: 'mi',\n    noon: 'n',\n    morning: 'morning',\n    afternoon: 'afternoon',\n    evening: 'evening',\n    night: 'night'\n  },\n  abbreviated: {\n    am: 'AM',\n    pm: 'PM',\n    midnight: 'midnight',\n    noon: 'noon',\n    morning: 'morning',\n    afternoon: 'afternoon',\n    evening: 'evening',\n    night: 'night'\n  },\n  wide: {\n    am: 'a.m.',\n    pm: 'p.m.',\n    midnight: 'midnight',\n    noon: 'noon',\n    morning: 'morning',\n    afternoon: 'afternoon',\n    evening: 'evening',\n    night: 'night'\n  }\n};\nvar formattingDayPeriodValues = {\n  narrow: {\n    am: 'a',\n    pm: 'p',\n    midnight: 'mi',\n    noon: 'n',\n    morning: 'in the morning',\n    afternoon: 'in the afternoon',\n    evening: 'in the evening',\n    night: 'at night'\n  },\n  abbreviated: {\n    am: 'AM',\n    pm: 'PM',\n    midnight: 'midnight',\n    noon: 'noon',\n    morning: 'in the morning',\n    afternoon: 'in the afternoon',\n    evening: 'in the evening',\n    night: 'at night'\n  },\n  wide: {\n    am: 'a.m.',\n    pm: 'p.m.',\n    midnight: 'midnight',\n    noon: 'noon',\n    morning: 'in the morning',\n    afternoon: 'in the afternoon',\n    evening: 'in the evening',\n    night: 'at night'\n  }\n};\n\nfunction ordinalNumber(dirtyNumber, _dirtyOptions) {\n  var number = Number(dirtyNumber); // If ordinal numbers depend on context, for example,\n  // if they are different for different grammatical genders,\n  // use `options.unit`:\n  //\n  //   var options = dirtyOptions || {}\n  //   var unit = String(options.unit)\n  //\n  // where `unit` can be 'year', 'quarter', 'month', 'week', 'date', 'dayOfYear',\n  // 'day', 'hour', 'minute', 'second'\n\n  var rem100 = number % 100;\n\n  if (rem100 > 20 || rem100 < 10) {\n    switch (rem100 % 10) {\n      case 1:\n        return number + 'st';\n\n      case 2:\n        return number + 'nd';\n\n      case 3:\n        return number + 'rd';\n    }\n  }\n\n  return number + 'th';\n}\n\nvar localize = {\n  ordinalNumber: ordinalNumber,\n  era: buildLocalizeFn({\n    values: eraValues,\n    defaultWidth: 'wide'\n  }),\n  quarter: buildLocalizeFn({\n    values: quarterValues,\n    defaultWidth: 'wide',\n    argumentCallback: function argumentCallback(quarter) {\n      return Number(quarter) - 1;\n    }\n  }),\n  month: buildLocalizeFn({\n    values: monthValues,\n    defaultWidth: 'wide'\n  }),\n  day: buildLocalizeFn({\n    values: dayValues,\n    defaultWidth: 'wide'\n  }),\n  dayPeriod: buildLocalizeFn({\n    values: dayPeriodValues,\n    defaultWidth: 'wide',\n    formattingValues: formattingDayPeriodValues,\n    defaultFormattingWidth: 'wide'\n  })\n};\nexport default localize;","import toInteger from '../_lib/toInteger/index.js';\nimport addMilliseconds from '../addMilliseconds/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\n/**\n * @name subMilliseconds\n * @category Millisecond Helpers\n * @summary Subtract the specified number of milliseconds from the given date.\n *\n * @description\n * Subtract the specified number of milliseconds from the given date.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the date to be changed\n * @param {Number} amount - the amount of milliseconds to be subtracted. Positive decimals will be rounded using `Math.floor`, decimals less than zero will be rounded using `Math.ceil`.\n * @returns {Date} the new date with the milliseconds subtracted\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // Subtract 750 milliseconds from 10 July 2014 12:45:30.000:\n * var result = subMilliseconds(new Date(2014, 6, 10, 12, 45, 30, 0), 750)\n * //=> Thu Jul 10 2014 12:45:29.250\n */\n\nexport default function subMilliseconds(dirtyDate, dirtyAmount) {\n  requiredArgs(2, arguments);\n  var amount = toInteger(dirtyAmount);\n  return addMilliseconds(dirtyDate, -amount);\n}","export default function addLeadingZeros(number, targetLength) {\n  var sign = number < 0 ? '-' : '';\n  var output = Math.abs(number).toString();\n\n  while (output.length < targetLength) {\n    output = '0' + output;\n  }\n\n  return sign + output;\n}","import addLeadingZeros from '../../addLeadingZeros/index.js';\n/*\n * |     | Unit                           |     | Unit                           |\n * |-----|--------------------------------|-----|--------------------------------|\n * |  a  | AM, PM                         |  A* |                                |\n * |  d  | Day of month                   |  D  |                                |\n * |  h  | Hour [1-12]                    |  H  | Hour [0-23]                    |\n * |  m  | Minute                         |  M  | Month                          |\n * |  s  | Second                         |  S  | Fraction of second             |\n * |  y  | Year (abs)                     |  Y  |                                |\n *\n * Letters marked by * are not implemented but reserved by Unicode standard.\n */\n\nvar formatters = {\n  // Year\n  y: function y(date, token) {\n    // From http://www.unicode.org/reports/tr35/tr35-31/tr35-dates.html#Date_Format_tokens\n    // | Year     |     y | yy |   yyy |  yyyy | yyyyy |\n    // |----------|-------|----|-------|-------|-------|\n    // | AD 1     |     1 | 01 |   001 |  0001 | 00001 |\n    // | AD 12    |    12 | 12 |   012 |  0012 | 00012 |\n    // | AD 123   |   123 | 23 |   123 |  0123 | 00123 |\n    // | AD 1234  |  1234 | 34 |  1234 |  1234 | 01234 |\n    // | AD 12345 | 12345 | 45 | 12345 | 12345 | 12345 |\n    var signedYear = date.getUTCFullYear(); // Returns 1 for 1 BC (which is year 0 in JavaScript)\n\n    var year = signedYear > 0 ? signedYear : 1 - signedYear;\n    return addLeadingZeros(token === 'yy' ? year % 100 : year, token.length);\n  },\n  // Month\n  M: function M(date, token) {\n    var month = date.getUTCMonth();\n    return token === 'M' ? String(month + 1) : addLeadingZeros(month + 1, 2);\n  },\n  // Day of the month\n  d: function d(date, token) {\n    return addLeadingZeros(date.getUTCDate(), token.length);\n  },\n  // AM or PM\n  a: function a(date, token) {\n    var dayPeriodEnumValue = date.getUTCHours() / 12 >= 1 ? 'pm' : 'am';\n\n    switch (token) {\n      case 'a':\n      case 'aa':\n      case 'aaa':\n        return dayPeriodEnumValue.toUpperCase();\n\n      case 'aaaaa':\n        return dayPeriodEnumValue[0];\n\n      case 'aaaa':\n      default:\n        return dayPeriodEnumValue === 'am' ? 'a.m.' : 'p.m.';\n    }\n  },\n  // Hour [1-12]\n  h: function h(date, token) {\n    return addLeadingZeros(date.getUTCHours() % 12 || 12, token.length);\n  },\n  // Hour [0-23]\n  H: function H(date, token) {\n    return addLeadingZeros(date.getUTCHours(), token.length);\n  },\n  // Minute\n  m: function m(date, token) {\n    return addLeadingZeros(date.getUTCMinutes(), token.length);\n  },\n  // Second\n  s: function s(date, token) {\n    return addLeadingZeros(date.getUTCSeconds(), token.length);\n  },\n  // Fraction of second\n  S: function S(date, token) {\n    var numberOfDigits = token.length;\n    var milliseconds = date.getUTCMilliseconds();\n    var fractionalSeconds = Math.floor(milliseconds * Math.pow(10, numberOfDigits - 3));\n    return addLeadingZeros(fractionalSeconds, token.length);\n  }\n};\nexport default formatters;","import toDate from '../../toDate/index.js';\nimport requiredArgs from '../requiredArgs/index.js';\nvar MILLISECONDS_IN_DAY = 86400000; // This function will be a part of public API when UTC function will be implemented.\n// See issue: https://github.com/date-fns/date-fns/issues/376\n\nexport default function getUTCDayOfYear(dirtyDate) {\n  requiredArgs(1, arguments);\n  var date = toDate(dirtyDate);\n  var timestamp = date.getTime();\n  date.setUTCMonth(0, 1);\n  date.setUTCHours(0, 0, 0, 0);\n  var startOfYearTimestamp = date.getTime();\n  var difference = timestamp - startOfYearTimestamp;\n  return Math.floor(difference / MILLISECONDS_IN_DAY) + 1;\n}","import toDate from '../../toDate/index.js';\nimport requiredArgs from '../requiredArgs/index.js'; // This function will be a part of public API when UTC function will be implemented.\n// See issue: https://github.com/date-fns/date-fns/issues/376\n\nexport default function startOfUTCISOWeek(dirtyDate) {\n  requiredArgs(1, arguments);\n  var weekStartsOn = 1;\n  var date = toDate(dirtyDate);\n  var day = date.getUTCDay();\n  var diff = (day < weekStartsOn ? 7 : 0) + day - weekStartsOn;\n  date.setUTCDate(date.getUTCDate() - diff);\n  date.setUTCHours(0, 0, 0, 0);\n  return date;\n}","import toDate from '../../toDate/index.js';\nimport startOfUTCISOWeek from '../startOfUTCISOWeek/index.js';\nimport requiredArgs from '../requiredArgs/index.js'; // This function will be a part of public API when UTC function will be implemented.\n// See issue: https://github.com/date-fns/date-fns/issues/376\n\nexport default function getUTCISOWeekYear(dirtyDate) {\n  requiredArgs(1, arguments);\n  var date = toDate(dirtyDate);\n  var year = date.getUTCFullYear();\n  var fourthOfJanuaryOfNextYear = new Date(0);\n  fourthOfJanuaryOfNextYear.setUTCFullYear(year + 1, 0, 4);\n  fourthOfJanuaryOfNextYear.setUTCHours(0, 0, 0, 0);\n  var startOfNextYear = startOfUTCISOWeek(fourthOfJanuaryOfNextYear);\n  var fourthOfJanuaryOfThisYear = new Date(0);\n  fourthOfJanuaryOfThisYear.setUTCFullYear(year, 0, 4);\n  fourthOfJanuaryOfThisYear.setUTCHours(0, 0, 0, 0);\n  var startOfThisYear = startOfUTCISOWeek(fourthOfJanuaryOfThisYear);\n\n  if (date.getTime() >= startOfNextYear.getTime()) {\n    return year + 1;\n  } else if (date.getTime() >= startOfThisYear.getTime()) {\n    return year;\n  } else {\n    return year - 1;\n  }\n}","import toDate from '../../toDate/index.js';\nimport startOfUTCISOWeek from '../startOfUTCISOWeek/index.js';\nimport startOfUTCISOWeekYear from '../startOfUTCISOWeekYear/index.js';\nimport requiredArgs from '../requiredArgs/index.js';\nvar MILLISECONDS_IN_WEEK = 604800000; // This function will be a part of public API when UTC function will be implemented.\n// See issue: https://github.com/date-fns/date-fns/issues/376\n\nexport default function getUTCISOWeek(dirtyDate) {\n  requiredArgs(1, arguments);\n  var date = toDate(dirtyDate);\n  var diff = startOfUTCISOWeek(date).getTime() - startOfUTCISOWeekYear(date).getTime(); // Round the number of days to the nearest integer\n  // because the number of milliseconds in a week is not constant\n  // (e.g. it's different in the week of the daylight saving time clock shift)\n\n  return Math.round(diff / MILLISECONDS_IN_WEEK) + 1;\n}","import getUTCISOWeekYear from '../getUTCISOWeekYear/index.js';\nimport startOfUTCISOWeek from '../startOfUTCISOWeek/index.js';\nimport requiredArgs from '../requiredArgs/index.js'; // This function will be a part of public API when UTC function will be implemented.\n// See issue: https://github.com/date-fns/date-fns/issues/376\n\nexport default function startOfUTCISOWeekYear(dirtyDate) {\n  requiredArgs(1, arguments);\n  var year = getUTCISOWeekYear(dirtyDate);\n  var fourthOfJanuary = new Date(0);\n  fourthOfJanuary.setUTCFullYear(year, 0, 4);\n  fourthOfJanuary.setUTCHours(0, 0, 0, 0);\n  var date = startOfUTCISOWeek(fourthOfJanuary);\n  return date;\n}","import toInteger from '../toInteger/index.js';\nimport toDate from '../../toDate/index.js';\nimport requiredArgs from '../requiredArgs/index.js'; // This function will be a part of public API when UTC function will be implemented.\n// See issue: https://github.com/date-fns/date-fns/issues/376\n\nexport default function startOfUTCWeek(dirtyDate, dirtyOptions) {\n  requiredArgs(1, arguments);\n  var options = dirtyOptions || {};\n  var locale = options.locale;\n  var localeWeekStartsOn = locale && locale.options && locale.options.weekStartsOn;\n  var defaultWeekStartsOn = localeWeekStartsOn == null ? 0 : toInteger(localeWeekStartsOn);\n  var weekStartsOn = options.weekStartsOn == null ? defaultWeekStartsOn : toInteger(options.weekStartsOn); // Test if weekStartsOn is between 0 and 6 _and_ is not NaN\n\n  if (!(weekStartsOn >= 0 && weekStartsOn <= 6)) {\n    throw new RangeError('weekStartsOn must be between 0 and 6 inclusively');\n  }\n\n  var date = toDate(dirtyDate);\n  var day = date.getUTCDay();\n  var diff = (day < weekStartsOn ? 7 : 0) + day - weekStartsOn;\n  date.setUTCDate(date.getUTCDate() - diff);\n  date.setUTCHours(0, 0, 0, 0);\n  return date;\n}","import toInteger from '../toInteger/index.js';\nimport toDate from '../../toDate/index.js';\nimport startOfUTCWeek from '../startOfUTCWeek/index.js';\nimport requiredArgs from '../requiredArgs/index.js'; // This function will be a part of public API when UTC function will be implemented.\n// See issue: https://github.com/date-fns/date-fns/issues/376\n\nexport default function getUTCWeekYear(dirtyDate, dirtyOptions) {\n  requiredArgs(1, arguments);\n  var date = toDate(dirtyDate, dirtyOptions);\n  var year = date.getUTCFullYear();\n  var options = dirtyOptions || {};\n  var locale = options.locale;\n  var localeFirstWeekContainsDate = locale && locale.options && locale.options.firstWeekContainsDate;\n  var defaultFirstWeekContainsDate = localeFirstWeekContainsDate == null ? 1 : toInteger(localeFirstWeekContainsDate);\n  var firstWeekContainsDate = options.firstWeekContainsDate == null ? defaultFirstWeekContainsDate : toInteger(options.firstWeekContainsDate); // Test if weekStartsOn is between 1 and 7 _and_ is not NaN\n\n  if (!(firstWeekContainsDate >= 1 && firstWeekContainsDate <= 7)) {\n    throw new RangeError('firstWeekContainsDate must be between 1 and 7 inclusively');\n  }\n\n  var firstWeekOfNextYear = new Date(0);\n  firstWeekOfNextYear.setUTCFullYear(year + 1, 0, firstWeekContainsDate);\n  firstWeekOfNextYear.setUTCHours(0, 0, 0, 0);\n  var startOfNextYear = startOfUTCWeek(firstWeekOfNextYear, dirtyOptions);\n  var firstWeekOfThisYear = new Date(0);\n  firstWeekOfThisYear.setUTCFullYear(year, 0, firstWeekContainsDate);\n  firstWeekOfThisYear.setUTCHours(0, 0, 0, 0);\n  var startOfThisYear = startOfUTCWeek(firstWeekOfThisYear, dirtyOptions);\n\n  if (date.getTime() >= startOfNextYear.getTime()) {\n    return year + 1;\n  } else if (date.getTime() >= startOfThisYear.getTime()) {\n    return year;\n  } else {\n    return year - 1;\n  }\n}","import toDate from '../../toDate/index.js';\nimport startOfUTCWeek from '../startOfUTCWeek/index.js';\nimport startOfUTCWeekYear from '../startOfUTCWeekYear/index.js';\nimport requiredArgs from '../requiredArgs/index.js';\nvar MILLISECONDS_IN_WEEK = 604800000; // This function will be a part of public API when UTC function will be implemented.\n// See issue: https://github.com/date-fns/date-fns/issues/376\n\nexport default function getUTCWeek(dirtyDate, options) {\n  requiredArgs(1, arguments);\n  var date = toDate(dirtyDate);\n  var diff = startOfUTCWeek(date, options).getTime() - startOfUTCWeekYear(date, options).getTime(); // Round the number of days to the nearest integer\n  // because the number of milliseconds in a week is not constant\n  // (e.g. it's different in the week of the daylight saving time clock shift)\n\n  return Math.round(diff / MILLISECONDS_IN_WEEK) + 1;\n}","import toInteger from '../toInteger/index.js';\nimport getUTCWeekYear from '../getUTCWeekYear/index.js';\nimport startOfUTCWeek from '../startOfUTCWeek/index.js';\nimport requiredArgs from '../requiredArgs/index.js'; // This function will be a part of public API when UTC function will be implemented.\n// See issue: https://github.com/date-fns/date-fns/issues/376\n\nexport default function startOfUTCWeekYear(dirtyDate, dirtyOptions) {\n  requiredArgs(1, arguments);\n  var options = dirtyOptions || {};\n  var locale = options.locale;\n  var localeFirstWeekContainsDate = locale && locale.options && locale.options.firstWeekContainsDate;\n  var defaultFirstWeekContainsDate = localeFirstWeekContainsDate == null ? 1 : toInteger(localeFirstWeekContainsDate);\n  var firstWeekContainsDate = options.firstWeekContainsDate == null ? defaultFirstWeekContainsDate : toInteger(options.firstWeekContainsDate);\n  var year = getUTCWeekYear(dirtyDate, dirtyOptions);\n  var firstWeek = new Date(0);\n  firstWeek.setUTCFullYear(year, 0, firstWeekContainsDate);\n  firstWeek.setUTCHours(0, 0, 0, 0);\n  var date = startOfUTCWeek(firstWeek, dirtyOptions);\n  return date;\n}","import lightFormatters from '../lightFormatters/index.js';\nimport getUTCDayOfYear from '../../../_lib/getUTCDayOfYear/index.js';\nimport getUTCISOWeek from '../../../_lib/getUTCISOWeek/index.js';\nimport getUTCISOWeekYear from '../../../_lib/getUTCISOWeekYear/index.js';\nimport getUTCWeek from '../../../_lib/getUTCWeek/index.js';\nimport getUTCWeekYear from '../../../_lib/getUTCWeekYear/index.js';\nimport addLeadingZeros from '../../addLeadingZeros/index.js';\nvar dayPeriodEnum = {\n  am: 'am',\n  pm: 'pm',\n  midnight: 'midnight',\n  noon: 'noon',\n  morning: 'morning',\n  afternoon: 'afternoon',\n  evening: 'evening',\n  night: 'night'\n  /*\n   * |     | Unit                           |     | Unit                           |\n   * |-----|--------------------------------|-----|--------------------------------|\n   * |  a  | AM, PM                         |  A* | Milliseconds in day            |\n   * |  b  | AM, PM, noon, midnight         |  B  | Flexible day period            |\n   * |  c  | Stand-alone local day of week  |  C* | Localized hour w/ day period   |\n   * |  d  | Day of month                   |  D  | Day of year                    |\n   * |  e  | Local day of week              |  E  | Day of week                    |\n   * |  f  |                                |  F* | Day of week in month           |\n   * |  g* | Modified Julian day            |  G  | Era                            |\n   * |  h  | Hour [1-12]                    |  H  | Hour [0-23]                    |\n   * |  i! | ISO day of week                |  I! | ISO week of year               |\n   * |  j* | Localized hour w/ day period   |  J* | Localized hour w/o day period  |\n   * |  k  | Hour [1-24]                    |  K  | Hour [0-11]                    |\n   * |  l* | (deprecated)                   |  L  | Stand-alone month              |\n   * |  m  | Minute                         |  M  | Month                          |\n   * |  n  |                                |  N  |                                |\n   * |  o! | Ordinal number modifier        |  O  | Timezone (GMT)                 |\n   * |  p! | Long localized time            |  P! | Long localized date            |\n   * |  q  | Stand-alone quarter            |  Q  | Quarter                        |\n   * |  r* | Related Gregorian year         |  R! | ISO week-numbering year        |\n   * |  s  | Second                         |  S  | Fraction of second             |\n   * |  t! | Seconds timestamp              |  T! | Milliseconds timestamp         |\n   * |  u  | Extended year                  |  U* | Cyclic year                    |\n   * |  v* | Timezone (generic non-locat.)  |  V* | Timezone (location)            |\n   * |  w  | Local week of year             |  W* | Week of month                  |\n   * |  x  | Timezone (ISO-8601 w/o Z)      |  X  | Timezone (ISO-8601)            |\n   * |  y  | Year (abs)                     |  Y  | Local week-numbering year      |\n   * |  z  | Timezone (specific non-locat.) |  Z* | Timezone (aliases)             |\n   *\n   * Letters marked by * are not implemented but reserved by Unicode standard.\n   *\n   * Letters marked by ! are non-standard, but implemented by date-fns:\n   * - `o` modifies the previous token to turn it into an ordinal (see `format` docs)\n   * - `i` is ISO day of week. For `i` and `ii` is returns numeric ISO week days,\n   *   i.e. 7 for Sunday, 1 for Monday, etc.\n   * - `I` is ISO week of year, as opposed to `w` which is local week of year.\n   * - `R` is ISO week-numbering year, as opposed to `Y` which is local week-numbering year.\n   *   `R` is supposed to be used in conjunction with `I` and `i`\n   *   for universal ISO week-numbering date, whereas\n   *   `Y` is supposed to be used in conjunction with `w` and `e`\n   *   for week-numbering date specific to the locale.\n   * - `P` is long localized date format\n   * - `p` is long localized time format\n   */\n\n};\nvar formatters = {\n  // Era\n  G: function G(date, token, localize) {\n    var era = date.getUTCFullYear() > 0 ? 1 : 0;\n\n    switch (token) {\n      // AD, BC\n      case 'G':\n      case 'GG':\n      case 'GGG':\n        return localize.era(era, {\n          width: 'abbreviated'\n        });\n      // A, B\n\n      case 'GGGGG':\n        return localize.era(era, {\n          width: 'narrow'\n        });\n      // Anno Domini, Before Christ\n\n      case 'GGGG':\n      default:\n        return localize.era(era, {\n          width: 'wide'\n        });\n    }\n  },\n  // Year\n  y: function y(date, token, localize) {\n    // Ordinal number\n    if (token === 'yo') {\n      var signedYear = date.getUTCFullYear(); // Returns 1 for 1 BC (which is year 0 in JavaScript)\n\n      var year = signedYear > 0 ? signedYear : 1 - signedYear;\n      return localize.ordinalNumber(year, {\n        unit: 'year'\n      });\n    }\n\n    return lightFormatters.y(date, token);\n  },\n  // Local week-numbering year\n  Y: function Y(date, token, localize, options) {\n    var signedWeekYear = getUTCWeekYear(date, options); // Returns 1 for 1 BC (which is year 0 in JavaScript)\n\n    var weekYear = signedWeekYear > 0 ? signedWeekYear : 1 - signedWeekYear; // Two digit year\n\n    if (token === 'YY') {\n      var twoDigitYear = weekYear % 100;\n      return addLeadingZeros(twoDigitYear, 2);\n    } // Ordinal number\n\n\n    if (token === 'Yo') {\n      return localize.ordinalNumber(weekYear, {\n        unit: 'year'\n      });\n    } // Padding\n\n\n    return addLeadingZeros(weekYear, token.length);\n  },\n  // ISO week-numbering year\n  R: function R(date, token) {\n    var isoWeekYear = getUTCISOWeekYear(date); // Padding\n\n    return addLeadingZeros(isoWeekYear, token.length);\n  },\n  // Extended year. This is a single number designating the year of this calendar system.\n  // The main difference between `y` and `u` localizers are B.C. years:\n  // | Year | `y` | `u` |\n  // |------|-----|-----|\n  // | AC 1 |   1 |   1 |\n  // | BC 1 |   1 |   0 |\n  // | BC 2 |   2 |  -1 |\n  // Also `yy` always returns the last two digits of a year,\n  // while `uu` pads single digit years to 2 characters and returns other years unchanged.\n  u: function u(date, token) {\n    var year = date.getUTCFullYear();\n    return addLeadingZeros(year, token.length);\n  },\n  // Quarter\n  Q: function Q(date, token, localize) {\n    var quarter = Math.ceil((date.getUTCMonth() + 1) / 3);\n\n    switch (token) {\n      // 1, 2, 3, 4\n      case 'Q':\n        return String(quarter);\n      // 01, 02, 03, 04\n\n      case 'QQ':\n        return addLeadingZeros(quarter, 2);\n      // 1st, 2nd, 3rd, 4th\n\n      case 'Qo':\n        return localize.ordinalNumber(quarter, {\n          unit: 'quarter'\n        });\n      // Q1, Q2, Q3, Q4\n\n      case 'QQQ':\n        return localize.quarter(quarter, {\n          width: 'abbreviated',\n          context: 'formatting'\n        });\n      // 1, 2, 3, 4 (narrow quarter; could be not numerical)\n\n      case 'QQQQQ':\n        return localize.quarter(quarter, {\n          width: 'narrow',\n          context: 'formatting'\n        });\n      // 1st quarter, 2nd quarter, ...\n\n      case 'QQQQ':\n      default:\n        return localize.quarter(quarter, {\n          width: 'wide',\n          context: 'formatting'\n        });\n    }\n  },\n  // Stand-alone quarter\n  q: function q(date, token, localize) {\n    var quarter = Math.ceil((date.getUTCMonth() + 1) / 3);\n\n    switch (token) {\n      // 1, 2, 3, 4\n      case 'q':\n        return String(quarter);\n      // 01, 02, 03, 04\n\n      case 'qq':\n        return addLeadingZeros(quarter, 2);\n      // 1st, 2nd, 3rd, 4th\n\n      case 'qo':\n        return localize.ordinalNumber(quarter, {\n          unit: 'quarter'\n        });\n      // Q1, Q2, Q3, Q4\n\n      case 'qqq':\n        return localize.quarter(quarter, {\n          width: 'abbreviated',\n          context: 'standalone'\n        });\n      // 1, 2, 3, 4 (narrow quarter; could be not numerical)\n\n      case 'qqqqq':\n        return localize.quarter(quarter, {\n          width: 'narrow',\n          context: 'standalone'\n        });\n      // 1st quarter, 2nd quarter, ...\n\n      case 'qqqq':\n      default:\n        return localize.quarter(quarter, {\n          width: 'wide',\n          context: 'standalone'\n        });\n    }\n  },\n  // Month\n  M: function M(date, token, localize) {\n    var month = date.getUTCMonth();\n\n    switch (token) {\n      case 'M':\n      case 'MM':\n        return lightFormatters.M(date, token);\n      // 1st, 2nd, ..., 12th\n\n      case 'Mo':\n        return localize.ordinalNumber(month + 1, {\n          unit: 'month'\n        });\n      // Jan, Feb, ..., Dec\n\n      case 'MMM':\n        return localize.month(month, {\n          width: 'abbreviated',\n          context: 'formatting'\n        });\n      // J, F, ..., D\n\n      case 'MMMMM':\n        return localize.month(month, {\n          width: 'narrow',\n          context: 'formatting'\n        });\n      // January, February, ..., December\n\n      case 'MMMM':\n      default:\n        return localize.month(month, {\n          width: 'wide',\n          context: 'formatting'\n        });\n    }\n  },\n  // Stand-alone month\n  L: function L(date, token, localize) {\n    var month = date.getUTCMonth();\n\n    switch (token) {\n      // 1, 2, ..., 12\n      case 'L':\n        return String(month + 1);\n      // 01, 02, ..., 12\n\n      case 'LL':\n        return addLeadingZeros(month + 1, 2);\n      // 1st, 2nd, ..., 12th\n\n      case 'Lo':\n        return localize.ordinalNumber(month + 1, {\n          unit: 'month'\n        });\n      // Jan, Feb, ..., Dec\n\n      case 'LLL':\n        return localize.month(month, {\n          width: 'abbreviated',\n          context: 'standalone'\n        });\n      // J, F, ..., D\n\n      case 'LLLLL':\n        return localize.month(month, {\n          width: 'narrow',\n          context: 'standalone'\n        });\n      // January, February, ..., December\n\n      case 'LLLL':\n      default:\n        return localize.month(month, {\n          width: 'wide',\n          context: 'standalone'\n        });\n    }\n  },\n  // Local week of year\n  w: function w(date, token, localize, options) {\n    var week = getUTCWeek(date, options);\n\n    if (token === 'wo') {\n      return localize.ordinalNumber(week, {\n        unit: 'week'\n      });\n    }\n\n    return addLeadingZeros(week, token.length);\n  },\n  // ISO week of year\n  I: function I(date, token, localize) {\n    var isoWeek = getUTCISOWeek(date);\n\n    if (token === 'Io') {\n      return localize.ordinalNumber(isoWeek, {\n        unit: 'week'\n      });\n    }\n\n    return addLeadingZeros(isoWeek, token.length);\n  },\n  // Day of the month\n  d: function d(date, token, localize) {\n    if (token === 'do') {\n      return localize.ordinalNumber(date.getUTCDate(), {\n        unit: 'date'\n      });\n    }\n\n    return lightFormatters.d(date, token);\n  },\n  // Day of year\n  D: function D(date, token, localize) {\n    var dayOfYear = getUTCDayOfYear(date);\n\n    if (token === 'Do') {\n      return localize.ordinalNumber(dayOfYear, {\n        unit: 'dayOfYear'\n      });\n    }\n\n    return addLeadingZeros(dayOfYear, token.length);\n  },\n  // Day of week\n  E: function E(date, token, localize) {\n    var dayOfWeek = date.getUTCDay();\n\n    switch (token) {\n      // Tue\n      case 'E':\n      case 'EE':\n      case 'EEE':\n        return localize.day(dayOfWeek, {\n          width: 'abbreviated',\n          context: 'formatting'\n        });\n      // T\n\n      case 'EEEEE':\n        return localize.day(dayOfWeek, {\n          width: 'narrow',\n          context: 'formatting'\n        });\n      // Tu\n\n      case 'EEEEEE':\n        return localize.day(dayOfWeek, {\n          width: 'short',\n          context: 'formatting'\n        });\n      // Tuesday\n\n      case 'EEEE':\n      default:\n        return localize.day(dayOfWeek, {\n          width: 'wide',\n          context: 'formatting'\n        });\n    }\n  },\n  // Local day of week\n  e: function e(date, token, localize, options) {\n    var dayOfWeek = date.getUTCDay();\n    var localDayOfWeek = (dayOfWeek - options.weekStartsOn + 8) % 7 || 7;\n\n    switch (token) {\n      // Numerical value (Nth day of week with current locale or weekStartsOn)\n      case 'e':\n        return String(localDayOfWeek);\n      // Padded numerical value\n\n      case 'ee':\n        return addLeadingZeros(localDayOfWeek, 2);\n      // 1st, 2nd, ..., 7th\n\n      case 'eo':\n        return localize.ordinalNumber(localDayOfWeek, {\n          unit: 'day'\n        });\n\n      case 'eee':\n        return localize.day(dayOfWeek, {\n          width: 'abbreviated',\n          context: 'formatting'\n        });\n      // T\n\n      case 'eeeee':\n        return localize.day(dayOfWeek, {\n          width: 'narrow',\n          context: 'formatting'\n        });\n      // Tu\n\n      case 'eeeeee':\n        return localize.day(dayOfWeek, {\n          width: 'short',\n          context: 'formatting'\n        });\n      // Tuesday\n\n      case 'eeee':\n      default:\n        return localize.day(dayOfWeek, {\n          width: 'wide',\n          context: 'formatting'\n        });\n    }\n  },\n  // Stand-alone local day of week\n  c: function c(date, token, localize, options) {\n    var dayOfWeek = date.getUTCDay();\n    var localDayOfWeek = (dayOfWeek - options.weekStartsOn + 8) % 7 || 7;\n\n    switch (token) {\n      // Numerical value (same as in `e`)\n      case 'c':\n        return String(localDayOfWeek);\n      // Padded numerical value\n\n      case 'cc':\n        return addLeadingZeros(localDayOfWeek, token.length);\n      // 1st, 2nd, ..., 7th\n\n      case 'co':\n        return localize.ordinalNumber(localDayOfWeek, {\n          unit: 'day'\n        });\n\n      case 'ccc':\n        return localize.day(dayOfWeek, {\n          width: 'abbreviated',\n          context: 'standalone'\n        });\n      // T\n\n      case 'ccccc':\n        return localize.day(dayOfWeek, {\n          width: 'narrow',\n          context: 'standalone'\n        });\n      // Tu\n\n      case 'cccccc':\n        return localize.day(dayOfWeek, {\n          width: 'short',\n          context: 'standalone'\n        });\n      // Tuesday\n\n      case 'cccc':\n      default:\n        return localize.day(dayOfWeek, {\n          width: 'wide',\n          context: 'standalone'\n        });\n    }\n  },\n  // ISO day of week\n  i: function i(date, token, localize) {\n    var dayOfWeek = date.getUTCDay();\n    var isoDayOfWeek = dayOfWeek === 0 ? 7 : dayOfWeek;\n\n    switch (token) {\n      // 2\n      case 'i':\n        return String(isoDayOfWeek);\n      // 02\n\n      case 'ii':\n        return addLeadingZeros(isoDayOfWeek, token.length);\n      // 2nd\n\n      case 'io':\n        return localize.ordinalNumber(isoDayOfWeek, {\n          unit: 'day'\n        });\n      // Tue\n\n      case 'iii':\n        return localize.day(dayOfWeek, {\n          width: 'abbreviated',\n          context: 'formatting'\n        });\n      // T\n\n      case 'iiiii':\n        return localize.day(dayOfWeek, {\n          width: 'narrow',\n          context: 'formatting'\n        });\n      // Tu\n\n      case 'iiiiii':\n        return localize.day(dayOfWeek, {\n          width: 'short',\n          context: 'formatting'\n        });\n      // Tuesday\n\n      case 'iiii':\n      default:\n        return localize.day(dayOfWeek, {\n          width: 'wide',\n          context: 'formatting'\n        });\n    }\n  },\n  // AM or PM\n  a: function a(date, token, localize) {\n    var hours = date.getUTCHours();\n    var dayPeriodEnumValue = hours / 12 >= 1 ? 'pm' : 'am';\n\n    switch (token) {\n      case 'a':\n      case 'aa':\n      case 'aaa':\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: 'abbreviated',\n          context: 'formatting'\n        });\n\n      case 'aaaaa':\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: 'narrow',\n          context: 'formatting'\n        });\n\n      case 'aaaa':\n      default:\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: 'wide',\n          context: 'formatting'\n        });\n    }\n  },\n  // AM, PM, midnight, noon\n  b: function b(date, token, localize) {\n    var hours = date.getUTCHours();\n    var dayPeriodEnumValue;\n\n    if (hours === 12) {\n      dayPeriodEnumValue = dayPeriodEnum.noon;\n    } else if (hours === 0) {\n      dayPeriodEnumValue = dayPeriodEnum.midnight;\n    } else {\n      dayPeriodEnumValue = hours / 12 >= 1 ? 'pm' : 'am';\n    }\n\n    switch (token) {\n      case 'b':\n      case 'bb':\n      case 'bbb':\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: 'abbreviated',\n          context: 'formatting'\n        });\n\n      case 'bbbbb':\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: 'narrow',\n          context: 'formatting'\n        });\n\n      case 'bbbb':\n      default:\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: 'wide',\n          context: 'formatting'\n        });\n    }\n  },\n  // in the morning, in the afternoon, in the evening, at night\n  B: function B(date, token, localize) {\n    var hours = date.getUTCHours();\n    var dayPeriodEnumValue;\n\n    if (hours >= 17) {\n      dayPeriodEnumValue = dayPeriodEnum.evening;\n    } else if (hours >= 12) {\n      dayPeriodEnumValue = dayPeriodEnum.afternoon;\n    } else if (hours >= 4) {\n      dayPeriodEnumValue = dayPeriodEnum.morning;\n    } else {\n      dayPeriodEnumValue = dayPeriodEnum.night;\n    }\n\n    switch (token) {\n      case 'B':\n      case 'BB':\n      case 'BBB':\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: 'abbreviated',\n          context: 'formatting'\n        });\n\n      case 'BBBBB':\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: 'narrow',\n          context: 'formatting'\n        });\n\n      case 'BBBB':\n      default:\n        return localize.dayPeriod(dayPeriodEnumValue, {\n          width: 'wide',\n          context: 'formatting'\n        });\n    }\n  },\n  // Hour [1-12]\n  h: function h(date, token, localize) {\n    if (token === 'ho') {\n      var hours = date.getUTCHours() % 12;\n      if (hours === 0) hours = 12;\n      return localize.ordinalNumber(hours, {\n        unit: 'hour'\n      });\n    }\n\n    return lightFormatters.h(date, token);\n  },\n  // Hour [0-23]\n  H: function H(date, token, localize) {\n    if (token === 'Ho') {\n      return localize.ordinalNumber(date.getUTCHours(), {\n        unit: 'hour'\n      });\n    }\n\n    return lightFormatters.H(date, token);\n  },\n  // Hour [0-11]\n  K: function K(date, token, localize) {\n    var hours = date.getUTCHours() % 12;\n\n    if (token === 'Ko') {\n      return localize.ordinalNumber(hours, {\n        unit: 'hour'\n      });\n    }\n\n    return addLeadingZeros(hours, token.length);\n  },\n  // Hour [1-24]\n  k: function k(date, token, localize) {\n    var hours = date.getUTCHours();\n    if (hours === 0) hours = 24;\n\n    if (token === 'ko') {\n      return localize.ordinalNumber(hours, {\n        unit: 'hour'\n      });\n    }\n\n    return addLeadingZeros(hours, token.length);\n  },\n  // Minute\n  m: function m(date, token, localize) {\n    if (token === 'mo') {\n      return localize.ordinalNumber(date.getUTCMinutes(), {\n        unit: 'minute'\n      });\n    }\n\n    return lightFormatters.m(date, token);\n  },\n  // Second\n  s: function s(date, token, localize) {\n    if (token === 'so') {\n      return localize.ordinalNumber(date.getUTCSeconds(), {\n        unit: 'second'\n      });\n    }\n\n    return lightFormatters.s(date, token);\n  },\n  // Fraction of second\n  S: function S(date, token) {\n    return lightFormatters.S(date, token);\n  },\n  // Timezone (ISO-8601. If offset is 0, output is always `'Z'`)\n  X: function X(date, token, _localize, options) {\n    var originalDate = options._originalDate || date;\n    var timezoneOffset = originalDate.getTimezoneOffset();\n\n    if (timezoneOffset === 0) {\n      return 'Z';\n    }\n\n    switch (token) {\n      // Hours and optional minutes\n      case 'X':\n        return formatTimezoneWithOptionalMinutes(timezoneOffset);\n      // Hours, minutes and optional seconds without `:` delimiter\n      // Note: neither ISO-8601 nor JavaScript supports seconds in timezone offsets\n      // so this token always has the same output as `XX`\n\n      case 'XXXX':\n      case 'XX':\n        // Hours and minutes without `:` delimiter\n        return formatTimezone(timezoneOffset);\n      // Hours, minutes and optional seconds with `:` delimiter\n      // Note: neither ISO-8601 nor JavaScript supports seconds in timezone offsets\n      // so this token always has the same output as `XXX`\n\n      case 'XXXXX':\n      case 'XXX': // Hours and minutes with `:` delimiter\n\n      default:\n        return formatTimezone(timezoneOffset, ':');\n    }\n  },\n  // Timezone (ISO-8601. If offset is 0, output is `'+00:00'` or equivalent)\n  x: function x(date, token, _localize, options) {\n    var originalDate = options._originalDate || date;\n    var timezoneOffset = originalDate.getTimezoneOffset();\n\n    switch (token) {\n      // Hours and optional minutes\n      case 'x':\n        return formatTimezoneWithOptionalMinutes(timezoneOffset);\n      // Hours, minutes and optional seconds without `:` delimiter\n      // Note: neither ISO-8601 nor JavaScript supports seconds in timezone offsets\n      // so this token always has the same output as `xx`\n\n      case 'xxxx':\n      case 'xx':\n        // Hours and minutes without `:` delimiter\n        return formatTimezone(timezoneOffset);\n      // Hours, minutes and optional seconds with `:` delimiter\n      // Note: neither ISO-8601 nor JavaScript supports seconds in timezone offsets\n      // so this token always has the same output as `xxx`\n\n      case 'xxxxx':\n      case 'xxx': // Hours and minutes with `:` delimiter\n\n      default:\n        return formatTimezone(timezoneOffset, ':');\n    }\n  },\n  // Timezone (GMT)\n  O: function O(date, token, _localize, options) {\n    var originalDate = options._originalDate || date;\n    var timezoneOffset = originalDate.getTimezoneOffset();\n\n    switch (token) {\n      // Short\n      case 'O':\n      case 'OO':\n      case 'OOO':\n        return 'GMT' + formatTimezoneShort(timezoneOffset, ':');\n      // Long\n\n      case 'OOOO':\n      default:\n        return 'GMT' + formatTimezone(timezoneOffset, ':');\n    }\n  },\n  // Timezone (specific non-location)\n  z: function z(date, token, _localize, options) {\n    var originalDate = options._originalDate || date;\n    var timezoneOffset = originalDate.getTimezoneOffset();\n\n    switch (token) {\n      // Short\n      case 'z':\n      case 'zz':\n      case 'zzz':\n        return 'GMT' + formatTimezoneShort(timezoneOffset, ':');\n      // Long\n\n      case 'zzzz':\n      default:\n        return 'GMT' + formatTimezone(timezoneOffset, ':');\n    }\n  },\n  // Seconds timestamp\n  t: function t(date, token, _localize, options) {\n    var originalDate = options._originalDate || date;\n    var timestamp = Math.floor(originalDate.getTime() / 1000);\n    return addLeadingZeros(timestamp, token.length);\n  },\n  // Milliseconds timestamp\n  T: function T(date, token, _localize, options) {\n    var originalDate = options._originalDate || date;\n    var timestamp = originalDate.getTime();\n    return addLeadingZeros(timestamp, token.length);\n  }\n};\n\nfunction formatTimezoneShort(offset, dirtyDelimiter) {\n  var sign = offset > 0 ? '-' : '+';\n  var absOffset = Math.abs(offset);\n  var hours = Math.floor(absOffset / 60);\n  var minutes = absOffset % 60;\n\n  if (minutes === 0) {\n    return sign + String(hours);\n  }\n\n  var delimiter = dirtyDelimiter || '';\n  return sign + String(hours) + delimiter + addLeadingZeros(minutes, 2);\n}\n\nfunction formatTimezoneWithOptionalMinutes(offset, dirtyDelimiter) {\n  if (offset % 60 === 0) {\n    var sign = offset > 0 ? '-' : '+';\n    return sign + addLeadingZeros(Math.abs(offset) / 60, 2);\n  }\n\n  return formatTimezone(offset, dirtyDelimiter);\n}\n\nfunction formatTimezone(offset, dirtyDelimiter) {\n  var delimiter = dirtyDelimiter || '';\n  var sign = offset > 0 ? '-' : '+';\n  var absOffset = Math.abs(offset);\n  var hours = addLeadingZeros(Math.floor(absOffset / 60), 2);\n  var minutes = addLeadingZeros(absOffset % 60, 2);\n  return sign + hours + delimiter + minutes;\n}\n\nexport default formatters;","function dateLongFormatter(pattern, formatLong) {\n  switch (pattern) {\n    case 'P':\n      return formatLong.date({\n        width: 'short'\n      });\n\n    case 'PP':\n      return formatLong.date({\n        width: 'medium'\n      });\n\n    case 'PPP':\n      return formatLong.date({\n        width: 'long'\n      });\n\n    case 'PPPP':\n    default:\n      return formatLong.date({\n        width: 'full'\n      });\n  }\n}\n\nfunction timeLongFormatter(pattern, formatLong) {\n  switch (pattern) {\n    case 'p':\n      return formatLong.time({\n        width: 'short'\n      });\n\n    case 'pp':\n      return formatLong.time({\n        width: 'medium'\n      });\n\n    case 'ppp':\n      return formatLong.time({\n        width: 'long'\n      });\n\n    case 'pppp':\n    default:\n      return formatLong.time({\n        width: 'full'\n      });\n  }\n}\n\nfunction dateTimeLongFormatter(pattern, formatLong) {\n  var matchResult = pattern.match(/(P+)(p+)?/);\n  var datePattern = matchResult[1];\n  var timePattern = matchResult[2];\n\n  if (!timePattern) {\n    return dateLongFormatter(pattern, formatLong);\n  }\n\n  var dateTimeFormat;\n\n  switch (datePattern) {\n    case 'P':\n      dateTimeFormat = formatLong.dateTime({\n        width: 'short'\n      });\n      break;\n\n    case 'PP':\n      dateTimeFormat = formatLong.dateTime({\n        width: 'medium'\n      });\n      break;\n\n    case 'PPP':\n      dateTimeFormat = formatLong.dateTime({\n        width: 'long'\n      });\n      break;\n\n    case 'PPPP':\n    default:\n      dateTimeFormat = formatLong.dateTime({\n        width: 'full'\n      });\n      break;\n  }\n\n  return dateTimeFormat.replace('{{date}}', dateLongFormatter(datePattern, formatLong)).replace('{{time}}', timeLongFormatter(timePattern, formatLong));\n}\n\nvar longFormatters = {\n  p: timeLongFormatter,\n  P: dateTimeLongFormatter\n};\nexport default longFormatters;","var protectedDayOfYearTokens = ['D', 'DD'];\nvar protectedWeekYearTokens = ['YY', 'YYYY'];\nexport function isProtectedDayOfYearToken(token) {\n  return protectedDayOfYearTokens.indexOf(token) !== -1;\n}\nexport function isProtectedWeekYearToken(token) {\n  return protectedWeekYearTokens.indexOf(token) !== -1;\n}\nexport function throwProtectedError(token, format, input) {\n  if (token === 'YYYY') {\n    throw new RangeError(\"Use `yyyy` instead of `YYYY` (in `\".concat(format, \"`) for formatting years to the input `\").concat(input, \"`; see: https://git.io/fxCyr\"));\n  } else if (token === 'YY') {\n    throw new RangeError(\"Use `yy` instead of `YY` (in `\".concat(format, \"`) for formatting years to the input `\").concat(input, \"`; see: https://git.io/fxCyr\"));\n  } else if (token === 'D') {\n    throw new RangeError(\"Use `d` instead of `D` (in `\".concat(format, \"`) for formatting days of the month to the input `\").concat(input, \"`; see: https://git.io/fxCyr\"));\n  } else if (token === 'DD') {\n    throw new RangeError(\"Use `dd` instead of `DD` (in `\".concat(format, \"`) for formatting days of the month to the input `\").concat(input, \"`; see: https://git.io/fxCyr\"));\n  }\n}","import isValid from '../isValid/index.js';\nimport defaultLocale from '../locale/en-US/index.js';\nimport subMilliseconds from '../subMilliseconds/index.js';\nimport toDate from '../toDate/index.js';\nimport formatters from '../_lib/format/formatters/index.js';\nimport longFormatters from '../_lib/format/longFormatters/index.js';\nimport getTimezoneOffsetInMilliseconds from '../_lib/getTimezoneOffsetInMilliseconds/index.js';\nimport { isProtectedDayOfYearToken, isProtectedWeekYearToken, throwProtectedError } from '../_lib/protectedTokens/index.js';\nimport toInteger from '../_lib/toInteger/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js'; // This RegExp consists of three parts separated by `|`:\n// - [yYQqMLwIdDecihHKkms]o matches any available ordinal number token\n//   (one of the certain letters followed by `o`)\n// - (\\w)\\1* matches any sequences of the same letter\n// - '' matches two quote characters in a row\n// - '(''|[^'])+('|$) matches anything surrounded by two quote characters ('),\n//   except a single quote symbol, which ends the sequence.\n//   Two quote characters do not end the sequence.\n//   If there is no matching single quote\n//   then the sequence will continue until the end of the string.\n// - . matches any single character unmatched by previous parts of the RegExps\n\nvar formattingTokensRegExp = /[yYQqMLwIdDecihHKkms]o|(\\w)\\1*|''|'(''|[^'])+('|$)|./g; // This RegExp catches symbols escaped by quotes, and also\n// sequences of symbols P, p, and the combinations like `PPPPPPPppppp`\n\nvar longFormattingTokensRegExp = /P+p+|P+|p+|''|'(''|[^'])+('|$)|./g;\nvar escapedStringRegExp = /^'([^]*?)'?$/;\nvar doubleQuoteRegExp = /''/g;\nvar unescapedLatinCharacterRegExp = /[a-zA-Z]/;\n/**\n * @name format\n * @category Common Helpers\n * @summary Format the date.\n *\n * @description\n * Return the formatted date string in the given format. The result may vary by locale.\n *\n * > ⚠️ Please note that the `format` tokens differ from Moment.js and other libraries.\n * > See: https://git.io/fxCyr\n *\n * The characters wrapped between two single quotes characters (') are escaped.\n * Two single quotes in a row, whether inside or outside a quoted sequence, represent a 'real' single quote.\n * (see the last example)\n *\n * Format of the string is based on Unicode Technical Standard #35:\n * https://www.unicode.org/reports/tr35/tr35-dates.html#Date_Field_Symbol_Table\n * with a few additions (see note 7 below the table).\n *\n * Accepted patterns:\n * | Unit                            | Pattern | Result examples                   | Notes |\n * |---------------------------------|---------|-----------------------------------|-------|\n * | Era                             | G..GGG  | AD, BC                            |       |\n * |                                 | GGGG    | Anno Domini, Before Christ        | 2     |\n * |                                 | GGGGG   | A, B                              |       |\n * | Calendar year                   | y       | 44, 1, 1900, 2017                 | 5     |\n * |                                 | yo      | 44th, 1st, 0th, 17th              | 5,7   |\n * |                                 | yy      | 44, 01, 00, 17                    | 5     |\n * |                                 | yyy     | 044, 001, 1900, 2017              | 5     |\n * |                                 | yyyy    | 0044, 0001, 1900, 2017            | 5     |\n * |                                 | yyyyy   | ...                               | 3,5   |\n * | Local week-numbering year       | Y       | 44, 1, 1900, 2017                 | 5     |\n * |                                 | Yo      | 44th, 1st, 1900th, 2017th         | 5,7   |\n * |                                 | YY      | 44, 01, 00, 17                    | 5,8   |\n * |                                 | YYY     | 044, 001, 1900, 2017              | 5     |\n * |                                 | YYYY    | 0044, 0001, 1900, 2017            | 5,8   |\n * |                                 | YYYYY   | ...                               | 3,5   |\n * | ISO week-numbering year         | R       | -43, 0, 1, 1900, 2017             | 5,7   |\n * |                                 | RR      | -43, 00, 01, 1900, 2017           | 5,7   |\n * |                                 | RRR     | -043, 000, 001, 1900, 2017        | 5,7   |\n * |                                 | RRRR    | -0043, 0000, 0001, 1900, 2017     | 5,7   |\n * |                                 | RRRRR   | ...                               | 3,5,7 |\n * | Extended year                   | u       | -43, 0, 1, 1900, 2017             | 5     |\n * |                                 | uu      | -43, 01, 1900, 2017               | 5     |\n * |                                 | uuu     | -043, 001, 1900, 2017             | 5     |\n * |                                 | uuuu    | -0043, 0001, 1900, 2017           | 5     |\n * |                                 | uuuuu   | ...                               | 3,5   |\n * | Quarter (formatting)            | Q       | 1, 2, 3, 4                        |       |\n * |                                 | Qo      | 1st, 2nd, 3rd, 4th                | 7     |\n * |                                 | QQ      | 01, 02, 03, 04                    |       |\n * |                                 | QQQ     | Q1, Q2, Q3, Q4                    |       |\n * |                                 | QQQQ    | 1st quarter, 2nd quarter, ...     | 2     |\n * |                                 | QQQQQ   | 1, 2, 3, 4                        | 4     |\n * | Quarter (stand-alone)           | q       | 1, 2, 3, 4                        |       |\n * |                                 | qo      | 1st, 2nd, 3rd, 4th                | 7     |\n * |                                 | qq      | 01, 02, 03, 04                    |       |\n * |                                 | qqq     | Q1, Q2, Q3, Q4                    |       |\n * |                                 | qqqq    | 1st quarter, 2nd quarter, ...     | 2     |\n * |                                 | qqqqq   | 1, 2, 3, 4                        | 4     |\n * | Month (formatting)              | M       | 1, 2, ..., 12                     |       |\n * |                                 | Mo      | 1st, 2nd, ..., 12th               | 7     |\n * |                                 | MM      | 01, 02, ..., 12                   |       |\n * |                                 | MMM     | Jan, Feb, ..., Dec                |       |\n * |                                 | MMMM    | January, February, ..., December  | 2     |\n * |                                 | MMMMM   | J, F, ..., D                      |       |\n * | Month (stand-alone)             | L       | 1, 2, ..., 12                     |       |\n * |                                 | Lo      | 1st, 2nd, ..., 12th               | 7     |\n * |                                 | LL      | 01, 02, ..., 12                   |       |\n * |                                 | LLL     | Jan, Feb, ..., Dec                |       |\n * |                                 | LLLL    | January, February, ..., December  | 2     |\n * |                                 | LLLLL   | J, F, ..., D                      |       |\n * | Local week of year              | w       | 1, 2, ..., 53                     |       |\n * |                                 | wo      | 1st, 2nd, ..., 53th               | 7     |\n * |                                 | ww      | 01, 02, ..., 53                   |       |\n * | ISO week of year                | I       | 1, 2, ..., 53                     | 7     |\n * |                                 | Io      | 1st, 2nd, ..., 53th               | 7     |\n * |                                 | II      | 01, 02, ..., 53                   | 7     |\n * | Day of month                    | d       | 1, 2, ..., 31                     |       |\n * |                                 | do      | 1st, 2nd, ..., 31st               | 7     |\n * |                                 | dd      | 01, 02, ..., 31                   |       |\n * | Day of year                     | D       | 1, 2, ..., 365, 366               | 9     |\n * |                                 | Do      | 1st, 2nd, ..., 365th, 366th       | 7     |\n * |                                 | DD      | 01, 02, ..., 365, 366             | 9     |\n * |                                 | DDD     | 001, 002, ..., 365, 366           |       |\n * |                                 | DDDD    | ...                               | 3     |\n * | Day of week (formatting)        | E..EEE  | Mon, Tue, Wed, ..., Sun           |       |\n * |                                 | EEEE    | Monday, Tuesday, ..., Sunday      | 2     |\n * |                                 | EEEEE   | M, T, W, T, F, S, S               |       |\n * |                                 | EEEEEE  | Mo, Tu, We, Th, Fr, Su, Sa        |       |\n * | ISO day of week (formatting)    | i       | 1, 2, 3, ..., 7                   | 7     |\n * |                                 | io      | 1st, 2nd, ..., 7th                | 7     |\n * |                                 | ii      | 01, 02, ..., 07                   | 7     |\n * |                                 | iii     | Mon, Tue, Wed, ..., Sun           | 7     |\n * |                                 | iiii    | Monday, Tuesday, ..., Sunday      | 2,7   |\n * |                                 | iiiii   | M, T, W, T, F, S, S               | 7     |\n * |                                 | iiiiii  | Mo, Tu, We, Th, Fr, Su, Sa        | 7     |\n * | Local day of week (formatting)  | e       | 2, 3, 4, ..., 1                   |       |\n * |                                 | eo      | 2nd, 3rd, ..., 1st                | 7     |\n * |                                 | ee      | 02, 03, ..., 01                   |       |\n * |                                 | eee     | Mon, Tue, Wed, ..., Sun           |       |\n * |                                 | eeee    | Monday, Tuesday, ..., Sunday      | 2     |\n * |                                 | eeeee   | M, T, W, T, F, S, S               |       |\n * |                                 | eeeeee  | Mo, Tu, We, Th, Fr, Su, Sa        |       |\n * | Local day of week (stand-alone) | c       | 2, 3, 4, ..., 1                   |       |\n * |                                 | co      | 2nd, 3rd, ..., 1st                | 7     |\n * |                                 | cc      | 02, 03, ..., 01                   |       |\n * |                                 | ccc     | Mon, Tue, Wed, ..., Sun           |       |\n * |                                 | cccc    | Monday, Tuesday, ..., Sunday      | 2     |\n * |                                 | ccccc   | M, T, W, T, F, S, S               |       |\n * |                                 | cccccc  | Mo, Tu, We, Th, Fr, Su, Sa        |       |\n * | AM, PM                          | a..aaa  | AM, PM                            |       |\n * |                                 | aaaa    | a.m., p.m.                        | 2     |\n * |                                 | aaaaa   | a, p                              |       |\n * | AM, PM, noon, midnight          | b..bbb  | AM, PM, noon, midnight            |       |\n * |                                 | bbbb    | a.m., p.m., noon, midnight        | 2     |\n * |                                 | bbbbb   | a, p, n, mi                       |       |\n * | Flexible day period             | B..BBB  | at night, in the morning, ...     |       |\n * |                                 | BBBB    | at night, in the morning, ...     | 2     |\n * |                                 | BBBBB   | at night, in the morning, ...     |       |\n * | Hour [1-12]                     | h       | 1, 2, ..., 11, 12                 |       |\n * |                                 | ho      | 1st, 2nd, ..., 11th, 12th         | 7     |\n * |                                 | hh      | 01, 02, ..., 11, 12               |       |\n * | Hour [0-23]                     | H       | 0, 1, 2, ..., 23                  |       |\n * |                                 | Ho      | 0th, 1st, 2nd, ..., 23rd          | 7     |\n * |                                 | HH      | 00, 01, 02, ..., 23               |       |\n * | Hour [0-11]                     | K       | 1, 2, ..., 11, 0                  |       |\n * |                                 | Ko      | 1st, 2nd, ..., 11th, 0th          | 7     |\n * |                                 | KK      | 01, 02, ..., 11, 00               |       |\n * | Hour [1-24]                     | k       | 24, 1, 2, ..., 23                 |       |\n * |                                 | ko      | 24th, 1st, 2nd, ..., 23rd         | 7     |\n * |                                 | kk      | 24, 01, 02, ..., 23               |       |\n * | Minute                          | m       | 0, 1, ..., 59                     |       |\n * |                                 | mo      | 0th, 1st, ..., 59th               | 7     |\n * |                                 | mm      | 00, 01, ..., 59                   |       |\n * | Second                          | s       | 0, 1, ..., 59                     |       |\n * |                                 | so      | 0th, 1st, ..., 59th               | 7     |\n * |                                 | ss      | 00, 01, ..., 59                   |       |\n * | Fraction of second              | S       | 0, 1, ..., 9                      |       |\n * |                                 | SS      | 00, 01, ..., 99                   |       |\n * |                                 | SSS     | 000, 0001, ..., 999               |       |\n * |                                 | SSSS    | ...                               | 3     |\n * | Timezone (ISO-8601 w/ Z)        | X       | -08, +0530, Z                     |       |\n * |                                 | XX      | -0800, +0530, Z                   |       |\n * |                                 | XXX     | -08:00, +05:30, Z                 |       |\n * |                                 | XXXX    | -0800, +0530, Z, +123456          | 2     |\n * |                                 | XXXXX   | -08:00, +05:30, Z, +12:34:56      |       |\n * | Timezone (ISO-8601 w/o Z)       | x       | -08, +0530, +00                   |       |\n * |                                 | xx      | -0800, +0530, +0000               |       |\n * |                                 | xxx     | -08:00, +05:30, +00:00            | 2     |\n * |                                 | xxxx    | -0800, +0530, +0000, +123456      |       |\n * |                                 | xxxxx   | -08:00, +05:30, +00:00, +12:34:56 |       |\n * | Timezone (GMT)                  | O...OOO | GMT-8, GMT+5:30, GMT+0            |       |\n * |                                 | OOOO    | GMT-08:00, GMT+05:30, GMT+00:00   | 2     |\n * | Timezone (specific non-locat.)  | z...zzz | GMT-8, GMT+5:30, GMT+0            | 6     |\n * |                                 | zzzz    | GMT-08:00, GMT+05:30, GMT+00:00   | 2,6   |\n * | Seconds timestamp               | t       | 512969520                         | 7     |\n * |                                 | tt      | ...                               | 3,7   |\n * | Milliseconds timestamp          | T       | 512969520900                      | 7     |\n * |                                 | TT      | ...                               | 3,7   |\n * | Long localized date             | P       | 05/29/1453                        | 7     |\n * |                                 | PP      | May 29, 1453                      | 7     |\n * |                                 | PPP     | May 29th, 1453                    | 7     |\n * |                                 | PPPP    | Sunday, May 29th, 1453            | 2,7   |\n * | Long localized time             | p       | 12:00 AM                          | 7     |\n * |                                 | pp      | 12:00:00 AM                       | 7     |\n * |                                 | ppp     | 12:00:00 AM GMT+2                 | 7     |\n * |                                 | pppp    | 12:00:00 AM GMT+02:00             | 2,7   |\n * | Combination of date and time    | Pp      | 05/29/1453, 12:00 AM              | 7     |\n * |                                 | PPpp    | May 29, 1453, 12:00:00 AM         | 7     |\n * |                                 | PPPppp  | May 29th, 1453 at ...             | 7     |\n * |                                 | PPPPpppp| Sunday, May 29th, 1453 at ...     | 2,7   |\n * Notes:\n * 1. \"Formatting\" units (e.g. formatting quarter) in the default en-US locale\n *    are the same as \"stand-alone\" units, but are different in some languages.\n *    \"Formatting\" units are declined according to the rules of the language\n *    in the context of a date. \"Stand-alone\" units are always nominative singular:\n *\n *    `format(new Date(2017, 10, 6), 'do LLLL', {locale: cs}) //=> '6. listopad'`\n *\n *    `format(new Date(2017, 10, 6), 'do MMMM', {locale: cs}) //=> '6. listopadu'`\n *\n * 2. Any sequence of the identical letters is a pattern, unless it is escaped by\n *    the single quote characters (see below).\n *    If the sequence is longer than listed in table (e.g. `EEEEEEEEEEE`)\n *    the output will be the same as default pattern for this unit, usually\n *    the longest one (in case of ISO weekdays, `EEEE`). Default patterns for units\n *    are marked with \"2\" in the last column of the table.\n *\n *    `format(new Date(2017, 10, 6), 'MMM') //=> 'Nov'`\n *\n *    `format(new Date(2017, 10, 6), 'MMMM') //=> 'November'`\n *\n *    `format(new Date(2017, 10, 6), 'MMMMM') //=> 'N'`\n *\n *    `format(new Date(2017, 10, 6), 'MMMMMM') //=> 'November'`\n *\n *    `format(new Date(2017, 10, 6), 'MMMMMMM') //=> 'November'`\n *\n * 3. Some patterns could be unlimited length (such as `yyyyyyyy`).\n *    The output will be padded with zeros to match the length of the pattern.\n *\n *    `format(new Date(2017, 10, 6), 'yyyyyyyy') //=> '00002017'`\n *\n * 4. `QQQQQ` and `qqqqq` could be not strictly numerical in some locales.\n *    These tokens represent the shortest form of the quarter.\n *\n * 5. The main difference between `y` and `u` patterns are B.C. years:\n *\n *    | Year | `y` | `u` |\n *    |------|-----|-----|\n *    | AC 1 |   1 |   1 |\n *    | BC 1 |   1 |   0 |\n *    | BC 2 |   2 |  -1 |\n *\n *    Also `yy` always returns the last two digits of a year,\n *    while `uu` pads single digit years to 2 characters and returns other years unchanged:\n *\n *    | Year | `yy` | `uu` |\n *    |------|------|------|\n *    | 1    |   01 |   01 |\n *    | 14   |   14 |   14 |\n *    | 376  |   76 |  376 |\n *    | 1453 |   53 | 1453 |\n *\n *    The same difference is true for local and ISO week-numbering years (`Y` and `R`),\n *    except local week-numbering years are dependent on `options.weekStartsOn`\n *    and `options.firstWeekContainsDate` (compare [getISOWeekYear]{@link https://date-fns.org/docs/getISOWeekYear}\n *    and [getWeekYear]{@link https://date-fns.org/docs/getWeekYear}).\n *\n * 6. Specific non-location timezones are currently unavailable in `date-fns`,\n *    so right now these tokens fall back to GMT timezones.\n *\n * 7. These patterns are not in the Unicode Technical Standard #35:\n *    - `i`: ISO day of week\n *    - `I`: ISO week of year\n *    - `R`: ISO week-numbering year\n *    - `t`: seconds timestamp\n *    - `T`: milliseconds timestamp\n *    - `o`: ordinal number modifier\n *    - `P`: long localized date\n *    - `p`: long localized time\n *\n * 8. `YY` and `YYYY` tokens represent week-numbering years but they are often confused with years.\n *    You should enable `options.useAdditionalWeekYearTokens` to use them. See: https://git.io/fxCyr\n *\n * 9. `D` and `DD` tokens represent days of the year but they are ofthen confused with days of the month.\n *    You should enable `options.useAdditionalDayOfYearTokens` to use them. See: https://git.io/fxCyr\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * - The second argument is now required for the sake of explicitness.\n *\n *   ```javascript\n *   // Before v2.0.0\n *   format(new Date(2016, 0, 1))\n *\n *   // v2.0.0 onward\n *   format(new Date(2016, 0, 1), \"yyyy-MM-dd'T'HH:mm:ss.SSSxxx\")\n *   ```\n *\n * - New format string API for `format` function\n *   which is based on [Unicode Technical Standard #35](https://www.unicode.org/reports/tr35/tr35-dates.html#Date_Field_Symbol_Table).\n *   See [this post](https://blog.date-fns.org/post/unicode-tokens-in-date-fns-v2-sreatyki91jg) for more details.\n *\n * - Characters are now escaped using single quote symbols (`'`) instead of square brackets.\n *\n * @param {Date|Number} date - the original date\n * @param {String} format - the string of tokens\n * @param {Object} [options] - an object with options.\n * @param {Locale} [options.locale=defaultLocale] - the locale object. See [Locale]{@link https://date-fns.org/docs/Locale}\n * @param {0|1|2|3|4|5|6} [options.weekStartsOn=0] - the index of the first day of the week (0 - Sunday)\n * @param {Number} [options.firstWeekContainsDate=1] - the day of January, which is\n * @param {Boolean} [options.useAdditionalWeekYearTokens=false] - if true, allows usage of the week-numbering year tokens `YY` and `YYYY`;\n *   see: https://git.io/fxCyr\n * @param {Boolean} [options.useAdditionalDayOfYearTokens=false] - if true, allows usage of the day of year tokens `D` and `DD`;\n *   see: https://git.io/fxCyr\n * @returns {String} the formatted date string\n * @throws {TypeError} 2 arguments required\n * @throws {RangeError} `date` must not be Invalid Date\n * @throws {RangeError} `options.locale` must contain `localize` property\n * @throws {RangeError} `options.locale` must contain `formatLong` property\n * @throws {RangeError} `options.weekStartsOn` must be between 0 and 6\n * @throws {RangeError} `options.firstWeekContainsDate` must be between 1 and 7\n * @throws {RangeError} use `yyyy` instead of `YYYY` for formatting years using [format provided] to the input [input provided]; see: https://git.io/fxCyr\n * @throws {RangeError} use `yy` instead of `YY` for formatting years using [format provided] to the input [input provided]; see: https://git.io/fxCyr\n * @throws {RangeError} use `d` instead of `D` for formatting days of the month using [format provided] to the input [input provided]; see: https://git.io/fxCyr\n * @throws {RangeError} use `dd` instead of `DD` for formatting days of the month using [format provided] to the input [input provided]; see: https://git.io/fxCyr\n * @throws {RangeError} format string contains an unescaped latin alphabet character\n *\n * @example\n * // Represent 11 February 2014 in middle-endian format:\n * var result = format(new Date(2014, 1, 11), 'MM/dd/yyyy')\n * //=> '02/11/2014'\n *\n * @example\n * // Represent 2 July 2014 in Esperanto:\n * import { eoLocale } from 'date-fns/locale/eo'\n * var result = format(new Date(2014, 6, 2), \"do 'de' MMMM yyyy\", {\n *   locale: eoLocale\n * })\n * //=> '2-a de julio 2014'\n *\n * @example\n * // Escape string by single quote characters:\n * var result = format(new Date(2014, 6, 2, 15), \"h 'o''clock'\")\n * //=> \"3 o'clock\"\n */\n\nexport default function format(dirtyDate, dirtyFormatStr, dirtyOptions) {\n  requiredArgs(2, arguments);\n  var formatStr = String(dirtyFormatStr);\n  var options = dirtyOptions || {};\n  var locale = options.locale || defaultLocale;\n  var localeFirstWeekContainsDate = locale.options && locale.options.firstWeekContainsDate;\n  var defaultFirstWeekContainsDate = localeFirstWeekContainsDate == null ? 1 : toInteger(localeFirstWeekContainsDate);\n  var firstWeekContainsDate = options.firstWeekContainsDate == null ? defaultFirstWeekContainsDate : toInteger(options.firstWeekContainsDate); // Test if weekStartsOn is between 1 and 7 _and_ is not NaN\n\n  if (!(firstWeekContainsDate >= 1 && firstWeekContainsDate <= 7)) {\n    throw new RangeError('firstWeekContainsDate must be between 1 and 7 inclusively');\n  }\n\n  var localeWeekStartsOn = locale.options && locale.options.weekStartsOn;\n  var defaultWeekStartsOn = localeWeekStartsOn == null ? 0 : toInteger(localeWeekStartsOn);\n  var weekStartsOn = options.weekStartsOn == null ? defaultWeekStartsOn : toInteger(options.weekStartsOn); // Test if weekStartsOn is between 0 and 6 _and_ is not NaN\n\n  if (!(weekStartsOn >= 0 && weekStartsOn <= 6)) {\n    throw new RangeError('weekStartsOn must be between 0 and 6 inclusively');\n  }\n\n  if (!locale.localize) {\n    throw new RangeError('locale must contain localize property');\n  }\n\n  if (!locale.formatLong) {\n    throw new RangeError('locale must contain formatLong property');\n  }\n\n  var originalDate = toDate(dirtyDate);\n\n  if (!isValid(originalDate)) {\n    throw new RangeError('Invalid time value');\n  } // Convert the date in system timezone to the same date in UTC+00:00 timezone.\n  // This ensures that when UTC functions will be implemented, locales will be compatible with them.\n  // See an issue about UTC functions: https://github.com/date-fns/date-fns/issues/376\n\n\n  var timezoneOffset = getTimezoneOffsetInMilliseconds(originalDate);\n  var utcDate = subMilliseconds(originalDate, timezoneOffset);\n  var formatterOptions = {\n    firstWeekContainsDate: firstWeekContainsDate,\n    weekStartsOn: weekStartsOn,\n    locale: locale,\n    _originalDate: originalDate\n  };\n  var result = formatStr.match(longFormattingTokensRegExp).map(function (substring) {\n    var firstCharacter = substring[0];\n\n    if (firstCharacter === 'p' || firstCharacter === 'P') {\n      var longFormatter = longFormatters[firstCharacter];\n      return longFormatter(substring, locale.formatLong, formatterOptions);\n    }\n\n    return substring;\n  }).join('').match(formattingTokensRegExp).map(function (substring) {\n    // Replace two single quote characters with one single quote character\n    if (substring === \"''\") {\n      return \"'\";\n    }\n\n    var firstCharacter = substring[0];\n\n    if (firstCharacter === \"'\") {\n      return cleanEscapedString(substring);\n    }\n\n    var formatter = formatters[firstCharacter];\n\n    if (formatter) {\n      if (!options.useAdditionalWeekYearTokens && isProtectedWeekYearToken(substring)) {\n        throwProtectedError(substring, dirtyFormatStr, dirtyDate);\n      }\n\n      if (!options.useAdditionalDayOfYearTokens && isProtectedDayOfYearToken(substring)) {\n        throwProtectedError(substring, dirtyFormatStr, dirtyDate);\n      }\n\n      return formatter(utcDate, substring, locale.localize, formatterOptions);\n    }\n\n    if (firstCharacter.match(unescapedLatinCharacterRegExp)) {\n      throw new RangeError('Format string contains an unescaped latin alphabet character `' + firstCharacter + '`');\n    }\n\n    return substring;\n  }).join('');\n  return result;\n}\n\nfunction cleanEscapedString(input) {\n  return input.match(escapedStringRegExp)[1].replace(doubleQuoteRegExp, \"'\");\n}","import toDate from '../toDate/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\n/**\n * @name isAfter\n * @category Common Helpers\n * @summary Is the first date after the second one?\n *\n * @description\n * Is the first date after the second one?\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the date that should be after the other one to return true\n * @param {Date|Number} dateToCompare - the date to compare with\n * @returns {Boolean} the first date is after the second date\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // Is 10 July 1989 after 11 February 1987?\n * var result = isAfter(new Date(1989, 6, 10), new Date(1987, 1, 11))\n * //=> true\n */\n\nexport default function isAfter(dirtyDate, dirtyDateToCompare) {\n  requiredArgs(2, arguments);\n  var date = toDate(dirtyDate);\n  var dateToCompare = toDate(dirtyDateToCompare);\n  return date.getTime() > dateToCompare.getTime();\n}","import toDate from '../toDate/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\n/**\n * @name isBefore\n * @category Common Helpers\n * @summary Is the first date before the second one?\n *\n * @description\n * Is the first date before the second one?\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the date that should be before the other one to return true\n * @param {Date|Number} dateToCompare - the date to compare with\n * @returns {Boolean} the first date is before the second date\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // Is 10 July 1989 before 11 February 1987?\n * var result = isBefore(new Date(1989, 6, 10), new Date(1987, 1, 11))\n * //=> false\n */\n\nexport default function isBefore(dirtyDate, dirtyDateToCompare) {\n  requiredArgs(2, arguments);\n  var date = toDate(dirtyDate);\n  var dateToCompare = toDate(dirtyDateToCompare);\n  return date.getTime() < dateToCompare.getTime();\n}","import toDate from '../toDate/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\n/**\n * @name startOfHour\n * @category Hour Helpers\n * @summary Return the start of an hour for the given date.\n *\n * @description\n * Return the start of an hour for the given date.\n * The result will be in the local timezone.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the original date\n * @returns {Date} the start of an hour\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // The start of an hour for 2 September 2014 11:55:00:\n * var result = startOfHour(new Date(2014, 8, 2, 11, 55))\n * //=> Tue Sep 02 2014 11:00:00\n */\n\nexport default function startOfHour(dirtyDate) {\n  requiredArgs(1, arguments);\n  var date = toDate(dirtyDate);\n  date.setMinutes(0, 0, 0);\n  return date;\n}","export default function assign(target, dirtyObject) {\n  if (target == null) {\n    throw new TypeError('assign requires that input parameter not be null or undefined');\n  }\n\n  dirtyObject = dirtyObject || {};\n\n  for (var property in dirtyObject) {\n    if (dirtyObject.hasOwnProperty(property)) {\n      target[property] = dirtyObject[property];\n    }\n  }\n\n  return target;\n}","import toInteger from '../toInteger/index.js';\nimport toDate from '../../toDate/index.js';\nimport requiredArgs from '../requiredArgs/index.js'; // This function will be a part of public API when UTC function will be implemented.\n// See issue: https://github.com/date-fns/date-fns/issues/376\n\nexport default function setUTCDay(dirtyDate, dirtyDay, dirtyOptions) {\n  requiredArgs(2, arguments);\n  var options = dirtyOptions || {};\n  var locale = options.locale;\n  var localeWeekStartsOn = locale && locale.options && locale.options.weekStartsOn;\n  var defaultWeekStartsOn = localeWeekStartsOn == null ? 0 : toInteger(localeWeekStartsOn);\n  var weekStartsOn = options.weekStartsOn == null ? defaultWeekStartsOn : toInteger(options.weekStartsOn); // Test if weekStartsOn is between 0 and 6 _and_ is not NaN\n\n  if (!(weekStartsOn >= 0 && weekStartsOn <= 6)) {\n    throw new RangeError('weekStartsOn must be between 0 and 6 inclusively');\n  }\n\n  var date = toDate(dirtyDate);\n  var day = toInteger(dirtyDay);\n  var currentDay = date.getUTCDay();\n  var remainder = day % 7;\n  var dayIndex = (remainder + 7) % 7;\n  var diff = (dayIndex < weekStartsOn ? 7 : 0) + day - currentDay;\n  date.setUTCDate(date.getUTCDate() + diff);\n  return date;\n}","import getUTCWeekYear from '../../../_lib/getUTCWeekYear/index.js';\nimport setUTCDay from '../../../_lib/setUTCDay/index.js';\nimport setUTCISODay from '../../../_lib/setUTCISODay/index.js';\nimport setUTCISOWeek from '../../../_lib/setUTCISOWeek/index.js';\nimport setUTCWeek from '../../../_lib/setUTCWeek/index.js';\nimport startOfUTCISOWeek from '../../../_lib/startOfUTCISOWeek/index.js';\nimport startOfUTCWeek from '../../../_lib/startOfUTCWeek/index.js';\nvar MILLISECONDS_IN_HOUR = 3600000;\nvar MILLISECONDS_IN_MINUTE = 60000;\nvar MILLISECONDS_IN_SECOND = 1000;\nvar numericPatterns = {\n  month: /^(1[0-2]|0?\\d)/,\n  // 0 to 12\n  date: /^(3[0-1]|[0-2]?\\d)/,\n  // 0 to 31\n  dayOfYear: /^(36[0-6]|3[0-5]\\d|[0-2]?\\d?\\d)/,\n  // 0 to 366\n  week: /^(5[0-3]|[0-4]?\\d)/,\n  // 0 to 53\n  hour23h: /^(2[0-3]|[0-1]?\\d)/,\n  // 0 to 23\n  hour24h: /^(2[0-4]|[0-1]?\\d)/,\n  // 0 to 24\n  hour11h: /^(1[0-1]|0?\\d)/,\n  // 0 to 11\n  hour12h: /^(1[0-2]|0?\\d)/,\n  // 0 to 12\n  minute: /^[0-5]?\\d/,\n  // 0 to 59\n  second: /^[0-5]?\\d/,\n  // 0 to 59\n  singleDigit: /^\\d/,\n  // 0 to 9\n  twoDigits: /^\\d{1,2}/,\n  // 0 to 99\n  threeDigits: /^\\d{1,3}/,\n  // 0 to 999\n  fourDigits: /^\\d{1,4}/,\n  // 0 to 9999\n  anyDigitsSigned: /^-?\\d+/,\n  singleDigitSigned: /^-?\\d/,\n  // 0 to 9, -0 to -9\n  twoDigitsSigned: /^-?\\d{1,2}/,\n  // 0 to 99, -0 to -99\n  threeDigitsSigned: /^-?\\d{1,3}/,\n  // 0 to 999, -0 to -999\n  fourDigitsSigned: /^-?\\d{1,4}/ // 0 to 9999, -0 to -9999\n\n};\nvar timezonePatterns = {\n  basicOptionalMinutes: /^([+-])(\\d{2})(\\d{2})?|Z/,\n  basic: /^([+-])(\\d{2})(\\d{2})|Z/,\n  basicOptionalSeconds: /^([+-])(\\d{2})(\\d{2})((\\d{2}))?|Z/,\n  extended: /^([+-])(\\d{2}):(\\d{2})|Z/,\n  extendedOptionalSeconds: /^([+-])(\\d{2}):(\\d{2})(:(\\d{2}))?|Z/\n};\n\nfunction parseNumericPattern(pattern, string, valueCallback) {\n  var matchResult = string.match(pattern);\n\n  if (!matchResult) {\n    return null;\n  }\n\n  var value = parseInt(matchResult[0], 10);\n  return {\n    value: valueCallback ? valueCallback(value) : value,\n    rest: string.slice(matchResult[0].length)\n  };\n}\n\nfunction parseTimezonePattern(pattern, string) {\n  var matchResult = string.match(pattern);\n\n  if (!matchResult) {\n    return null;\n  } // Input is 'Z'\n\n\n  if (matchResult[0] === 'Z') {\n    return {\n      value: 0,\n      rest: string.slice(1)\n    };\n  }\n\n  var sign = matchResult[1] === '+' ? 1 : -1;\n  var hours = matchResult[2] ? parseInt(matchResult[2], 10) : 0;\n  var minutes = matchResult[3] ? parseInt(matchResult[3], 10) : 0;\n  var seconds = matchResult[5] ? parseInt(matchResult[5], 10) : 0;\n  return {\n    value: sign * (hours * MILLISECONDS_IN_HOUR + minutes * MILLISECONDS_IN_MINUTE + seconds * MILLISECONDS_IN_SECOND),\n    rest: string.slice(matchResult[0].length)\n  };\n}\n\nfunction parseAnyDigitsSigned(string, valueCallback) {\n  return parseNumericPattern(numericPatterns.anyDigitsSigned, string, valueCallback);\n}\n\nfunction parseNDigits(n, string, valueCallback) {\n  switch (n) {\n    case 1:\n      return parseNumericPattern(numericPatterns.singleDigit, string, valueCallback);\n\n    case 2:\n      return parseNumericPattern(numericPatterns.twoDigits, string, valueCallback);\n\n    case 3:\n      return parseNumericPattern(numericPatterns.threeDigits, string, valueCallback);\n\n    case 4:\n      return parseNumericPattern(numericPatterns.fourDigits, string, valueCallback);\n\n    default:\n      return parseNumericPattern(new RegExp('^\\\\d{1,' + n + '}'), string, valueCallback);\n  }\n}\n\nfunction parseNDigitsSigned(n, string, valueCallback) {\n  switch (n) {\n    case 1:\n      return parseNumericPattern(numericPatterns.singleDigitSigned, string, valueCallback);\n\n    case 2:\n      return parseNumericPattern(numericPatterns.twoDigitsSigned, string, valueCallback);\n\n    case 3:\n      return parseNumericPattern(numericPatterns.threeDigitsSigned, string, valueCallback);\n\n    case 4:\n      return parseNumericPattern(numericPatterns.fourDigitsSigned, string, valueCallback);\n\n    default:\n      return parseNumericPattern(new RegExp('^-?\\\\d{1,' + n + '}'), string, valueCallback);\n  }\n}\n\nfunction dayPeriodEnumToHours(enumValue) {\n  switch (enumValue) {\n    case 'morning':\n      return 4;\n\n    case 'evening':\n      return 17;\n\n    case 'pm':\n    case 'noon':\n    case 'afternoon':\n      return 12;\n\n    case 'am':\n    case 'midnight':\n    case 'night':\n    default:\n      return 0;\n  }\n}\n\nfunction normalizeTwoDigitYear(twoDigitYear, currentYear) {\n  var isCommonEra = currentYear > 0; // Absolute number of the current year:\n  // 1 -> 1 AC\n  // 0 -> 1 BC\n  // -1 -> 2 BC\n\n  var absCurrentYear = isCommonEra ? currentYear : 1 - currentYear;\n  var result;\n\n  if (absCurrentYear <= 50) {\n    result = twoDigitYear || 100;\n  } else {\n    var rangeEnd = absCurrentYear + 50;\n    var rangeEndCentury = Math.floor(rangeEnd / 100) * 100;\n    var isPreviousCentury = twoDigitYear >= rangeEnd % 100;\n    result = twoDigitYear + rangeEndCentury - (isPreviousCentury ? 100 : 0);\n  }\n\n  return isCommonEra ? result : 1 - result;\n}\n\nvar DAYS_IN_MONTH = [31, 28, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31];\nvar DAYS_IN_MONTH_LEAP_YEAR = [31, 29, 31, 30, 31, 30, 31, 31, 30, 31, 30, 31]; // User for validation\n\nfunction isLeapYearIndex(year) {\n  return year % 400 === 0 || year % 4 === 0 && year % 100 !== 0;\n}\n/*\n * |     | Unit                           |     | Unit                           |\n * |-----|--------------------------------|-----|--------------------------------|\n * |  a  | AM, PM                         |  A* | Milliseconds in day            |\n * |  b  | AM, PM, noon, midnight         |  B  | Flexible day period            |\n * |  c  | Stand-alone local day of week  |  C* | Localized hour w/ day period   |\n * |  d  | Day of month                   |  D  | Day of year                    |\n * |  e  | Local day of week              |  E  | Day of week                    |\n * |  f  |                                |  F* | Day of week in month           |\n * |  g* | Modified Julian day            |  G  | Era                            |\n * |  h  | Hour [1-12]                    |  H  | Hour [0-23]                    |\n * |  i! | ISO day of week                |  I! | ISO week of year               |\n * |  j* | Localized hour w/ day period   |  J* | Localized hour w/o day period  |\n * |  k  | Hour [1-24]                    |  K  | Hour [0-11]                    |\n * |  l* | (deprecated)                   |  L  | Stand-alone month              |\n * |  m  | Minute                         |  M  | Month                          |\n * |  n  |                                |  N  |                                |\n * |  o! | Ordinal number modifier        |  O* | Timezone (GMT)                 |\n * |  p  |                                |  P  |                                |\n * |  q  | Stand-alone quarter            |  Q  | Quarter                        |\n * |  r* | Related Gregorian year         |  R! | ISO week-numbering year        |\n * |  s  | Second                         |  S  | Fraction of second             |\n * |  t! | Seconds timestamp              |  T! | Milliseconds timestamp         |\n * |  u  | Extended year                  |  U* | Cyclic year                    |\n * |  v* | Timezone (generic non-locat.)  |  V* | Timezone (location)            |\n * |  w  | Local week of year             |  W* | Week of month                  |\n * |  x  | Timezone (ISO-8601 w/o Z)      |  X  | Timezone (ISO-8601)            |\n * |  y  | Year (abs)                     |  Y  | Local week-numbering year      |\n * |  z* | Timezone (specific non-locat.) |  Z* | Timezone (aliases)             |\n *\n * Letters marked by * are not implemented but reserved by Unicode standard.\n *\n * Letters marked by ! are non-standard, but implemented by date-fns:\n * - `o` modifies the previous token to turn it into an ordinal (see `parse` docs)\n * - `i` is ISO day of week. For `i` and `ii` is returns numeric ISO week days,\n *   i.e. 7 for Sunday, 1 for Monday, etc.\n * - `I` is ISO week of year, as opposed to `w` which is local week of year.\n * - `R` is ISO week-numbering year, as opposed to `Y` which is local week-numbering year.\n *   `R` is supposed to be used in conjunction with `I` and `i`\n *   for universal ISO week-numbering date, whereas\n *   `Y` is supposed to be used in conjunction with `w` and `e`\n *   for week-numbering date specific to the locale.\n */\n\n\nvar parsers = {\n  // Era\n  G: {\n    priority: 140,\n    parse: function parse(string, token, match, _options) {\n      switch (token) {\n        // AD, BC\n        case 'G':\n        case 'GG':\n        case 'GGG':\n          return match.era(string, {\n            width: 'abbreviated'\n          }) || match.era(string, {\n            width: 'narrow'\n          });\n        // A, B\n\n        case 'GGGGG':\n          return match.era(string, {\n            width: 'narrow'\n          });\n        // Anno Domini, Before Christ\n\n        case 'GGGG':\n        default:\n          return match.era(string, {\n            width: 'wide'\n          }) || match.era(string, {\n            width: 'abbreviated'\n          }) || match.era(string, {\n            width: 'narrow'\n          });\n      }\n    },\n    set: function set(date, flags, value, _options) {\n      flags.era = value;\n      date.setUTCFullYear(value, 0, 1);\n      date.setUTCHours(0, 0, 0, 0);\n      return date;\n    },\n    incompatibleTokens: ['R', 'u', 't', 'T']\n  },\n  // Year\n  y: {\n    // From http://www.unicode.org/reports/tr35/tr35-31/tr35-dates.html#Date_Format_Patterns\n    // | Year     |     y | yy |   yyy |  yyyy | yyyyy |\n    // |----------|-------|----|-------|-------|-------|\n    // | AD 1     |     1 | 01 |   001 |  0001 | 00001 |\n    // | AD 12    |    12 | 12 |   012 |  0012 | 00012 |\n    // | AD 123   |   123 | 23 |   123 |  0123 | 00123 |\n    // | AD 1234  |  1234 | 34 |  1234 |  1234 | 01234 |\n    // | AD 12345 | 12345 | 45 | 12345 | 12345 | 12345 |\n    priority: 130,\n    parse: function parse(string, token, match, _options) {\n      var valueCallback = function valueCallback(year) {\n        return {\n          year: year,\n          isTwoDigitYear: token === 'yy'\n        };\n      };\n\n      switch (token) {\n        case 'y':\n          return parseNDigits(4, string, valueCallback);\n\n        case 'yo':\n          return match.ordinalNumber(string, {\n            unit: 'year',\n            valueCallback: valueCallback\n          });\n\n        default:\n          return parseNDigits(token.length, string, valueCallback);\n      }\n    },\n    validate: function validate(_date, value, _options) {\n      return value.isTwoDigitYear || value.year > 0;\n    },\n    set: function set(date, flags, value, _options) {\n      var currentYear = date.getUTCFullYear();\n\n      if (value.isTwoDigitYear) {\n        var normalizedTwoDigitYear = normalizeTwoDigitYear(value.year, currentYear);\n        date.setUTCFullYear(normalizedTwoDigitYear, 0, 1);\n        date.setUTCHours(0, 0, 0, 0);\n        return date;\n      }\n\n      var year = !('era' in flags) || flags.era === 1 ? value.year : 1 - value.year;\n      date.setUTCFullYear(year, 0, 1);\n      date.setUTCHours(0, 0, 0, 0);\n      return date;\n    },\n    incompatibleTokens: ['Y', 'R', 'u', 'w', 'I', 'i', 'e', 'c', 't', 'T']\n  },\n  // Local week-numbering year\n  Y: {\n    priority: 130,\n    parse: function parse(string, token, match, _options) {\n      var valueCallback = function valueCallback(year) {\n        return {\n          year: year,\n          isTwoDigitYear: token === 'YY'\n        };\n      };\n\n      switch (token) {\n        case 'Y':\n          return parseNDigits(4, string, valueCallback);\n\n        case 'Yo':\n          return match.ordinalNumber(string, {\n            unit: 'year',\n            valueCallback: valueCallback\n          });\n\n        default:\n          return parseNDigits(token.length, string, valueCallback);\n      }\n    },\n    validate: function validate(_date, value, _options) {\n      return value.isTwoDigitYear || value.year > 0;\n    },\n    set: function set(date, flags, value, options) {\n      var currentYear = getUTCWeekYear(date, options);\n\n      if (value.isTwoDigitYear) {\n        var normalizedTwoDigitYear = normalizeTwoDigitYear(value.year, currentYear);\n        date.setUTCFullYear(normalizedTwoDigitYear, 0, options.firstWeekContainsDate);\n        date.setUTCHours(0, 0, 0, 0);\n        return startOfUTCWeek(date, options);\n      }\n\n      var year = !('era' in flags) || flags.era === 1 ? value.year : 1 - value.year;\n      date.setUTCFullYear(year, 0, options.firstWeekContainsDate);\n      date.setUTCHours(0, 0, 0, 0);\n      return startOfUTCWeek(date, options);\n    },\n    incompatibleTokens: ['y', 'R', 'u', 'Q', 'q', 'M', 'L', 'I', 'd', 'D', 'i', 't', 'T']\n  },\n  // ISO week-numbering year\n  R: {\n    priority: 130,\n    parse: function parse(string, token, _match, _options) {\n      if (token === 'R') {\n        return parseNDigitsSigned(4, string);\n      }\n\n      return parseNDigitsSigned(token.length, string);\n    },\n    set: function set(_date, _flags, value, _options) {\n      var firstWeekOfYear = new Date(0);\n      firstWeekOfYear.setUTCFullYear(value, 0, 4);\n      firstWeekOfYear.setUTCHours(0, 0, 0, 0);\n      return startOfUTCISOWeek(firstWeekOfYear);\n    },\n    incompatibleTokens: ['G', 'y', 'Y', 'u', 'Q', 'q', 'M', 'L', 'w', 'd', 'D', 'e', 'c', 't', 'T']\n  },\n  // Extended year\n  u: {\n    priority: 130,\n    parse: function parse(string, token, _match, _options) {\n      if (token === 'u') {\n        return parseNDigitsSigned(4, string);\n      }\n\n      return parseNDigitsSigned(token.length, string);\n    },\n    set: function set(date, _flags, value, _options) {\n      date.setUTCFullYear(value, 0, 1);\n      date.setUTCHours(0, 0, 0, 0);\n      return date;\n    },\n    incompatibleTokens: ['G', 'y', 'Y', 'R', 'w', 'I', 'i', 'e', 'c', 't', 'T']\n  },\n  // Quarter\n  Q: {\n    priority: 120,\n    parse: function parse(string, token, match, _options) {\n      switch (token) {\n        // 1, 2, 3, 4\n        case 'Q':\n        case 'QQ':\n          // 01, 02, 03, 04\n          return parseNDigits(token.length, string);\n        // 1st, 2nd, 3rd, 4th\n\n        case 'Qo':\n          return match.ordinalNumber(string, {\n            unit: 'quarter'\n          });\n        // Q1, Q2, Q3, Q4\n\n        case 'QQQ':\n          return match.quarter(string, {\n            width: 'abbreviated',\n            context: 'formatting'\n          }) || match.quarter(string, {\n            width: 'narrow',\n            context: 'formatting'\n          });\n        // 1, 2, 3, 4 (narrow quarter; could be not numerical)\n\n        case 'QQQQQ':\n          return match.quarter(string, {\n            width: 'narrow',\n            context: 'formatting'\n          });\n        // 1st quarter, 2nd quarter, ...\n\n        case 'QQQQ':\n        default:\n          return match.quarter(string, {\n            width: 'wide',\n            context: 'formatting'\n          }) || match.quarter(string, {\n            width: 'abbreviated',\n            context: 'formatting'\n          }) || match.quarter(string, {\n            width: 'narrow',\n            context: 'formatting'\n          });\n      }\n    },\n    validate: function validate(_date, value, _options) {\n      return value >= 1 && value <= 4;\n    },\n    set: function set(date, _flags, value, _options) {\n      date.setUTCMonth((value - 1) * 3, 1);\n      date.setUTCHours(0, 0, 0, 0);\n      return date;\n    },\n    incompatibleTokens: ['Y', 'R', 'q', 'M', 'L', 'w', 'I', 'd', 'D', 'i', 'e', 'c', 't', 'T']\n  },\n  // Stand-alone quarter\n  q: {\n    priority: 120,\n    parse: function parse(string, token, match, _options) {\n      switch (token) {\n        // 1, 2, 3, 4\n        case 'q':\n        case 'qq':\n          // 01, 02, 03, 04\n          return parseNDigits(token.length, string);\n        // 1st, 2nd, 3rd, 4th\n\n        case 'qo':\n          return match.ordinalNumber(string, {\n            unit: 'quarter'\n          });\n        // Q1, Q2, Q3, Q4\n\n        case 'qqq':\n          return match.quarter(string, {\n            width: 'abbreviated',\n            context: 'standalone'\n          }) || match.quarter(string, {\n            width: 'narrow',\n            context: 'standalone'\n          });\n        // 1, 2, 3, 4 (narrow quarter; could be not numerical)\n\n        case 'qqqqq':\n          return match.quarter(string, {\n            width: 'narrow',\n            context: 'standalone'\n          });\n        // 1st quarter, 2nd quarter, ...\n\n        case 'qqqq':\n        default:\n          return match.quarter(string, {\n            width: 'wide',\n            context: 'standalone'\n          }) || match.quarter(string, {\n            width: 'abbreviated',\n            context: 'standalone'\n          }) || match.quarter(string, {\n            width: 'narrow',\n            context: 'standalone'\n          });\n      }\n    },\n    validate: function validate(_date, value, _options) {\n      return value >= 1 && value <= 4;\n    },\n    set: function set(date, _flags, value, _options) {\n      date.setUTCMonth((value - 1) * 3, 1);\n      date.setUTCHours(0, 0, 0, 0);\n      return date;\n    },\n    incompatibleTokens: ['Y', 'R', 'Q', 'M', 'L', 'w', 'I', 'd', 'D', 'i', 'e', 'c', 't', 'T']\n  },\n  // Month\n  M: {\n    priority: 110,\n    parse: function parse(string, token, match, _options) {\n      var valueCallback = function valueCallback(value) {\n        return value - 1;\n      };\n\n      switch (token) {\n        // 1, 2, ..., 12\n        case 'M':\n          return parseNumericPattern(numericPatterns.month, string, valueCallback);\n        // 01, 02, ..., 12\n\n        case 'MM':\n          return parseNDigits(2, string, valueCallback);\n        // 1st, 2nd, ..., 12th\n\n        case 'Mo':\n          return match.ordinalNumber(string, {\n            unit: 'month',\n            valueCallback: valueCallback\n          });\n        // Jan, Feb, ..., Dec\n\n        case 'MMM':\n          return match.month(string, {\n            width: 'abbreviated',\n            context: 'formatting'\n          }) || match.month(string, {\n            width: 'narrow',\n            context: 'formatting'\n          });\n        // J, F, ..., D\n\n        case 'MMMMM':\n          return match.month(string, {\n            width: 'narrow',\n            context: 'formatting'\n          });\n        // January, February, ..., December\n\n        case 'MMMM':\n        default:\n          return match.month(string, {\n            width: 'wide',\n            context: 'formatting'\n          }) || match.month(string, {\n            width: 'abbreviated',\n            context: 'formatting'\n          }) || match.month(string, {\n            width: 'narrow',\n            context: 'formatting'\n          });\n      }\n    },\n    validate: function validate(_date, value, _options) {\n      return value >= 0 && value <= 11;\n    },\n    set: function set(date, _flags, value, _options) {\n      date.setUTCMonth(value, 1);\n      date.setUTCHours(0, 0, 0, 0);\n      return date;\n    },\n    incompatibleTokens: ['Y', 'R', 'q', 'Q', 'L', 'w', 'I', 'D', 'i', 'e', 'c', 't', 'T']\n  },\n  // Stand-alone month\n  L: {\n    priority: 110,\n    parse: function parse(string, token, match, _options) {\n      var valueCallback = function valueCallback(value) {\n        return value - 1;\n      };\n\n      switch (token) {\n        // 1, 2, ..., 12\n        case 'L':\n          return parseNumericPattern(numericPatterns.month, string, valueCallback);\n        // 01, 02, ..., 12\n\n        case 'LL':\n          return parseNDigits(2, string, valueCallback);\n        // 1st, 2nd, ..., 12th\n\n        case 'Lo':\n          return match.ordinalNumber(string, {\n            unit: 'month',\n            valueCallback: valueCallback\n          });\n        // Jan, Feb, ..., Dec\n\n        case 'LLL':\n          return match.month(string, {\n            width: 'abbreviated',\n            context: 'standalone'\n          }) || match.month(string, {\n            width: 'narrow',\n            context: 'standalone'\n          });\n        // J, F, ..., D\n\n        case 'LLLLL':\n          return match.month(string, {\n            width: 'narrow',\n            context: 'standalone'\n          });\n        // January, February, ..., December\n\n        case 'LLLL':\n        default:\n          return match.month(string, {\n            width: 'wide',\n            context: 'standalone'\n          }) || match.month(string, {\n            width: 'abbreviated',\n            context: 'standalone'\n          }) || match.month(string, {\n            width: 'narrow',\n            context: 'standalone'\n          });\n      }\n    },\n    validate: function validate(_date, value, _options) {\n      return value >= 0 && value <= 11;\n    },\n    set: function set(date, _flags, value, _options) {\n      date.setUTCMonth(value, 1);\n      date.setUTCHours(0, 0, 0, 0);\n      return date;\n    },\n    incompatibleTokens: ['Y', 'R', 'q', 'Q', 'M', 'w', 'I', 'D', 'i', 'e', 'c', 't', 'T']\n  },\n  // Local week of year\n  w: {\n    priority: 100,\n    parse: function parse(string, token, match, _options) {\n      switch (token) {\n        case 'w':\n          return parseNumericPattern(numericPatterns.week, string);\n\n        case 'wo':\n          return match.ordinalNumber(string, {\n            unit: 'week'\n          });\n\n        default:\n          return parseNDigits(token.length, string);\n      }\n    },\n    validate: function validate(_date, value, _options) {\n      return value >= 1 && value <= 53;\n    },\n    set: function set(date, _flags, value, options) {\n      return startOfUTCWeek(setUTCWeek(date, value, options), options);\n    },\n    incompatibleTokens: ['y', 'R', 'u', 'q', 'Q', 'M', 'L', 'I', 'd', 'D', 'i', 't', 'T']\n  },\n  // ISO week of year\n  I: {\n    priority: 100,\n    parse: function parse(string, token, match, _options) {\n      switch (token) {\n        case 'I':\n          return parseNumericPattern(numericPatterns.week, string);\n\n        case 'Io':\n          return match.ordinalNumber(string, {\n            unit: 'week'\n          });\n\n        default:\n          return parseNDigits(token.length, string);\n      }\n    },\n    validate: function validate(_date, value, _options) {\n      return value >= 1 && value <= 53;\n    },\n    set: function set(date, _flags, value, options) {\n      return startOfUTCISOWeek(setUTCISOWeek(date, value, options), options);\n    },\n    incompatibleTokens: ['y', 'Y', 'u', 'q', 'Q', 'M', 'L', 'w', 'd', 'D', 'e', 'c', 't', 'T']\n  },\n  // Day of the month\n  d: {\n    priority: 90,\n    subPriority: 1,\n    parse: function parse(string, token, match, _options) {\n      switch (token) {\n        case 'd':\n          return parseNumericPattern(numericPatterns.date, string);\n\n        case 'do':\n          return match.ordinalNumber(string, {\n            unit: 'date'\n          });\n\n        default:\n          return parseNDigits(token.length, string);\n      }\n    },\n    validate: function validate(date, value, _options) {\n      var year = date.getUTCFullYear();\n      var isLeapYear = isLeapYearIndex(year);\n      var month = date.getUTCMonth();\n\n      if (isLeapYear) {\n        return value >= 1 && value <= DAYS_IN_MONTH_LEAP_YEAR[month];\n      } else {\n        return value >= 1 && value <= DAYS_IN_MONTH[month];\n      }\n    },\n    set: function set(date, _flags, value, _options) {\n      date.setUTCDate(value);\n      date.setUTCHours(0, 0, 0, 0);\n      return date;\n    },\n    incompatibleTokens: ['Y', 'R', 'q', 'Q', 'w', 'I', 'D', 'i', 'e', 'c', 't', 'T']\n  },\n  // Day of year\n  D: {\n    priority: 90,\n    subPriority: 1,\n    parse: function parse(string, token, match, _options) {\n      switch (token) {\n        case 'D':\n        case 'DD':\n          return parseNumericPattern(numericPatterns.dayOfYear, string);\n\n        case 'Do':\n          return match.ordinalNumber(string, {\n            unit: 'date'\n          });\n\n        default:\n          return parseNDigits(token.length, string);\n      }\n    },\n    validate: function validate(date, value, _options) {\n      var year = date.getUTCFullYear();\n      var isLeapYear = isLeapYearIndex(year);\n\n      if (isLeapYear) {\n        return value >= 1 && value <= 366;\n      } else {\n        return value >= 1 && value <= 365;\n      }\n    },\n    set: function set(date, _flags, value, _options) {\n      date.setUTCMonth(0, value);\n      date.setUTCHours(0, 0, 0, 0);\n      return date;\n    },\n    incompatibleTokens: ['Y', 'R', 'q', 'Q', 'M', 'L', 'w', 'I', 'd', 'E', 'i', 'e', 'c', 't', 'T']\n  },\n  // Day of week\n  E: {\n    priority: 90,\n    parse: function parse(string, token, match, _options) {\n      switch (token) {\n        // Tue\n        case 'E':\n        case 'EE':\n        case 'EEE':\n          return match.day(string, {\n            width: 'abbreviated',\n            context: 'formatting'\n          }) || match.day(string, {\n            width: 'short',\n            context: 'formatting'\n          }) || match.day(string, {\n            width: 'narrow',\n            context: 'formatting'\n          });\n        // T\n\n        case 'EEEEE':\n          return match.day(string, {\n            width: 'narrow',\n            context: 'formatting'\n          });\n        // Tu\n\n        case 'EEEEEE':\n          return match.day(string, {\n            width: 'short',\n            context: 'formatting'\n          }) || match.day(string, {\n            width: 'narrow',\n            context: 'formatting'\n          });\n        // Tuesday\n\n        case 'EEEE':\n        default:\n          return match.day(string, {\n            width: 'wide',\n            context: 'formatting'\n          }) || match.day(string, {\n            width: 'abbreviated',\n            context: 'formatting'\n          }) || match.day(string, {\n            width: 'short',\n            context: 'formatting'\n          }) || match.day(string, {\n            width: 'narrow',\n            context: 'formatting'\n          });\n      }\n    },\n    validate: function validate(_date, value, _options) {\n      return value >= 0 && value <= 6;\n    },\n    set: function set(date, _flags, value, options) {\n      date = setUTCDay(date, value, options);\n      date.setUTCHours(0, 0, 0, 0);\n      return date;\n    },\n    incompatibleTokens: ['D', 'i', 'e', 'c', 't', 'T']\n  },\n  // Local day of week\n  e: {\n    priority: 90,\n    parse: function parse(string, token, match, options) {\n      var valueCallback = function valueCallback(value) {\n        var wholeWeekDays = Math.floor((value - 1) / 7) * 7;\n        return (value + options.weekStartsOn + 6) % 7 + wholeWeekDays;\n      };\n\n      switch (token) {\n        // 3\n        case 'e':\n        case 'ee':\n          // 03\n          return parseNDigits(token.length, string, valueCallback);\n        // 3rd\n\n        case 'eo':\n          return match.ordinalNumber(string, {\n            unit: 'day',\n            valueCallback: valueCallback\n          });\n        // Tue\n\n        case 'eee':\n          return match.day(string, {\n            width: 'abbreviated',\n            context: 'formatting'\n          }) || match.day(string, {\n            width: 'short',\n            context: 'formatting'\n          }) || match.day(string, {\n            width: 'narrow',\n            context: 'formatting'\n          });\n        // T\n\n        case 'eeeee':\n          return match.day(string, {\n            width: 'narrow',\n            context: 'formatting'\n          });\n        // Tu\n\n        case 'eeeeee':\n          return match.day(string, {\n            width: 'short',\n            context: 'formatting'\n          }) || match.day(string, {\n            width: 'narrow',\n            context: 'formatting'\n          });\n        // Tuesday\n\n        case 'eeee':\n        default:\n          return match.day(string, {\n            width: 'wide',\n            context: 'formatting'\n          }) || match.day(string, {\n            width: 'abbreviated',\n            context: 'formatting'\n          }) || match.day(string, {\n            width: 'short',\n            context: 'formatting'\n          }) || match.day(string, {\n            width: 'narrow',\n            context: 'formatting'\n          });\n      }\n    },\n    validate: function validate(_date, value, _options) {\n      return value >= 0 && value <= 6;\n    },\n    set: function set(date, _flags, value, options) {\n      date = setUTCDay(date, value, options);\n      date.setUTCHours(0, 0, 0, 0);\n      return date;\n    },\n    incompatibleTokens: ['y', 'R', 'u', 'q', 'Q', 'M', 'L', 'I', 'd', 'D', 'E', 'i', 'c', 't', 'T']\n  },\n  // Stand-alone local day of week\n  c: {\n    priority: 90,\n    parse: function parse(string, token, match, options) {\n      var valueCallback = function valueCallback(value) {\n        var wholeWeekDays = Math.floor((value - 1) / 7) * 7;\n        return (value + options.weekStartsOn + 6) % 7 + wholeWeekDays;\n      };\n\n      switch (token) {\n        // 3\n        case 'c':\n        case 'cc':\n          // 03\n          return parseNDigits(token.length, string, valueCallback);\n        // 3rd\n\n        case 'co':\n          return match.ordinalNumber(string, {\n            unit: 'day',\n            valueCallback: valueCallback\n          });\n        // Tue\n\n        case 'ccc':\n          return match.day(string, {\n            width: 'abbreviated',\n            context: 'standalone'\n          }) || match.day(string, {\n            width: 'short',\n            context: 'standalone'\n          }) || match.day(string, {\n            width: 'narrow',\n            context: 'standalone'\n          });\n        // T\n\n        case 'ccccc':\n          return match.day(string, {\n            width: 'narrow',\n            context: 'standalone'\n          });\n        // Tu\n\n        case 'cccccc':\n          return match.day(string, {\n            width: 'short',\n            context: 'standalone'\n          }) || match.day(string, {\n            width: 'narrow',\n            context: 'standalone'\n          });\n        // Tuesday\n\n        case 'cccc':\n        default:\n          return match.day(string, {\n            width: 'wide',\n            context: 'standalone'\n          }) || match.day(string, {\n            width: 'abbreviated',\n            context: 'standalone'\n          }) || match.day(string, {\n            width: 'short',\n            context: 'standalone'\n          }) || match.day(string, {\n            width: 'narrow',\n            context: 'standalone'\n          });\n      }\n    },\n    validate: function validate(_date, value, _options) {\n      return value >= 0 && value <= 6;\n    },\n    set: function set(date, _flags, value, options) {\n      date = setUTCDay(date, value, options);\n      date.setUTCHours(0, 0, 0, 0);\n      return date;\n    },\n    incompatibleTokens: ['y', 'R', 'u', 'q', 'Q', 'M', 'L', 'I', 'd', 'D', 'E', 'i', 'e', 't', 'T']\n  },\n  // ISO day of week\n  i: {\n    priority: 90,\n    parse: function parse(string, token, match, _options) {\n      var valueCallback = function valueCallback(value) {\n        if (value === 0) {\n          return 7;\n        }\n\n        return value;\n      };\n\n      switch (token) {\n        // 2\n        case 'i':\n        case 'ii':\n          // 02\n          return parseNDigits(token.length, string);\n        // 2nd\n\n        case 'io':\n          return match.ordinalNumber(string, {\n            unit: 'day'\n          });\n        // Tue\n\n        case 'iii':\n          return match.day(string, {\n            width: 'abbreviated',\n            context: 'formatting',\n            valueCallback: valueCallback\n          }) || match.day(string, {\n            width: 'short',\n            context: 'formatting',\n            valueCallback: valueCallback\n          }) || match.day(string, {\n            width: 'narrow',\n            context: 'formatting',\n            valueCallback: valueCallback\n          });\n        // T\n\n        case 'iiiii':\n          return match.day(string, {\n            width: 'narrow',\n            context: 'formatting',\n            valueCallback: valueCallback\n          });\n        // Tu\n\n        case 'iiiiii':\n          return match.day(string, {\n            width: 'short',\n            context: 'formatting',\n            valueCallback: valueCallback\n          }) || match.day(string, {\n            width: 'narrow',\n            context: 'formatting',\n            valueCallback: valueCallback\n          });\n        // Tuesday\n\n        case 'iiii':\n        default:\n          return match.day(string, {\n            width: 'wide',\n            context: 'formatting',\n            valueCallback: valueCallback\n          }) || match.day(string, {\n            width: 'abbreviated',\n            context: 'formatting',\n            valueCallback: valueCallback\n          }) || match.day(string, {\n            width: 'short',\n            context: 'formatting',\n            valueCallback: valueCallback\n          }) || match.day(string, {\n            width: 'narrow',\n            context: 'formatting',\n            valueCallback: valueCallback\n          });\n      }\n    },\n    validate: function validate(_date, value, _options) {\n      return value >= 1 && value <= 7;\n    },\n    set: function set(date, _flags, value, options) {\n      date = setUTCISODay(date, value, options);\n      date.setUTCHours(0, 0, 0, 0);\n      return date;\n    },\n    incompatibleTokens: ['y', 'Y', 'u', 'q', 'Q', 'M', 'L', 'w', 'd', 'D', 'E', 'e', 'c', 't', 'T']\n  },\n  // AM or PM\n  a: {\n    priority: 80,\n    parse: function parse(string, token, match, _options) {\n      switch (token) {\n        case 'a':\n        case 'aa':\n        case 'aaa':\n          return match.dayPeriod(string, {\n            width: 'abbreviated',\n            context: 'formatting'\n          }) || match.dayPeriod(string, {\n            width: 'narrow',\n            context: 'formatting'\n          });\n\n        case 'aaaaa':\n          return match.dayPeriod(string, {\n            width: 'narrow',\n            context: 'formatting'\n          });\n\n        case 'aaaa':\n        default:\n          return match.dayPeriod(string, {\n            width: 'wide',\n            context: 'formatting'\n          }) || match.dayPeriod(string, {\n            width: 'abbreviated',\n            context: 'formatting'\n          }) || match.dayPeriod(string, {\n            width: 'narrow',\n            context: 'formatting'\n          });\n      }\n    },\n    set: function set(date, _flags, value, _options) {\n      date.setUTCHours(dayPeriodEnumToHours(value), 0, 0, 0);\n      return date;\n    },\n    incompatibleTokens: ['b', 'B', 'H', 'K', 'k', 't', 'T']\n  },\n  // AM, PM, midnight\n  b: {\n    priority: 80,\n    parse: function parse(string, token, match, _options) {\n      switch (token) {\n        case 'b':\n        case 'bb':\n        case 'bbb':\n          return match.dayPeriod(string, {\n            width: 'abbreviated',\n            context: 'formatting'\n          }) || match.dayPeriod(string, {\n            width: 'narrow',\n            context: 'formatting'\n          });\n\n        case 'bbbbb':\n          return match.dayPeriod(string, {\n            width: 'narrow',\n            context: 'formatting'\n          });\n\n        case 'bbbb':\n        default:\n          return match.dayPeriod(string, {\n            width: 'wide',\n            context: 'formatting'\n          }) || match.dayPeriod(string, {\n            width: 'abbreviated',\n            context: 'formatting'\n          }) || match.dayPeriod(string, {\n            width: 'narrow',\n            context: 'formatting'\n          });\n      }\n    },\n    set: function set(date, _flags, value, _options) {\n      date.setUTCHours(dayPeriodEnumToHours(value), 0, 0, 0);\n      return date;\n    },\n    incompatibleTokens: ['a', 'B', 'H', 'K', 'k', 't', 'T']\n  },\n  // in the morning, in the afternoon, in the evening, at night\n  B: {\n    priority: 80,\n    parse: function parse(string, token, match, _options) {\n      switch (token) {\n        case 'B':\n        case 'BB':\n        case 'BBB':\n          return match.dayPeriod(string, {\n            width: 'abbreviated',\n            context: 'formatting'\n          }) || match.dayPeriod(string, {\n            width: 'narrow',\n            context: 'formatting'\n          });\n\n        case 'BBBBB':\n          return match.dayPeriod(string, {\n            width: 'narrow',\n            context: 'formatting'\n          });\n\n        case 'BBBB':\n        default:\n          return match.dayPeriod(string, {\n            width: 'wide',\n            context: 'formatting'\n          }) || match.dayPeriod(string, {\n            width: 'abbreviated',\n            context: 'formatting'\n          }) || match.dayPeriod(string, {\n            width: 'narrow',\n            context: 'formatting'\n          });\n      }\n    },\n    set: function set(date, _flags, value, _options) {\n      date.setUTCHours(dayPeriodEnumToHours(value), 0, 0, 0);\n      return date;\n    },\n    incompatibleTokens: ['a', 'b', 't', 'T']\n  },\n  // Hour [1-12]\n  h: {\n    priority: 70,\n    parse: function parse(string, token, match, _options) {\n      switch (token) {\n        case 'h':\n          return parseNumericPattern(numericPatterns.hour12h, string);\n\n        case 'ho':\n          return match.ordinalNumber(string, {\n            unit: 'hour'\n          });\n\n        default:\n          return parseNDigits(token.length, string);\n      }\n    },\n    validate: function validate(_date, value, _options) {\n      return value >= 1 && value <= 12;\n    },\n    set: function set(date, _flags, value, _options) {\n      var isPM = date.getUTCHours() >= 12;\n\n      if (isPM && value < 12) {\n        date.setUTCHours(value + 12, 0, 0, 0);\n      } else if (!isPM && value === 12) {\n        date.setUTCHours(0, 0, 0, 0);\n      } else {\n        date.setUTCHours(value, 0, 0, 0);\n      }\n\n      return date;\n    },\n    incompatibleTokens: ['H', 'K', 'k', 't', 'T']\n  },\n  // Hour [0-23]\n  H: {\n    priority: 70,\n    parse: function parse(string, token, match, _options) {\n      switch (token) {\n        case 'H':\n          return parseNumericPattern(numericPatterns.hour23h, string);\n\n        case 'Ho':\n          return match.ordinalNumber(string, {\n            unit: 'hour'\n          });\n\n        default:\n          return parseNDigits(token.length, string);\n      }\n    },\n    validate: function validate(_date, value, _options) {\n      return value >= 0 && value <= 23;\n    },\n    set: function set(date, _flags, value, _options) {\n      date.setUTCHours(value, 0, 0, 0);\n      return date;\n    },\n    incompatibleTokens: ['a', 'b', 'h', 'K', 'k', 't', 'T']\n  },\n  // Hour [0-11]\n  K: {\n    priority: 70,\n    parse: function parse(string, token, match, _options) {\n      switch (token) {\n        case 'K':\n          return parseNumericPattern(numericPatterns.hour11h, string);\n\n        case 'Ko':\n          return match.ordinalNumber(string, {\n            unit: 'hour'\n          });\n\n        default:\n          return parseNDigits(token.length, string);\n      }\n    },\n    validate: function validate(_date, value, _options) {\n      return value >= 0 && value <= 11;\n    },\n    set: function set(date, _flags, value, _options) {\n      var isPM = date.getUTCHours() >= 12;\n\n      if (isPM && value < 12) {\n        date.setUTCHours(value + 12, 0, 0, 0);\n      } else {\n        date.setUTCHours(value, 0, 0, 0);\n      }\n\n      return date;\n    },\n    incompatibleTokens: ['a', 'b', 'h', 'H', 'k', 't', 'T']\n  },\n  // Hour [1-24]\n  k: {\n    priority: 70,\n    parse: function parse(string, token, match, _options) {\n      switch (token) {\n        case 'k':\n          return parseNumericPattern(numericPatterns.hour24h, string);\n\n        case 'ko':\n          return match.ordinalNumber(string, {\n            unit: 'hour'\n          });\n\n        default:\n          return parseNDigits(token.length, string);\n      }\n    },\n    validate: function validate(_date, value, _options) {\n      return value >= 1 && value <= 24;\n    },\n    set: function set(date, _flags, value, _options) {\n      var hours = value <= 24 ? value % 24 : value;\n      date.setUTCHours(hours, 0, 0, 0);\n      return date;\n    },\n    incompatibleTokens: ['a', 'b', 'h', 'H', 'K', 't', 'T']\n  },\n  // Minute\n  m: {\n    priority: 60,\n    parse: function parse(string, token, match, _options) {\n      switch (token) {\n        case 'm':\n          return parseNumericPattern(numericPatterns.minute, string);\n\n        case 'mo':\n          return match.ordinalNumber(string, {\n            unit: 'minute'\n          });\n\n        default:\n          return parseNDigits(token.length, string);\n      }\n    },\n    validate: function validate(_date, value, _options) {\n      return value >= 0 && value <= 59;\n    },\n    set: function set(date, _flags, value, _options) {\n      date.setUTCMinutes(value, 0, 0);\n      return date;\n    },\n    incompatibleTokens: ['t', 'T']\n  },\n  // Second\n  s: {\n    priority: 50,\n    parse: function parse(string, token, match, _options) {\n      switch (token) {\n        case 's':\n          return parseNumericPattern(numericPatterns.second, string);\n\n        case 'so':\n          return match.ordinalNumber(string, {\n            unit: 'second'\n          });\n\n        default:\n          return parseNDigits(token.length, string);\n      }\n    },\n    validate: function validate(_date, value, _options) {\n      return value >= 0 && value <= 59;\n    },\n    set: function set(date, _flags, value, _options) {\n      date.setUTCSeconds(value, 0);\n      return date;\n    },\n    incompatibleTokens: ['t', 'T']\n  },\n  // Fraction of second\n  S: {\n    priority: 30,\n    parse: function parse(string, token, _match, _options) {\n      var valueCallback = function valueCallback(value) {\n        return Math.floor(value * Math.pow(10, -token.length + 3));\n      };\n\n      return parseNDigits(token.length, string, valueCallback);\n    },\n    set: function set(date, _flags, value, _options) {\n      date.setUTCMilliseconds(value);\n      return date;\n    },\n    incompatibleTokens: ['t', 'T']\n  },\n  // Timezone (ISO-8601. +00:00 is `'Z'`)\n  X: {\n    priority: 10,\n    parse: function parse(string, token, _match, _options) {\n      switch (token) {\n        case 'X':\n          return parseTimezonePattern(timezonePatterns.basicOptionalMinutes, string);\n\n        case 'XX':\n          return parseTimezonePattern(timezonePatterns.basic, string);\n\n        case 'XXXX':\n          return parseTimezonePattern(timezonePatterns.basicOptionalSeconds, string);\n\n        case 'XXXXX':\n          return parseTimezonePattern(timezonePatterns.extendedOptionalSeconds, string);\n\n        case 'XXX':\n        default:\n          return parseTimezonePattern(timezonePatterns.extended, string);\n      }\n    },\n    set: function set(date, flags, value, _options) {\n      if (flags.timestampIsSet) {\n        return date;\n      }\n\n      return new Date(date.getTime() - value);\n    },\n    incompatibleTokens: ['t', 'T', 'x']\n  },\n  // Timezone (ISO-8601)\n  x: {\n    priority: 10,\n    parse: function parse(string, token, _match, _options) {\n      switch (token) {\n        case 'x':\n          return parseTimezonePattern(timezonePatterns.basicOptionalMinutes, string);\n\n        case 'xx':\n          return parseTimezonePattern(timezonePatterns.basic, string);\n\n        case 'xxxx':\n          return parseTimezonePattern(timezonePatterns.basicOptionalSeconds, string);\n\n        case 'xxxxx':\n          return parseTimezonePattern(timezonePatterns.extendedOptionalSeconds, string);\n\n        case 'xxx':\n        default:\n          return parseTimezonePattern(timezonePatterns.extended, string);\n      }\n    },\n    set: function set(date, flags, value, _options) {\n      if (flags.timestampIsSet) {\n        return date;\n      }\n\n      return new Date(date.getTime() - value);\n    },\n    incompatibleTokens: ['t', 'T', 'X']\n  },\n  // Seconds timestamp\n  t: {\n    priority: 40,\n    parse: function parse(string, _token, _match, _options) {\n      return parseAnyDigitsSigned(string);\n    },\n    set: function set(_date, _flags, value, _options) {\n      return [new Date(value * 1000), {\n        timestampIsSet: true\n      }];\n    },\n    incompatibleTokens: '*'\n  },\n  // Milliseconds timestamp\n  T: {\n    priority: 20,\n    parse: function parse(string, _token, _match, _options) {\n      return parseAnyDigitsSigned(string);\n    },\n    set: function set(_date, _flags, value, _options) {\n      return [new Date(value), {\n        timestampIsSet: true\n      }];\n    },\n    incompatibleTokens: '*'\n  }\n};\nexport default parsers;","import toInteger from '../toInteger/index.js';\nimport toDate from '../../toDate/index.js';\nimport getUTCWeek from '../getUTCWeek/index.js';\nimport requiredArgs from '../requiredArgs/index.js'; // This function will be a part of public API when UTC function will be implemented.\n// See issue: https://github.com/date-fns/date-fns/issues/376\n\nexport default function setUTCWeek(dirtyDate, dirtyWeek, options) {\n  requiredArgs(2, arguments);\n  var date = toDate(dirtyDate);\n  var week = toInteger(dirtyWeek);\n  var diff = getUTCWeek(date, options) - week;\n  date.setUTCDate(date.getUTCDate() - diff * 7);\n  return date;\n}","import toInteger from '../toInteger/index.js';\nimport toDate from '../../toDate/index.js';\nimport getUTCISOWeek from '../getUTCISOWeek/index.js';\nimport requiredArgs from '../requiredArgs/index.js'; // This function will be a part of public API when UTC function will be implemented.\n// See issue: https://github.com/date-fns/date-fns/issues/376\n\nexport default function setUTCISOWeek(dirtyDate, dirtyISOWeek) {\n  requiredArgs(2, arguments);\n  var date = toDate(dirtyDate);\n  var isoWeek = toInteger(dirtyISOWeek);\n  var diff = getUTCISOWeek(date) - isoWeek;\n  date.setUTCDate(date.getUTCDate() - diff * 7);\n  return date;\n}","import toInteger from '../toInteger/index.js';\nimport toDate from '../../toDate/index.js';\nimport requiredArgs from '../requiredArgs/index.js'; // This function will be a part of public API when UTC function will be implemented.\n// See issue: https://github.com/date-fns/date-fns/issues/376\n\nexport default function setUTCISODay(dirtyDate, dirtyDay) {\n  requiredArgs(2, arguments);\n  var day = toInteger(dirtyDay);\n\n  if (day % 7 === 0) {\n    day = day - 7;\n  }\n\n  var weekStartsOn = 1;\n  var date = toDate(dirtyDate);\n  var currentDay = date.getUTCDay();\n  var remainder = day % 7;\n  var dayIndex = (remainder + 7) % 7;\n  var diff = (dayIndex < weekStartsOn ? 7 : 0) + day - currentDay;\n  date.setUTCDate(date.getUTCDate() + diff);\n  return date;\n}","import defaultLocale from '../locale/en-US/index.js';\nimport subMilliseconds from '../subMilliseconds/index.js';\nimport toDate from '../toDate/index.js';\nimport assign from '../_lib/assign/index.js';\nimport longFormatters from '../_lib/format/longFormatters/index.js';\nimport getTimezoneOffsetInMilliseconds from '../_lib/getTimezoneOffsetInMilliseconds/index.js';\nimport { isProtectedDayOfYearToken, isProtectedWeekYearToken, throwProtectedError } from '../_lib/protectedTokens/index.js';\nimport toInteger from '../_lib/toInteger/index.js';\nimport parsers from './_lib/parsers/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\nvar TIMEZONE_UNIT_PRIORITY = 10; // This RegExp consists of three parts separated by `|`:\n// - [yYQqMLwIdDecihHKkms]o matches any available ordinal number token\n//   (one of the certain letters followed by `o`)\n// - (\\w)\\1* matches any sequences of the same letter\n// - '' matches two quote characters in a row\n// - '(''|[^'])+('|$) matches anything surrounded by two quote characters ('),\n//   except a single quote symbol, which ends the sequence.\n//   Two quote characters do not end the sequence.\n//   If there is no matching single quote\n//   then the sequence will continue until the end of the string.\n// - . matches any single character unmatched by previous parts of the RegExps\n\nvar formattingTokensRegExp = /[yYQqMLwIdDecihHKkms]o|(\\w)\\1*|''|'(''|[^'])+('|$)|./g; // This RegExp catches symbols escaped by quotes, and also\n// sequences of symbols P, p, and the combinations like `PPPPPPPppppp`\n\nvar longFormattingTokensRegExp = /P+p+|P+|p+|''|'(''|[^'])+('|$)|./g;\nvar escapedStringRegExp = /^'([^]*?)'?$/;\nvar doubleQuoteRegExp = /''/g;\nvar notWhitespaceRegExp = /\\S/;\nvar unescapedLatinCharacterRegExp = /[a-zA-Z]/;\n/**\n * @name parse\n * @category Common Helpers\n * @summary Parse the date.\n *\n * @description\n * Return the date parsed from string using the given format string.\n *\n * > ⚠️ Please note that the `format` tokens differ from Moment.js and other libraries.\n * > See: https://git.io/fxCyr\n *\n * The characters in the format string wrapped between two single quotes characters (') are escaped.\n * Two single quotes in a row, whether inside or outside a quoted sequence, represent a 'real' single quote.\n *\n * Format of the format string is based on Unicode Technical Standard #35:\n * https://www.unicode.org/reports/tr35/tr35-dates.html#Date_Field_Symbol_Table\n * with a few additions (see note 5 below the table).\n *\n * Not all tokens are compatible. Combinations that don't make sense or could lead to bugs are prohibited\n * and will throw `RangeError`. For example usage of 24-hour format token with AM/PM token will throw an exception:\n *\n * ```javascript\n * parse('23 AM', 'HH a', new Date())\n * //=> RangeError: The format string mustn't contain `HH` and `a` at the same time\n * ```\n *\n * See the compatibility table: https://docs.google.com/spreadsheets/d/e/2PACX-1vQOPU3xUhplll6dyoMmVUXHKl_8CRDs6_ueLmex3SoqwhuolkuN3O05l4rqx5h1dKX8eb46Ul-CCSrq/pubhtml?gid=0&single=true\n *\n * Accepted format string patterns:\n * | Unit                            |Prior| Pattern | Result examples                   | Notes |\n * |---------------------------------|-----|---------|-----------------------------------|-------|\n * | Era                             | 140 | G..GGG  | AD, BC                            |       |\n * |                                 |     | GGGG    | Anno Domini, Before Christ        | 2     |\n * |                                 |     | GGGGG   | A, B                              |       |\n * | Calendar year                   | 130 | y       | 44, 1, 1900, 2017, 9999           | 4     |\n * |                                 |     | yo      | 44th, 1st, 1900th, 9999999th      | 4,5   |\n * |                                 |     | yy      | 44, 01, 00, 17                    | 4     |\n * |                                 |     | yyy     | 044, 001, 123, 999                | 4     |\n * |                                 |     | yyyy    | 0044, 0001, 1900, 2017            | 4     |\n * |                                 |     | yyyyy   | ...                               | 2,4   |\n * | Local week-numbering year       | 130 | Y       | 44, 1, 1900, 2017, 9000           | 4     |\n * |                                 |     | Yo      | 44th, 1st, 1900th, 9999999th      | 4,5   |\n * |                                 |     | YY      | 44, 01, 00, 17                    | 4,6   |\n * |                                 |     | YYY     | 044, 001, 123, 999                | 4     |\n * |                                 |     | YYYY    | 0044, 0001, 1900, 2017            | 4,6   |\n * |                                 |     | YYYYY   | ...                               | 2,4   |\n * | ISO week-numbering year         | 130 | R       | -43, 1, 1900, 2017, 9999, -9999   | 4,5   |\n * |                                 |     | RR      | -43, 01, 00, 17                   | 4,5   |\n * |                                 |     | RRR     | -043, 001, 123, 999, -999         | 4,5   |\n * |                                 |     | RRRR    | -0043, 0001, 2017, 9999, -9999    | 4,5   |\n * |                                 |     | RRRRR   | ...                               | 2,4,5 |\n * | Extended year                   | 130 | u       | -43, 1, 1900, 2017, 9999, -999    | 4     |\n * |                                 |     | uu      | -43, 01, 99, -99                  | 4     |\n * |                                 |     | uuu     | -043, 001, 123, 999, -999         | 4     |\n * |                                 |     | uuuu    | -0043, 0001, 2017, 9999, -9999    | 4     |\n * |                                 |     | uuuuu   | ...                               | 2,4   |\n * | Quarter (formatting)            | 120 | Q       | 1, 2, 3, 4                        |       |\n * |                                 |     | Qo      | 1st, 2nd, 3rd, 4th                | 5     |\n * |                                 |     | QQ      | 01, 02, 03, 04                    |       |\n * |                                 |     | QQQ     | Q1, Q2, Q3, Q4                    |       |\n * |                                 |     | QQQQ    | 1st quarter, 2nd quarter, ...     | 2     |\n * |                                 |     | QQQQQ   | 1, 2, 3, 4                        | 4     |\n * | Quarter (stand-alone)           | 120 | q       | 1, 2, 3, 4                        |       |\n * |                                 |     | qo      | 1st, 2nd, 3rd, 4th                | 5     |\n * |                                 |     | qq      | 01, 02, 03, 04                    |       |\n * |                                 |     | qqq     | Q1, Q2, Q3, Q4                    |       |\n * |                                 |     | qqqq    | 1st quarter, 2nd quarter, ...     | 2     |\n * |                                 |     | qqqqq   | 1, 2, 3, 4                        | 3     |\n * | Month (formatting)              | 110 | M       | 1, 2, ..., 12                     |       |\n * |                                 |     | Mo      | 1st, 2nd, ..., 12th               | 5     |\n * |                                 |     | MM      | 01, 02, ..., 12                   |       |\n * |                                 |     | MMM     | Jan, Feb, ..., Dec                |       |\n * |                                 |     | MMMM    | January, February, ..., December  | 2     |\n * |                                 |     | MMMMM   | J, F, ..., D                      |       |\n * | Month (stand-alone)             | 110 | L       | 1, 2, ..., 12                     |       |\n * |                                 |     | Lo      | 1st, 2nd, ..., 12th               | 5     |\n * |                                 |     | LL      | 01, 02, ..., 12                   |       |\n * |                                 |     | LLL     | Jan, Feb, ..., Dec                |       |\n * |                                 |     | LLLL    | January, February, ..., December  | 2     |\n * |                                 |     | LLLLL   | J, F, ..., D                      |       |\n * | Local week of year              | 100 | w       | 1, 2, ..., 53                     |       |\n * |                                 |     | wo      | 1st, 2nd, ..., 53th               | 5     |\n * |                                 |     | ww      | 01, 02, ..., 53                   |       |\n * | ISO week of year                | 100 | I       | 1, 2, ..., 53                     | 5     |\n * |                                 |     | Io      | 1st, 2nd, ..., 53th               | 5     |\n * |                                 |     | II      | 01, 02, ..., 53                   | 5     |\n * | Day of month                    |  90 | d       | 1, 2, ..., 31                     |       |\n * |                                 |     | do      | 1st, 2nd, ..., 31st               | 5     |\n * |                                 |     | dd      | 01, 02, ..., 31                   |       |\n * | Day of year                     |  90 | D       | 1, 2, ..., 365, 366               | 7     |\n * |                                 |     | Do      | 1st, 2nd, ..., 365th, 366th       | 5     |\n * |                                 |     | DD      | 01, 02, ..., 365, 366             | 7     |\n * |                                 |     | DDD     | 001, 002, ..., 365, 366           |       |\n * |                                 |     | DDDD    | ...                               | 2     |\n * | Day of week (formatting)        |  90 | E..EEE  | Mon, Tue, Wed, ..., Sun           |       |\n * |                                 |     | EEEE    | Monday, Tuesday, ..., Sunday      | 2     |\n * |                                 |     | EEEEE   | M, T, W, T, F, S, S               |       |\n * |                                 |     | EEEEEE  | Mo, Tu, We, Th, Fr, Su, Sa        |       |\n * | ISO day of week (formatting)    |  90 | i       | 1, 2, 3, ..., 7                   | 5     |\n * |                                 |     | io      | 1st, 2nd, ..., 7th                | 5     |\n * |                                 |     | ii      | 01, 02, ..., 07                   | 5     |\n * |                                 |     | iii     | Mon, Tue, Wed, ..., Sun           | 5     |\n * |                                 |     | iiii    | Monday, Tuesday, ..., Sunday      | 2,5   |\n * |                                 |     | iiiii   | M, T, W, T, F, S, S               | 5     |\n * |                                 |     | iiiiii  | Mo, Tu, We, Th, Fr, Su, Sa        | 5     |\n * | Local day of week (formatting)  |  90 | e       | 2, 3, 4, ..., 1                   |       |\n * |                                 |     | eo      | 2nd, 3rd, ..., 1st                | 5     |\n * |                                 |     | ee      | 02, 03, ..., 01                   |       |\n * |                                 |     | eee     | Mon, Tue, Wed, ..., Sun           |       |\n * |                                 |     | eeee    | Monday, Tuesday, ..., Sunday      | 2     |\n * |                                 |     | eeeee   | M, T, W, T, F, S, S               |       |\n * |                                 |     | eeeeee  | Mo, Tu, We, Th, Fr, Su, Sa        |       |\n * | Local day of week (stand-alone) |  90 | c       | 2, 3, 4, ..., 1                   |       |\n * |                                 |     | co      | 2nd, 3rd, ..., 1st                | 5     |\n * |                                 |     | cc      | 02, 03, ..., 01                   |       |\n * |                                 |     | ccc     | Mon, Tue, Wed, ..., Sun           |       |\n * |                                 |     | cccc    | Monday, Tuesday, ..., Sunday      | 2     |\n * |                                 |     | ccccc   | M, T, W, T, F, S, S               |       |\n * |                                 |     | cccccc  | Mo, Tu, We, Th, Fr, Su, Sa        |       |\n * | AM, PM                          |  80 | a..aaa  | AM, PM                            |       |\n * |                                 |     | aaaa    | a.m., p.m.                        | 2     |\n * |                                 |     | aaaaa   | a, p                              |       |\n * | AM, PM, noon, midnight          |  80 | b..bbb  | AM, PM, noon, midnight            |       |\n * |                                 |     | bbbb    | a.m., p.m., noon, midnight        | 2     |\n * |                                 |     | bbbbb   | a, p, n, mi                       |       |\n * | Flexible day period             |  80 | B..BBB  | at night, in the morning, ...     |       |\n * |                                 |     | BBBB    | at night, in the morning, ...     | 2     |\n * |                                 |     | BBBBB   | at night, in the morning, ...     |       |\n * | Hour [1-12]                     |  70 | h       | 1, 2, ..., 11, 12                 |       |\n * |                                 |     | ho      | 1st, 2nd, ..., 11th, 12th         | 5     |\n * |                                 |     | hh      | 01, 02, ..., 11, 12               |       |\n * | Hour [0-23]                     |  70 | H       | 0, 1, 2, ..., 23                  |       |\n * |                                 |     | Ho      | 0th, 1st, 2nd, ..., 23rd          | 5     |\n * |                                 |     | HH      | 00, 01, 02, ..., 23               |       |\n * | Hour [0-11]                     |  70 | K       | 1, 2, ..., 11, 0                  |       |\n * |                                 |     | Ko      | 1st, 2nd, ..., 11th, 0th          | 5     |\n * |                                 |     | KK      | 01, 02, ..., 11, 00               |       |\n * | Hour [1-24]                     |  70 | k       | 24, 1, 2, ..., 23                 |       |\n * |                                 |     | ko      | 24th, 1st, 2nd, ..., 23rd         | 5     |\n * |                                 |     | kk      | 24, 01, 02, ..., 23               |       |\n * | Minute                          |  60 | m       | 0, 1, ..., 59                     |       |\n * |                                 |     | mo      | 0th, 1st, ..., 59th               | 5     |\n * |                                 |     | mm      | 00, 01, ..., 59                   |       |\n * | Second                          |  50 | s       | 0, 1, ..., 59                     |       |\n * |                                 |     | so      | 0th, 1st, ..., 59th               | 5     |\n * |                                 |     | ss      | 00, 01, ..., 59                   |       |\n * | Seconds timestamp               |  40 | t       | 512969520                         |       |\n * |                                 |     | tt      | ...                               | 2     |\n * | Fraction of second              |  30 | S       | 0, 1, ..., 9                      |       |\n * |                                 |     | SS      | 00, 01, ..., 99                   |       |\n * |                                 |     | SSS     | 000, 0001, ..., 999               |       |\n * |                                 |     | SSSS    | ...                               | 2     |\n * | Milliseconds timestamp          |  20 | T       | 512969520900                      |       |\n * |                                 |     | TT      | ...                               | 2     |\n * | Timezone (ISO-8601 w/ Z)        |  10 | X       | -08, +0530, Z                     |       |\n * |                                 |     | XX      | -0800, +0530, Z                   |       |\n * |                                 |     | XXX     | -08:00, +05:30, Z                 |       |\n * |                                 |     | XXXX    | -0800, +0530, Z, +123456          | 2     |\n * |                                 |     | XXXXX   | -08:00, +05:30, Z, +12:34:56      |       |\n * | Timezone (ISO-8601 w/o Z)       |  10 | x       | -08, +0530, +00                   |       |\n * |                                 |     | xx      | -0800, +0530, +0000               |       |\n * |                                 |     | xxx     | -08:00, +05:30, +00:00            | 2     |\n * |                                 |     | xxxx    | -0800, +0530, +0000, +123456      |       |\n * |                                 |     | xxxxx   | -08:00, +05:30, +00:00, +12:34:56 |       |\n * | Long localized date             |  NA | P       | 05/29/1453                        | 5,8   |\n * |                                 |     | PP      | May 29, 1453                      |       |\n * |                                 |     | PPP     | May 29th, 1453                    |       |\n * |                                 |     | PPPP    | Sunday, May 29th, 1453            | 2,5,8 |\n * | Long localized time             |  NA | p       | 12:00 AM                          | 5,8   |\n * |                                 |     | pp      | 12:00:00 AM                       |       |\n * | Combination of date and time    |  NA | Pp      | 05/29/1453, 12:00 AM              |       |\n * |                                 |     | PPpp    | May 29, 1453, 12:00:00 AM         |       |\n * |                                 |     | PPPpp   | May 29th, 1453 at ...             |       |\n * |                                 |     | PPPPpp  | Sunday, May 29th, 1453 at ...     | 2,5,8 |\n * Notes:\n * 1. \"Formatting\" units (e.g. formatting quarter) in the default en-US locale\n *    are the same as \"stand-alone\" units, but are different in some languages.\n *    \"Formatting\" units are declined according to the rules of the language\n *    in the context of a date. \"Stand-alone\" units are always nominative singular.\n *    In `format` function, they will produce different result:\n *\n *    `format(new Date(2017, 10, 6), 'do LLLL', {locale: cs}) //=> '6. listopad'`\n *\n *    `format(new Date(2017, 10, 6), 'do MMMM', {locale: cs}) //=> '6. listopadu'`\n *\n *    `parse` will try to match both formatting and stand-alone units interchangably.\n *\n * 2. Any sequence of the identical letters is a pattern, unless it is escaped by\n *    the single quote characters (see below).\n *    If the sequence is longer than listed in table:\n *    - for numerical units (`yyyyyyyy`) `parse` will try to match a number\n *      as wide as the sequence\n *    - for text units (`MMMMMMMM`) `parse` will try to match the widest variation of the unit.\n *      These variations are marked with \"2\" in the last column of the table.\n *\n * 3. `QQQQQ` and `qqqqq` could be not strictly numerical in some locales.\n *    These tokens represent the shortest form of the quarter.\n *\n * 4. The main difference between `y` and `u` patterns are B.C. years:\n *\n *    | Year | `y` | `u` |\n *    |------|-----|-----|\n *    | AC 1 |   1 |   1 |\n *    | BC 1 |   1 |   0 |\n *    | BC 2 |   2 |  -1 |\n *\n *    Also `yy` will try to guess the century of two digit year by proximity with `referenceDate`:\n *\n *    `parse('50', 'yy', new Date(2018, 0, 1)) //=> Sat Jan 01 2050 00:00:00`\n *\n *    `parse('75', 'yy', new Date(2018, 0, 1)) //=> Wed Jan 01 1975 00:00:00`\n *\n *    while `uu` will just assign the year as is:\n *\n *    `parse('50', 'uu', new Date(2018, 0, 1)) //=> Sat Jan 01 0050 00:00:00`\n *\n *    `parse('75', 'uu', new Date(2018, 0, 1)) //=> Tue Jan 01 0075 00:00:00`\n *\n *    The same difference is true for local and ISO week-numbering years (`Y` and `R`),\n *    except local week-numbering years are dependent on `options.weekStartsOn`\n *    and `options.firstWeekContainsDate` (compare [setISOWeekYear]{@link https://date-fns.org/docs/setISOWeekYear}\n *    and [setWeekYear]{@link https://date-fns.org/docs/setWeekYear}).\n *\n * 5. These patterns are not in the Unicode Technical Standard #35:\n *    - `i`: ISO day of week\n *    - `I`: ISO week of year\n *    - `R`: ISO week-numbering year\n *    - `o`: ordinal number modifier\n *    - `P`: long localized date\n *    - `p`: long localized time\n *\n * 6. `YY` and `YYYY` tokens represent week-numbering years but they are often confused with years.\n *    You should enable `options.useAdditionalWeekYearTokens` to use them. See: https://git.io/fxCyr\n *\n * 7. `D` and `DD` tokens represent days of the year but they are ofthen confused with days of the month.\n *    You should enable `options.useAdditionalDayOfYearTokens` to use them. See: https://git.io/fxCyr\n *\n * 8. `P+` tokens do not have a defined priority since they are merely aliases to other tokens based\n *    on the given locale.\n *\n *    using `en-US` locale: `P` => `MM/dd/yyyy`\n *    using `en-US` locale: `p` => `hh:mm a`\n *    using `pt-BR` locale: `P` => `dd/MM/yyyy`\n *    using `pt-BR` locale: `p` => `HH:mm`\n *\n * Values will be assigned to the date in the descending order of its unit's priority.\n * Units of an equal priority overwrite each other in the order of appearance.\n *\n * If no values of higher priority are parsed (e.g. when parsing string 'January 1st' without a year),\n * the values will be taken from 3rd argument `referenceDate` which works as a context of parsing.\n *\n * `referenceDate` must be passed for correct work of the function.\n * If you're not sure which `referenceDate` to supply, create a new instance of Date:\n * `parse('02/11/2014', 'MM/dd/yyyy', new Date())`\n * In this case parsing will be done in the context of the current date.\n * If `referenceDate` is `Invalid Date` or a value not convertible to valid `Date`,\n * then `Invalid Date` will be returned.\n *\n * The result may vary by locale.\n *\n * If `formatString` matches with `dateString` but does not provides tokens, `referenceDate` will be returned.\n *\n * If parsing failed, `Invalid Date` will be returned.\n * Invalid Date is a Date, whose time value is NaN.\n * Time value of Date: http://es5.github.io/#x15.9.1.1\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * - Old `parse` was renamed to `toDate`.\n *   Now `parse` is a new function which parses a string using a provided format.\n *\n *   ```javascript\n *   // Before v2.0.0\n *   parse('2016-01-01')\n *\n *   // v2.0.0 onward\n *   toDate('2016-01-01')\n *   parse('2016-01-01', 'yyyy-MM-dd', new Date())\n *   ```\n *\n * @param {String} dateString - the string to parse\n * @param {String} formatString - the string of tokens\n * @param {Date|Number} referenceDate - defines values missing from the parsed dateString\n * @param {Object} [options] - an object with options.\n * @param {Locale} [options.locale=defaultLocale] - the locale object. See [Locale]{@link https://date-fns.org/docs/Locale}\n * @param {0|1|2|3|4|5|6} [options.weekStartsOn=0] - the index of the first day of the week (0 - Sunday)\n * @param {1|2|3|4|5|6|7} [options.firstWeekContainsDate=1] - the day of January, which is always in the first week of the year\n * @param {Boolean} [options.useAdditionalWeekYearTokens=false] - if true, allows usage of the week-numbering year tokens `YY` and `YYYY`;\n *   see: https://git.io/fxCyr\n * @param {Boolean} [options.useAdditionalDayOfYearTokens=false] - if true, allows usage of the day of year tokens `D` and `DD`;\n *   see: https://git.io/fxCyr\n * @returns {Date} the parsed date\n * @throws {TypeError} 3 arguments required\n * @throws {RangeError} `options.weekStartsOn` must be between 0 and 6\n * @throws {RangeError} `options.firstWeekContainsDate` must be between 1 and 7\n * @throws {RangeError} `options.locale` must contain `match` property\n * @throws {RangeError} use `yyyy` instead of `YYYY` for formatting years using [format provided] to the input [input provided]; see: https://git.io/fxCyr\n * @throws {RangeError} use `yy` instead of `YY` for formatting years using [format provided] to the input [input provided]; see: https://git.io/fxCyr\n * @throws {RangeError} use `d` instead of `D` for formatting days of the month using [format provided] to the input [input provided]; see: https://git.io/fxCyr\n * @throws {RangeError} use `dd` instead of `DD` for formatting days of the month using [format provided] to the input [input provided]; see: https://git.io/fxCyr\n * @throws {RangeError} format string contains an unescaped latin alphabet character\n *\n * @example\n * // Parse 11 February 2014 from middle-endian format:\n * var result = parse('02/11/2014', 'MM/dd/yyyy', new Date())\n * //=> Tue Feb 11 2014 00:00:00\n *\n * @example\n * // Parse 28th of February in Esperanto locale in the context of 2010 year:\n * import eo from 'date-fns/locale/eo'\n * var result = parse('28-a de februaro', \"do 'de' MMMM\", new Date(2010, 0, 1), {\n *   locale: eo\n * })\n * //=> Sun Feb 28 2010 00:00:00\n */\n\nexport default function parse(dirtyDateString, dirtyFormatString, dirtyReferenceDate, dirtyOptions) {\n  requiredArgs(3, arguments);\n  var dateString = String(dirtyDateString);\n  var formatString = String(dirtyFormatString);\n  var options = dirtyOptions || {};\n  var locale = options.locale || defaultLocale;\n\n  if (!locale.match) {\n    throw new RangeError('locale must contain match property');\n  }\n\n  var localeFirstWeekContainsDate = locale.options && locale.options.firstWeekContainsDate;\n  var defaultFirstWeekContainsDate = localeFirstWeekContainsDate == null ? 1 : toInteger(localeFirstWeekContainsDate);\n  var firstWeekContainsDate = options.firstWeekContainsDate == null ? defaultFirstWeekContainsDate : toInteger(options.firstWeekContainsDate); // Test if weekStartsOn is between 1 and 7 _and_ is not NaN\n\n  if (!(firstWeekContainsDate >= 1 && firstWeekContainsDate <= 7)) {\n    throw new RangeError('firstWeekContainsDate must be between 1 and 7 inclusively');\n  }\n\n  var localeWeekStartsOn = locale.options && locale.options.weekStartsOn;\n  var defaultWeekStartsOn = localeWeekStartsOn == null ? 0 : toInteger(localeWeekStartsOn);\n  var weekStartsOn = options.weekStartsOn == null ? defaultWeekStartsOn : toInteger(options.weekStartsOn); // Test if weekStartsOn is between 0 and 6 _and_ is not NaN\n\n  if (!(weekStartsOn >= 0 && weekStartsOn <= 6)) {\n    throw new RangeError('weekStartsOn must be between 0 and 6 inclusively');\n  }\n\n  if (formatString === '') {\n    if (dateString === '') {\n      return toDate(dirtyReferenceDate);\n    } else {\n      return new Date(NaN);\n    }\n  }\n\n  var subFnOptions = {\n    firstWeekContainsDate: firstWeekContainsDate,\n    weekStartsOn: weekStartsOn,\n    locale: locale // If timezone isn't specified, it will be set to the system timezone\n\n  };\n  var setters = [{\n    priority: TIMEZONE_UNIT_PRIORITY,\n    subPriority: -1,\n    set: dateToSystemTimezone,\n    index: 0\n  }];\n  var i;\n  var tokens = formatString.match(longFormattingTokensRegExp).map(function (substring) {\n    var firstCharacter = substring[0];\n\n    if (firstCharacter === 'p' || firstCharacter === 'P') {\n      var longFormatter = longFormatters[firstCharacter];\n      return longFormatter(substring, locale.formatLong, subFnOptions);\n    }\n\n    return substring;\n  }).join('').match(formattingTokensRegExp);\n  var usedTokens = [];\n\n  for (i = 0; i < tokens.length; i++) {\n    var token = tokens[i];\n\n    if (!options.useAdditionalWeekYearTokens && isProtectedWeekYearToken(token)) {\n      throwProtectedError(token, formatString, dirtyDateString);\n    }\n\n    if (!options.useAdditionalDayOfYearTokens && isProtectedDayOfYearToken(token)) {\n      throwProtectedError(token, formatString, dirtyDateString);\n    }\n\n    var firstCharacter = token[0];\n    var parser = parsers[firstCharacter];\n\n    if (parser) {\n      var incompatibleTokens = parser.incompatibleTokens;\n\n      if (Array.isArray(incompatibleTokens)) {\n        var incompatibleToken = void 0;\n\n        for (var _i = 0; _i < usedTokens.length; _i++) {\n          var usedToken = usedTokens[_i].token;\n\n          if (incompatibleTokens.indexOf(usedToken) !== -1 || usedToken === firstCharacter) {\n            incompatibleToken = usedTokens[_i];\n            break;\n          }\n        }\n\n        if (incompatibleToken) {\n          throw new RangeError(\"The format string mustn't contain `\".concat(incompatibleToken.fullToken, \"` and `\").concat(token, \"` at the same time\"));\n        }\n      } else if (parser.incompatibleTokens === '*' && usedTokens.length) {\n        throw new RangeError(\"The format string mustn't contain `\".concat(token, \"` and any other token at the same time\"));\n      }\n\n      usedTokens.push({\n        token: firstCharacter,\n        fullToken: token\n      });\n      var parseResult = parser.parse(dateString, token, locale.match, subFnOptions);\n\n      if (!parseResult) {\n        return new Date(NaN);\n      }\n\n      setters.push({\n        priority: parser.priority,\n        subPriority: parser.subPriority || 0,\n        set: parser.set,\n        validate: parser.validate,\n        value: parseResult.value,\n        index: setters.length\n      });\n      dateString = parseResult.rest;\n    } else {\n      if (firstCharacter.match(unescapedLatinCharacterRegExp)) {\n        throw new RangeError('Format string contains an unescaped latin alphabet character `' + firstCharacter + '`');\n      } // Replace two single quote characters with one single quote character\n\n\n      if (token === \"''\") {\n        token = \"'\";\n      } else if (firstCharacter === \"'\") {\n        token = cleanEscapedString(token);\n      } // Cut token from string, or, if string doesn't match the token, return Invalid Date\n\n\n      if (dateString.indexOf(token) === 0) {\n        dateString = dateString.slice(token.length);\n      } else {\n        return new Date(NaN);\n      }\n    }\n  } // Check if the remaining input contains something other than whitespace\n\n\n  if (dateString.length > 0 && notWhitespaceRegExp.test(dateString)) {\n    return new Date(NaN);\n  }\n\n  var uniquePrioritySetters = setters.map(function (setter) {\n    return setter.priority;\n  }).sort(function (a, b) {\n    return b - a;\n  }).filter(function (priority, index, array) {\n    return array.indexOf(priority) === index;\n  }).map(function (priority) {\n    return setters.filter(function (setter) {\n      return setter.priority === priority;\n    }).sort(function (a, b) {\n      return b.subPriority - a.subPriority;\n    });\n  }).map(function (setterArray) {\n    return setterArray[0];\n  });\n  var date = toDate(dirtyReferenceDate);\n\n  if (isNaN(date)) {\n    return new Date(NaN);\n  } // Convert the date in system timezone to the same date in UTC+00:00 timezone.\n  // This ensures that when UTC functions will be implemented, locales will be compatible with them.\n  // See an issue about UTC functions: https://github.com/date-fns/date-fns/issues/37\n\n\n  var utcDate = subMilliseconds(date, getTimezoneOffsetInMilliseconds(date));\n  var flags = {};\n\n  for (i = 0; i < uniquePrioritySetters.length; i++) {\n    var setter = uniquePrioritySetters[i];\n\n    if (setter.validate && !setter.validate(utcDate, setter.value, subFnOptions)) {\n      return new Date(NaN);\n    }\n\n    var result = setter.set(utcDate, flags, setter.value, subFnOptions); // Result is tuple (date, flags)\n\n    if (result[0]) {\n      utcDate = result[0];\n      assign(flags, result[1]); // Result is date\n    } else {\n      utcDate = result;\n    }\n  }\n\n  return utcDate;\n}\n\nfunction dateToSystemTimezone(date, flags) {\n  if (flags.timestampIsSet) {\n    return date;\n  }\n\n  var convertedDate = new Date(0);\n  convertedDate.setFullYear(date.getUTCFullYear(), date.getUTCMonth(), date.getUTCDate());\n  convertedDate.setHours(date.getUTCHours(), date.getUTCMinutes(), date.getUTCSeconds(), date.getUTCMilliseconds());\n  return convertedDate;\n}\n\nfunction cleanEscapedString(input) {\n  return input.match(escapedStringRegExp)[1].replace(doubleQuoteRegExp, \"'\");\n}","import toDate from '../toDate/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\n/**\n * @name getDaysInMonth\n * @category Month Helpers\n * @summary Get the number of days in a month of the given date.\n *\n * @description\n * Get the number of days in a month of the given date.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the given date\n * @returns {Number} the number of days in a month\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // How many days are in February 2000?\n * var result = getDaysInMonth(new Date(2000, 1))\n * //=> 29\n */\n\nexport default function getDaysInMonth(dirtyDate) {\n  requiredArgs(1, arguments);\n  var date = toDate(dirtyDate);\n  var year = date.getFullYear();\n  var monthIndex = date.getMonth();\n  var lastDayOfMonth = new Date(0);\n  lastDayOfMonth.setFullYear(year, monthIndex + 1, 0);\n  lastDayOfMonth.setHours(0, 0, 0, 0);\n  return lastDayOfMonth.getDate();\n}","import toDate from '../toDate/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\n/**\n * @name startOfMonth\n * @category Month Helpers\n * @summary Return the start of a month for the given date.\n *\n * @description\n * Return the start of a month for the given date.\n * The result will be in the local timezone.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the original date\n * @returns {Date} the start of a month\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // The start of a month for 2 September 2014 11:55:00:\n * var result = startOfMonth(new Date(2014, 8, 2, 11, 55, 0))\n * //=> Mon Sep 01 2014 00:00:00\n */\n\nexport default function startOfMonth(dirtyDate) {\n  requiredArgs(1, arguments);\n  var date = toDate(dirtyDate);\n  date.setDate(1);\n  date.setHours(0, 0, 0, 0);\n  return date;\n}","import toDate from '../toDate/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\n/**\n * @name endOfMonth\n * @category Month Helpers\n * @summary Return the end of a month for the given date.\n *\n * @description\n * Return the end of a month for the given date.\n * The result will be in the local timezone.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the original date\n * @returns {Date} the end of a month\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // The end of a month for 2 September 2014 11:55:00:\n * var result = endOfMonth(new Date(2014, 8, 2, 11, 55, 0))\n * //=> Tue Sep 30 2014 23:59:59.999\n */\n\nexport default function endOfMonth(dirtyDate) {\n  requiredArgs(1, arguments);\n  var date = toDate(dirtyDate);\n  var month = date.getMonth();\n  date.setFullYear(date.getFullYear(), month + 1, 0);\n  date.setHours(23, 59, 59, 999);\n  return date;\n}","import toDate from '../toDate/index.js';\nimport toInteger from '../_lib/toInteger/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\n/**\n * @name startOfWeek\n * @category Week Helpers\n * @summary Return the start of a week for the given date.\n *\n * @description\n * Return the start of a week for the given date.\n * The result will be in the local timezone.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the original date\n * @param {Object} [options] - an object with options.\n * @param {Locale} [options.locale=defaultLocale] - the locale object. See [Locale]{@link https://date-fns.org/docs/Locale}\n * @param {0|1|2|3|4|5|6} [options.weekStartsOn=0] - the index of the first day of the week (0 - Sunday)\n * @returns {Date} the start of a week\n * @throws {TypeError} 1 argument required\n * @throws {RangeError} `options.weekStartsOn` must be between 0 and 6\n *\n * @example\n * // The start of a week for 2 September 2014 11:55:00:\n * var result = startOfWeek(new Date(2014, 8, 2, 11, 55, 0))\n * //=> Sun Aug 31 2014 00:00:00\n *\n * @example\n * // If the week starts on Monday, the start of the week for 2 September 2014 11:55:00:\n * var result = startOfWeek(new Date(2014, 8, 2, 11, 55, 0), { weekStartsOn: 1 })\n * //=> Mon Sep 01 2014 00:00:00\n */\n\nexport default function startOfWeek(dirtyDate, dirtyOptions) {\n  requiredArgs(1, arguments);\n  var options = dirtyOptions || {};\n  var locale = options.locale;\n  var localeWeekStartsOn = locale && locale.options && locale.options.weekStartsOn;\n  var defaultWeekStartsOn = localeWeekStartsOn == null ? 0 : toInteger(localeWeekStartsOn);\n  var weekStartsOn = options.weekStartsOn == null ? defaultWeekStartsOn : toInteger(options.weekStartsOn); // Test if weekStartsOn is between 0 and 6 _and_ is not NaN\n\n  if (!(weekStartsOn >= 0 && weekStartsOn <= 6)) {\n    throw new RangeError('weekStartsOn must be between 0 and 6 inclusively');\n  }\n\n  var date = toDate(dirtyDate);\n  var day = date.getDay();\n  var diff = (day < weekStartsOn ? 7 : 0) + day - weekStartsOn;\n  date.setDate(date.getDate() - diff);\n  date.setHours(0, 0, 0, 0);\n  return date;\n}","import toDate from '../toDate/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\n/**\n * @name startOfYear\n * @category Year Helpers\n * @summary Return the start of a year for the given date.\n *\n * @description\n * Return the start of a year for the given date.\n * The result will be in the local timezone.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the original date\n * @returns {Date} the start of a year\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // The start of a year for 2 September 2014 11:55:00:\n * var result = startOfYear(new Date(2014, 8, 2, 11, 55, 00))\n * //=> Wed Jan 01 2014 00:00:00\n */\n\nexport default function startOfYear(dirtyDate) {\n  requiredArgs(1, arguments);\n  var cleanDate = toDate(dirtyDate);\n  var date = new Date(0);\n  date.setFullYear(cleanDate.getFullYear(), 0, 1);\n  date.setHours(0, 0, 0, 0);\n  return date;\n}","import addDays from 'date-fns/addDays';\nimport addSeconds from 'date-fns/addSeconds';\nimport addMinutes from 'date-fns/addMinutes';\nimport addHours from 'date-fns/addHours';\nimport addWeeks from 'date-fns/addWeeks';\nimport addMonths from 'date-fns/addMonths';\nimport addYears from 'date-fns/addYears';\nimport differenceInYears from 'date-fns/differenceInYears';\nimport differenceInQuarters from 'date-fns/differenceInQuarters';\nimport differenceInMonths from 'date-fns/differenceInMonths';\nimport differenceInWeeks from 'date-fns/differenceInWeeks';\nimport differenceInDays from 'date-fns/differenceInDays';\nimport differenceInHours from 'date-fns/differenceInHours';\nimport differenceInMinutes from 'date-fns/differenceInMinutes';\nimport differenceInSeconds from 'date-fns/differenceInSeconds';\nimport differenceInMilliseconds from 'date-fns/differenceInMilliseconds';\nimport eachDayOfInterval from 'date-fns/eachDayOfInterval';\nimport endOfDay from 'date-fns/endOfDay';\nimport endOfWeek from 'date-fns/endOfWeek';\nimport endOfYear from 'date-fns/endOfYear';\nimport format from 'date-fns/format';\nimport getHours from 'date-fns/getHours';\nimport getSeconds from 'date-fns/getSeconds';\nimport getYear from 'date-fns/getYear';\nimport isAfter from 'date-fns/isAfter';\nimport isBefore from 'date-fns/isBefore';\nimport isEqual from 'date-fns/isEqual';\nimport isSameDay from 'date-fns/isSameDay';\nimport isSameYear from 'date-fns/isSameYear';\nimport isSameMonth from 'date-fns/isSameMonth';\nimport isSameHour from 'date-fns/isSameHour';\nimport isValid from 'date-fns/isValid';\nimport dateFnsParse from 'date-fns/parse';\nimport setHours from 'date-fns/setHours';\nimport setMinutes from 'date-fns/setMinutes';\nimport setMonth from 'date-fns/setMonth';\nimport getDaysInMonth from 'date-fns/getDaysInMonth';\nimport setSeconds from 'date-fns/setSeconds';\nimport setYear from 'date-fns/setYear';\nimport startOfDay from 'date-fns/startOfDay';\nimport startOfMonth from 'date-fns/startOfMonth';\nimport endOfMonth from 'date-fns/endOfMonth';\nimport startOfWeek from 'date-fns/startOfWeek';\nimport startOfYear from 'date-fns/startOfYear';\nimport isWithinInterval from 'date-fns/isWithinInterval';\nimport longFormatters from 'date-fns/_lib/format/longFormatters';\nimport defaultLocale from 'date-fns/locale/en-US';\nvar defaultFormats = {\n  dayOfMonth: \"d\",\n  fullDate: \"PP\",\n  fullDateWithWeekday: \"PPPP\",\n  fullDateTime: \"PP p\",\n  fullDateTime12h: \"PP hh:mm aaa\",\n  fullDateTime24h: \"PP HH:mm\",\n  fullTime: \"p\",\n  fullTime12h: \"hh:mm aaa\",\n  fullTime24h: \"HH:mm\",\n  hours12h: \"hh\",\n  hours24h: \"HH\",\n  keyboardDate: \"P\",\n  keyboardDateTime: \"P p\",\n  keyboardDateTime12h: \"P hh:mm aaa\",\n  keyboardDateTime24h: \"P HH:mm\",\n  minutes: \"mm\",\n  month: \"LLLL\",\n  monthAndDate: \"MMMM d\",\n  monthAndYear: \"LLLL yyyy\",\n  monthShort: \"MMM\",\n  weekday: \"EEEE\",\n  weekdayShort: \"EEE\",\n  normalDate: \"d MMMM\",\n  normalDateWithWeekday: \"EEE, MMM d\",\n  seconds: \"ss\",\n  shortDate: \"MMM d\",\n  year: \"yyyy\"\n};\n\nvar DateFnsUtils =\n/** @class */\nfunction () {\n  function DateFnsUtils(_a) {\n    var _b = _a === void 0 ? {} : _a,\n        locale = _b.locale,\n        formats = _b.formats;\n\n    this.lib = \"date-fns\";\n    this.locale = locale;\n    this.formats = Object.assign({}, defaultFormats, formats);\n  } // Note: date-fns input types are more lenient than this adapter, so we need to expose our more\n  // strict signature and delegate to the more lenient signature. Otherwise, we have downstream type errors upon usage.\n\n\n  DateFnsUtils.prototype.is12HourCycleInCurrentLocale = function () {\n    if (this.locale) {\n      return /a/.test(this.locale.formatLong.time());\n    } // By default date-fns is using en-US locale with am/pm enabled\n\n\n    return true;\n  };\n\n  DateFnsUtils.prototype.getFormatHelperText = function (format) {\n    // @see https://github.com/date-fns/date-fns/blob/master/src/format/index.js#L31\n    var longFormatRegexp = /P+p+|P+|p+|''|'(''|[^'])+('|$)|./g;\n    var locale = this.locale || defaultLocale;\n    return format.match(longFormatRegexp).map(function (token) {\n      var firstCharacter = token[0];\n\n      if (firstCharacter === \"p\" || firstCharacter === \"P\") {\n        var longFormatter = longFormatters[firstCharacter];\n        return longFormatter(token, locale.formatLong, {});\n      }\n\n      return token;\n    }).join(\"\").replace(/(aaa|aa|a)/g, \"(a|p)m\").toLocaleLowerCase();\n  };\n\n  DateFnsUtils.prototype.getCurrentLocaleCode = function () {\n    var _a;\n\n    return ((_a = this.locale) === null || _a === void 0 ? void 0 : _a.code) || \"en-US\";\n  };\n\n  DateFnsUtils.prototype.addSeconds = function (value, count) {\n    return addSeconds(value, count);\n  };\n\n  DateFnsUtils.prototype.addMinutes = function (value, count) {\n    return addMinutes(value, count);\n  };\n\n  DateFnsUtils.prototype.addHours = function (value, count) {\n    return addHours(value, count);\n  };\n\n  DateFnsUtils.prototype.addDays = function (value, count) {\n    return addDays(value, count);\n  };\n\n  DateFnsUtils.prototype.addWeeks = function (value, count) {\n    return addWeeks(value, count);\n  };\n\n  DateFnsUtils.prototype.addMonths = function (value, count) {\n    return addMonths(value, count);\n  };\n\n  DateFnsUtils.prototype.isValid = function (value) {\n    return isValid(this.date(value));\n  };\n\n  DateFnsUtils.prototype.getDiff = function (value, comparing, unit) {\n    switch (unit) {\n      case \"years\":\n        return differenceInYears(value, this.date(comparing));\n\n      case \"quarters\":\n        return differenceInQuarters(value, this.date(comparing));\n\n      case \"months\":\n        return differenceInMonths(value, this.date(comparing));\n\n      case \"weeks\":\n        return differenceInWeeks(value, this.date(comparing));\n\n      case \"days\":\n        return differenceInDays(value, this.date(comparing));\n\n      case \"hours\":\n        return differenceInHours(value, this.date(comparing));\n\n      case \"minutes\":\n        return differenceInMinutes(value, this.date(comparing));\n\n      case \"seconds\":\n        return differenceInSeconds(value, this.date(comparing));\n\n      default:\n        {\n          return differenceInMilliseconds(value, this.date(comparing));\n        }\n    }\n  };\n\n  DateFnsUtils.prototype.isAfter = function (value, comparing) {\n    return isAfter(value, comparing);\n  };\n\n  DateFnsUtils.prototype.isBefore = function (value, comparing) {\n    return isBefore(value, comparing);\n  };\n\n  DateFnsUtils.prototype.startOfDay = function (value) {\n    return startOfDay(value);\n  };\n\n  DateFnsUtils.prototype.endOfDay = function (value) {\n    return endOfDay(value);\n  };\n\n  DateFnsUtils.prototype.getHours = function (value) {\n    return getHours(value);\n  };\n\n  DateFnsUtils.prototype.setHours = function (value, count) {\n    return setHours(value, count);\n  };\n\n  DateFnsUtils.prototype.setMinutes = function (value, count) {\n    return setMinutes(value, count);\n  };\n\n  DateFnsUtils.prototype.getSeconds = function (value) {\n    return getSeconds(value);\n  };\n\n  DateFnsUtils.prototype.setSeconds = function (value, count) {\n    return setSeconds(value, count);\n  };\n\n  DateFnsUtils.prototype.isSameDay = function (value, comparing) {\n    return isSameDay(value, comparing);\n  };\n\n  DateFnsUtils.prototype.isSameMonth = function (value, comparing) {\n    return isSameMonth(value, comparing);\n  };\n\n  DateFnsUtils.prototype.isSameYear = function (value, comparing) {\n    return isSameYear(value, comparing);\n  };\n\n  DateFnsUtils.prototype.isSameHour = function (value, comparing) {\n    return isSameHour(value, comparing);\n  };\n\n  DateFnsUtils.prototype.startOfMonth = function (value) {\n    return startOfMonth(value);\n  };\n\n  DateFnsUtils.prototype.endOfMonth = function (value) {\n    return endOfMonth(value);\n  };\n\n  DateFnsUtils.prototype.startOfWeek = function (value) {\n    return startOfWeek(value, {\n      locale: this.locale\n    });\n  };\n\n  DateFnsUtils.prototype.endOfWeek = function (value) {\n    return endOfWeek(value, {\n      locale: this.locale\n    });\n  };\n\n  DateFnsUtils.prototype.getYear = function (value) {\n    return getYear(value);\n  };\n\n  DateFnsUtils.prototype.setYear = function (value, count) {\n    return setYear(value, count);\n  };\n\n  DateFnsUtils.prototype.date = function (value) {\n    if (typeof value === \"undefined\") {\n      return new Date();\n    }\n\n    if (value === null) {\n      return null;\n    }\n\n    return new Date(value);\n  };\n\n  DateFnsUtils.prototype.toJsDate = function (value) {\n    return value;\n  };\n\n  DateFnsUtils.prototype.parse = function (value, formatString) {\n    if (value === \"\") {\n      return null;\n    }\n\n    return dateFnsParse(value, formatString, new Date(), {\n      locale: this.locale\n    });\n  };\n\n  DateFnsUtils.prototype.format = function (date, formatKey) {\n    return this.formatByString(date, this.formats[formatKey]);\n  };\n\n  DateFnsUtils.prototype.formatByString = function (date, formatString) {\n    return format(date, formatString, {\n      locale: this.locale\n    });\n  };\n\n  DateFnsUtils.prototype.isEqual = function (date, comparing) {\n    if (date === null && comparing === null) {\n      return true;\n    }\n\n    return isEqual(date, comparing);\n  };\n\n  DateFnsUtils.prototype.isNull = function (date) {\n    return date === null;\n  };\n\n  DateFnsUtils.prototype.isAfterDay = function (date, value) {\n    return isAfter(date, endOfDay(value));\n  };\n\n  DateFnsUtils.prototype.isBeforeDay = function (date, value) {\n    return isBefore(date, startOfDay(value));\n  };\n\n  DateFnsUtils.prototype.isBeforeYear = function (date, value) {\n    return isBefore(date, startOfYear(value));\n  };\n\n  DateFnsUtils.prototype.isAfterYear = function (date, value) {\n    return isAfter(date, endOfYear(value));\n  };\n\n  DateFnsUtils.prototype.isWithinRange = function (date, _a) {\n    var start = _a[0],\n        end = _a[1];\n    return isWithinInterval(date, {\n      start: start,\n      end: end\n    });\n  };\n\n  DateFnsUtils.prototype.formatNumber = function (numberToFormat) {\n    return numberToFormat;\n  };\n\n  DateFnsUtils.prototype.getMinutes = function (date) {\n    return date.getMinutes();\n  };\n\n  DateFnsUtils.prototype.getMonth = function (date) {\n    return date.getMonth();\n  };\n\n  DateFnsUtils.prototype.getDaysInMonth = function (date) {\n    return getDaysInMonth(date);\n  };\n\n  DateFnsUtils.prototype.setMonth = function (date, count) {\n    return setMonth(date, count);\n  };\n\n  DateFnsUtils.prototype.getMeridiemText = function (ampm) {\n    return ampm === \"am\" ? \"AM\" : \"PM\";\n  };\n\n  DateFnsUtils.prototype.getNextMonth = function (date) {\n    return addMonths(date, 1);\n  };\n\n  DateFnsUtils.prototype.getPreviousMonth = function (date) {\n    return addMonths(date, -1);\n  };\n\n  DateFnsUtils.prototype.getMonthArray = function (date) {\n    var firstMonth = startOfYear(date);\n    var monthArray = [firstMonth];\n\n    while (monthArray.length < 12) {\n      var prevMonth = monthArray[monthArray.length - 1];\n      monthArray.push(this.getNextMonth(prevMonth));\n    }\n\n    return monthArray;\n  };\n\n  DateFnsUtils.prototype.mergeDateAndTime = function (date, time) {\n    return this.setSeconds(this.setMinutes(this.setHours(date, this.getHours(time)), this.getMinutes(time)), this.getSeconds(time));\n  };\n\n  DateFnsUtils.prototype.getWeekdays = function () {\n    var _this = this;\n\n    var now = new Date();\n    return eachDayOfInterval({\n      start: startOfWeek(now, {\n        locale: this.locale\n      }),\n      end: endOfWeek(now, {\n        locale: this.locale\n      })\n    }).map(function (day) {\n      return _this.formatByString(day, \"EEEEEE\");\n    });\n  };\n\n  DateFnsUtils.prototype.getWeekArray = function (date) {\n    var start = startOfWeek(startOfMonth(date), {\n      locale: this.locale\n    });\n    var end = endOfWeek(endOfMonth(date), {\n      locale: this.locale\n    });\n    var count = 0;\n    var current = start;\n    var nestedWeeks = [];\n\n    while (isBefore(current, end)) {\n      var weekNumber = Math.floor(count / 7);\n      nestedWeeks[weekNumber] = nestedWeeks[weekNumber] || [];\n      nestedWeeks[weekNumber].push(current);\n      current = addDays(current, 1);\n      count += 1;\n    }\n\n    return nestedWeeks;\n  };\n\n  DateFnsUtils.prototype.getYearRange = function (start, end) {\n    var startDate = startOfYear(start);\n    var endDate = endOfYear(end);\n    var years = [];\n    var current = startDate;\n\n    while (isBefore(current, endDate)) {\n      years.push(current);\n      current = addYears(current, 1);\n    }\n\n    return years;\n  };\n\n  return DateFnsUtils;\n}();\n\nexport default DateFnsUtils;","import toInteger from '../_lib/toInteger/index.js';\nimport addMilliseconds from '../addMilliseconds/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\n/**\n * @name addSeconds\n * @category Second Helpers\n * @summary Add the specified number of seconds to the given date.\n *\n * @description\n * Add the specified number of seconds to the given date.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the date to be changed\n * @param {Number} amount - the amount of seconds to be added. Positive decimals will be rounded using `Math.floor`, decimals less than zero will be rounded using `Math.ceil`.\n * @returns {Date} the new date with the seconds added\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // Add 30 seconds to 10 July 2014 12:45:00:\n * var result = addSeconds(new Date(2014, 6, 10, 12, 45, 0), 30)\n * //=> Thu Jul 10 2014 12:45:30\n */\n\nexport default function addSeconds(dirtyDate, dirtyAmount) {\n  requiredArgs(2, arguments);\n  var amount = toInteger(dirtyAmount);\n  return addMilliseconds(dirtyDate, amount * 1000);\n}","import toInteger from '../_lib/toInteger/index.js';\nimport addDays from '../addDays/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\n/**\n * @name addWeeks\n * @category Week Helpers\n * @summary Add the specified number of weeks to the given date.\n *\n * @description\n * Add the specified number of week to the given date.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the date to be changed\n * @param {Number} amount - the amount of weeks to be added. Positive decimals will be rounded using `Math.floor`, decimals less than zero will be rounded using `Math.ceil`.\n * @returns {Date} the new date with the weeks added\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // Add 4 weeks to 1 September 2014:\n * var result = addWeeks(new Date(2014, 8, 1), 4)\n * //=> Mon Sep 29 2014 00:00:00\n */\n\nexport default function addWeeks(dirtyDate, dirtyAmount) {\n  requiredArgs(2, arguments);\n  var amount = toInteger(dirtyAmount);\n  var days = amount * 7;\n  return addDays(dirtyDate, days);\n}","import differenceInMonths from '../differenceInMonths/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\n/**\n * @name differenceInQuarters\n * @category Quarter Helpers\n * @summary Get the number of full quarters between the given dates.\n *\n * @description\n * Get the number of full quarters between the given dates.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} dateLeft - the later date\n * @param {Date|Number} dateRight - the earlier date\n * @returns {Number} the number of full quarters\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // How many full quarters are between 31 December 2013 and 2 July 2014?\n * var result = differenceInQuarters(new Date(2014, 6, 2), new Date(2013, 11, 31))\n * //=> 2\n */\n\nexport default function differenceInQuarters(dirtyDateLeft, dirtyDateRight) {\n  requiredArgs(2, arguments);\n  var diff = differenceInMonths(dirtyDateLeft, dirtyDateRight) / 3;\n  return diff > 0 ? Math.floor(diff) : Math.ceil(diff);\n}","import differenceInDays from '../differenceInDays/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\n/**\n * @name differenceInWeeks\n * @category Week Helpers\n * @summary Get the number of full weeks between the given dates.\n *\n * @description\n * Get the number of full weeks between two dates. Fractional weeks are\n * truncated towards zero.\n *\n * One \"full week\" is the distance between a local time in one day to the same\n * local time 7 days earlier or later. A full week can sometimes be less than\n * or more than 7*24 hours if a daylight savings change happens between two dates.\n *\n * To ignore DST and only measure exact 7*24-hour periods, use this instead:\n * `Math.floor(differenceInHours(dateLeft, dateRight)/(7*24))|0`.\n *\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} dateLeft - the later date\n * @param {Date|Number} dateRight - the earlier date\n * @returns {Number} the number of full weeks\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // How many full weeks are between 5 July 2014 and 20 July 2014?\n * var result = differenceInWeeks(new Date(2014, 6, 20), new Date(2014, 6, 5))\n * //=> 2\n *\n * // How many full weeks are between\n * // 1 March 2020 0:00 and 6 June 2020 0:00 ?\n * // Note: because local time is used, the\n * // result will always be 8 weeks (54 days),\n * // even if DST starts and the period has\n * // only 54*24-1 hours.\n * var result = differenceInWeeks(\n *   new Date(2020, 5, 1),\n *   new Date(2020, 2, 6)\n * )\n * //=> 8\n */\n\nexport default function differenceInWeeks(dirtyDateLeft, dirtyDateRight) {\n  requiredArgs(2, arguments);\n  var diff = differenceInDays(dirtyDateLeft, dirtyDateRight) / 7;\n  return diff > 0 ? Math.floor(diff) : Math.ceil(diff);\n}","import differenceInMilliseconds from '../differenceInMilliseconds/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\n/**\n * @name differenceInSeconds\n * @category Second Helpers\n * @summary Get the number of seconds between the given dates.\n *\n * @description\n * Get the number of seconds between the given dates.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} dateLeft - the later date\n * @param {Date|Number} dateRight - the earlier date\n * @returns {Number} the number of seconds\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // How many seconds are between\n * // 2 July 2014 12:30:07.999 and 2 July 2014 12:30:20.000?\n * var result = differenceInSeconds(\n *   new Date(2014, 6, 2, 12, 30, 20, 0),\n *   new Date(2014, 6, 2, 12, 30, 7, 999)\n * )\n * //=> 12\n */\n\nexport default function differenceInSeconds(dirtyDateLeft, dirtyDateRight) {\n  requiredArgs(2, arguments);\n  var diff = differenceInMilliseconds(dirtyDateLeft, dirtyDateRight) / 1000;\n  return diff > 0 ? Math.floor(diff) : Math.ceil(diff);\n}","import toDate from '../toDate/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\n/**\n * @name getHours\n * @category Hour Helpers\n * @summary Get the hours of the given date.\n *\n * @description\n * Get the hours of the given date.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the given date\n * @returns {Number} the hours\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // Get the hours of 29 February 2012 11:45:00:\n * var result = getHours(new Date(2012, 1, 29, 11, 45))\n * //=> 11\n */\n\nexport default function getHours(dirtyDate) {\n  requiredArgs(1, arguments);\n  var date = toDate(dirtyDate);\n  var hours = date.getHours();\n  return hours;\n}","import toInteger from '../_lib/toInteger/index.js';\nimport toDate from '../toDate/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\n/**\n * @name setHours\n * @category Hour Helpers\n * @summary Set the hours to the given date.\n *\n * @description\n * Set the hours to the given date.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the date to be changed\n * @param {Number} hours - the hours of the new date\n * @returns {Date} the new date with the hours set\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // Set 4 hours to 1 September 2014 11:30:00:\n * var result = setHours(new Date(2014, 8, 1, 11, 30), 4)\n * //=> Mon Sep 01 2014 04:30:00\n */\n\nexport default function setHours(dirtyDate, dirtyHours) {\n  requiredArgs(2, arguments);\n  var date = toDate(dirtyDate);\n  var hours = toInteger(dirtyHours);\n  date.setHours(hours);\n  return date;\n}","import toInteger from '../_lib/toInteger/index.js';\nimport toDate from '../toDate/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\n/**\n * @name setMinutes\n * @category Minute Helpers\n * @summary Set the minutes to the given date.\n *\n * @description\n * Set the minutes to the given date.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the date to be changed\n * @param {Number} minutes - the minutes of the new date\n * @returns {Date} the new date with the minutes set\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // Set 45 minutes to 1 September 2014 11:30:40:\n * var result = setMinutes(new Date(2014, 8, 1, 11, 30, 40), 45)\n * //=> Mon Sep 01 2014 11:45:40\n */\n\nexport default function setMinutes(dirtyDate, dirtyMinutes) {\n  requiredArgs(2, arguments);\n  var date = toDate(dirtyDate);\n  var minutes = toInteger(dirtyMinutes);\n  date.setMinutes(minutes);\n  return date;\n}","import toDate from '../toDate/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\n/**\n * @name getSeconds\n * @category Second Helpers\n * @summary Get the seconds of the given date.\n *\n * @description\n * Get the seconds of the given date.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the given date\n * @returns {Number} the seconds\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // Get the seconds of 29 February 2012 11:45:05.123:\n * var result = getSeconds(new Date(2012, 1, 29, 11, 45, 5, 123))\n * //=> 5\n */\n\nexport default function getSeconds(dirtyDate) {\n  requiredArgs(1, arguments);\n  var date = toDate(dirtyDate);\n  var seconds = date.getSeconds();\n  return seconds;\n}","import toInteger from '../_lib/toInteger/index.js';\nimport toDate from '../toDate/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\n/**\n * @name setSeconds\n * @category Second Helpers\n * @summary Set the seconds to the given date.\n *\n * @description\n * Set the seconds to the given date.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the date to be changed\n * @param {Number} seconds - the seconds of the new date\n * @returns {Date} the new date with the seconds set\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // Set 45 seconds to 1 September 2014 11:30:40:\n * var result = setSeconds(new Date(2014, 8, 1, 11, 30, 40), 45)\n * //=> Mon Sep 01 2014 11:30:45\n */\n\nexport default function setSeconds(dirtyDate, dirtySeconds) {\n  requiredArgs(2, arguments);\n  var date = toDate(dirtyDate);\n  var seconds = toInteger(dirtySeconds);\n  date.setSeconds(seconds);\n  return date;\n}","import startOfDay from '../startOfDay/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\n/**\n * @name isSameDay\n * @category Day Helpers\n * @summary Are the given dates in the same day?\n *\n * @description\n * Are the given dates in the same day?\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} dateLeft - the first date to check\n * @param {Date|Number} dateRight - the second date to check\n * @returns {Boolean} the dates are in the same day\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // Are 4 September 06:00:00 and 4 September 18:00:00 in the same day?\n * var result = isSameDay(new Date(2014, 8, 4, 6, 0), new Date(2014, 8, 4, 18, 0))\n * //=> true\n */\n\nexport default function isSameDay(dirtyDateLeft, dirtyDateRight) {\n  requiredArgs(2, arguments);\n  var dateLeftStartOfDay = startOfDay(dirtyDateLeft);\n  var dateRightStartOfDay = startOfDay(dirtyDateRight);\n  return dateLeftStartOfDay.getTime() === dateRightStartOfDay.getTime();\n}","import toDate from '../toDate/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\n/**\n * @name isSameMonth\n * @category Month Helpers\n * @summary Are the given dates in the same month?\n *\n * @description\n * Are the given dates in the same month?\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} dateLeft - the first date to check\n * @param {Date|Number} dateRight - the second date to check\n * @returns {Boolean} the dates are in the same month\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // Are 2 September 2014 and 25 September 2014 in the same month?\n * var result = isSameMonth(new Date(2014, 8, 2), new Date(2014, 8, 25))\n * //=> true\n */\n\nexport default function isSameMonth(dirtyDateLeft, dirtyDateRight) {\n  requiredArgs(2, arguments);\n  var dateLeft = toDate(dirtyDateLeft);\n  var dateRight = toDate(dirtyDateRight);\n  return dateLeft.getFullYear() === dateRight.getFullYear() && dateLeft.getMonth() === dateRight.getMonth();\n}","import toDate from '../toDate/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\n/**\n * @name isSameYear\n * @category Year Helpers\n * @summary Are the given dates in the same year?\n *\n * @description\n * Are the given dates in the same year?\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} dateLeft - the first date to check\n * @param {Date|Number} dateRight - the second date to check\n * @returns {Boolean} the dates are in the same year\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // Are 2 September 2014 and 25 September 2014 in the same year?\n * var result = isSameYear(new Date(2014, 8, 2), new Date(2014, 8, 25))\n * //=> true\n */\n\nexport default function isSameYear(dirtyDateLeft, dirtyDateRight) {\n  requiredArgs(2, arguments);\n  var dateLeft = toDate(dirtyDateLeft);\n  var dateRight = toDate(dirtyDateRight);\n  return dateLeft.getFullYear() === dateRight.getFullYear();\n}","import startOfHour from '../startOfHour/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\n/**\n * @name isSameHour\n * @category Hour Helpers\n * @summary Are the given dates in the same hour?\n *\n * @description\n * Are the given dates in the same hour?\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} dateLeft - the first date to check\n * @param {Date|Number} dateRight - the second date to check\n * @returns {Boolean} the dates are in the same hour\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // Are 4 September 2014 06:00:00 and 4 September 06:30:00 in the same hour?\n * var result = isSameHour(new Date(2014, 8, 4, 6, 0), new Date(2014, 8, 4, 6, 30))\n * //=> true\n */\n\nexport default function isSameHour(dirtyDateLeft, dirtyDateRight) {\n  requiredArgs(2, arguments);\n  var dateLeftStartOfHour = startOfHour(dirtyDateLeft);\n  var dateRightStartOfHour = startOfHour(dirtyDateRight);\n  return dateLeftStartOfHour.getTime() === dateRightStartOfHour.getTime();\n}","import toDate from '../toDate/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\n/**\n * @name getYear\n * @category Year Helpers\n * @summary Get the year of the given date.\n *\n * @description\n * Get the year of the given date.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the given date\n * @returns {Number} the year\n * @throws {TypeError} 1 argument required\n *\n * @example\n * // Which year is 2 July 2014?\n * var result = getYear(new Date(2014, 6, 2))\n * //=> 2014\n */\n\nexport default function getYear(dirtyDate) {\n  requiredArgs(1, arguments);\n  var date = toDate(dirtyDate);\n  var year = date.getFullYear();\n  return year;\n}","import toInteger from '../_lib/toInteger/index.js';\nimport toDate from '../toDate/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\n/**\n * @name setYear\n * @category Year Helpers\n * @summary Set the year to the given date.\n *\n * @description\n * Set the year to the given date.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the date to be changed\n * @param {Number} year - the year of the new date\n * @returns {Date} the new date with the year set\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // Set year 2013 to 1 September 2014:\n * var result = setYear(new Date(2014, 8, 1), 2013)\n * //=> Sun Sep 01 2013 00:00:00\n */\n\nexport default function setYear(dirtyDate, dirtyYear) {\n  requiredArgs(2, arguments);\n  var date = toDate(dirtyDate);\n  var year = toInteger(dirtyYear); // Check if date is Invalid Date because Date.prototype.setFullYear ignores the value of Invalid Date\n\n  if (isNaN(date)) {\n    return new Date(NaN);\n  }\n\n  date.setFullYear(year);\n  return date;\n}","import toDate from '../toDate/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\n/**\n * @name isEqual\n * @category Common Helpers\n * @summary Are the given dates equal?\n *\n * @description\n * Are the given dates equal?\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} dateLeft - the first date to compare\n * @param {Date|Number} dateRight - the second date to compare\n * @returns {Boolean} the dates are equal\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // Are 2 July 2014 06:30:45.000 and 2 July 2014 06:30:45.500 equal?\n * var result = isEqual(\n *   new Date(2014, 6, 2, 6, 30, 45, 0),\n *   new Date(2014, 6, 2, 6, 30, 45, 500)\n * )\n * //=> false\n */\n\nexport default function isEqual(dirtyLeftDate, dirtyRightDate) {\n  requiredArgs(2, arguments);\n  var dateLeft = toDate(dirtyLeftDate);\n  var dateRight = toDate(dirtyRightDate);\n  return dateLeft.getTime() === dateRight.getTime();\n}","import toDate from '../toDate/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\n/**\n * @name isWithinInterval\n * @category Interval Helpers\n * @summary Is the given date within the interval?\n *\n * @description\n * Is the given date within the interval? (Including start and end.)\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * - The function was renamed from `isWithinRange` to `isWithinInterval`.\n *   This change was made to mirror the use of the word \"interval\" in standard ISO 8601:2004 terminology:\n *\n *   ```\n *   2.1.3\n *   time interval\n *   part of the time axis limited by two instants\n *   ```\n *\n *   Also, this function now accepts an object with `start` and `end` properties\n *   instead of two arguments as an interval.\n *   This function now throws `RangeError` if the start of the interval is after its end\n *   or if any date in the interval is `Invalid Date`.\n *\n *   ```javascript\n *   // Before v2.0.0\n *\n *   isWithinRange(\n *     new Date(2014, 0, 3),\n *     new Date(2014, 0, 1), new Date(2014, 0, 7)\n *   )\n *\n *   // v2.0.0 onward\n *\n *   isWithinInterval(\n *     new Date(2014, 0, 3),\n *     { start: new Date(2014, 0, 1), end: new Date(2014, 0, 7) }\n *   )\n *   ```\n *\n * @param {Date|Number} date - the date to check\n * @param {Interval} interval - the interval to check\n * @returns {Boolean} the date is within the interval\n * @throws {TypeError} 2 arguments required\n * @throws {RangeError} The start of an interval cannot be after its end\n * @throws {RangeError} Date in interval cannot be `Invalid Date`\n *\n * @example\n * // For the date within the interval:\n * isWithinInterval(new Date(2014, 0, 3), {\n *   start: new Date(2014, 0, 1),\n *   end: new Date(2014, 0, 7)\n * })\n * //=> true\n *\n * @example\n * // For the date outside of the interval:\n * isWithinInterval(new Date(2014, 0, 10), {\n *   start: new Date(2014, 0, 1),\n *   end: new Date(2014, 0, 7)\n * })\n * //=> false\n *\n * @example\n * // For date equal to interval start:\n * isWithinInterval(date, { start, end: date }) // => true\n *\n * @example\n * // For date equal to interval end:\n * isWithinInterval(date, { start: date, end }) // => true\n */\n\nexport default function isWithinInterval(dirtyDate, dirtyInterval) {\n  requiredArgs(2, arguments);\n  var interval = dirtyInterval || {};\n  var time = toDate(dirtyDate).getTime();\n  var startTime = toDate(interval.start).getTime();\n  var endTime = toDate(interval.end).getTime(); // Throw an exception if start date is after end date or if any date is `Invalid Date`\n\n  if (!(startTime <= endTime)) {\n    throw new RangeError('Invalid interval');\n  }\n\n  return time >= startTime && time <= endTime;\n}","import toInteger from '../_lib/toInteger/index.js';\nimport toDate from '../toDate/index.js';\nimport getDaysInMonth from '../getDaysInMonth/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\n/**\n * @name setMonth\n * @category Month Helpers\n * @summary Set the month to the given date.\n *\n * @description\n * Set the month to the given date.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * @param {Date|Number} date - the date to be changed\n * @param {Number} month - the month of the new date\n * @returns {Date} the new date with the month set\n * @throws {TypeError} 2 arguments required\n *\n * @example\n * // Set February to 1 September 2014:\n * var result = setMonth(new Date(2014, 8, 1), 1)\n * //=> Sat Feb 01 2014 00:00:00\n */\n\nexport default function setMonth(dirtyDate, dirtyMonth) {\n  requiredArgs(2, arguments);\n  var date = toDate(dirtyDate);\n  var month = toInteger(dirtyMonth);\n  var year = date.getFullYear();\n  var day = date.getDate();\n  var dateWithDesiredMonth = new Date(0);\n  dateWithDesiredMonth.setFullYear(year, month, 15);\n  dateWithDesiredMonth.setHours(0, 0, 0, 0);\n  var daysInMonth = getDaysInMonth(dateWithDesiredMonth); // Set the last day of the new month\n  // if the original date was the last day of the longer month\n\n  date.setMonth(month, Math.min(day, daysInMonth));\n  return date;\n}","import toDate from '../toDate/index.js';\nimport requiredArgs from '../_lib/requiredArgs/index.js';\n/**\n * @name eachDayOfInterval\n * @category Interval Helpers\n * @summary Return the array of dates within the specified time interval.\n *\n * @description\n * Return the array of dates within the specified time interval.\n *\n * ### v2.0.0 breaking changes:\n *\n * - [Changes that are common for the whole library](https://github.com/date-fns/date-fns/blob/master/docs/upgradeGuide.md#Common-Changes).\n *\n * - The function was renamed from `eachDay` to `eachDayOfInterval`.\n *   This change was made to mirror the use of the word \"interval\" in standard ISO 8601:2004 terminology:\n *\n *   ```\n *   2.1.3\n *   time interval\n *   part of the time axis limited by two instants\n *   ```\n *\n *   Also, this function now accepts an object with `start` and `end` properties\n *   instead of two arguments as an interval.\n *   This function now throws `RangeError` if the start of the interval is after its end\n *   or if any date in the interval is `Invalid Date`.\n *\n *   ```javascript\n *   // Before v2.0.0\n *\n *   eachDay(new Date(2014, 0, 10), new Date(2014, 0, 20))\n *\n *   // v2.0.0 onward\n *\n *   eachDayOfInterval(\n *     { start: new Date(2014, 0, 10), end: new Date(2014, 0, 20) }\n *   )\n *   ```\n *\n * @param {Interval} interval - the interval. See [Interval]{@link docs/types/Interval}\n * @param {Object} [options] - an object with options.\n * @param {Number} [options.step=1] - the step to increment by. The value should be more than 1.\n * @returns {Date[]} the array with starts of days from the day of the interval start to the day of the interval end\n * @throws {TypeError} 1 argument required\n * @throws {RangeError} `options.step` must be a number greater than 1\n * @throws {RangeError} The start of an interval cannot be after its end\n * @throws {RangeError} Date in interval cannot be `Invalid Date`\n *\n * @example\n * // Each day between 6 October 2014 and 10 October 2014:\n * var result = eachDayOfInterval({\n *   start: new Date(2014, 9, 6),\n *   end: new Date(2014, 9, 10)\n * })\n * //=> [\n * //   Mon Oct 06 2014 00:00:00,\n * //   Tue Oct 07 2014 00:00:00,\n * //   Wed Oct 08 2014 00:00:00,\n * //   Thu Oct 09 2014 00:00:00,\n * //   Fri Oct 10 2014 00:00:00\n * // ]\n */\n\nexport default function eachDayOfInterval(dirtyInterval, options) {\n  requiredArgs(1, arguments);\n  var interval = dirtyInterval || {};\n  var startDate = toDate(interval.start);\n  var endDate = toDate(interval.end);\n  var endTime = endDate.getTime(); // Throw an exception if start date is after end date or if any date is `Invalid Date`\n\n  if (!(startDate.getTime() <= endTime)) {\n    throw new RangeError('Invalid interval');\n  }\n\n  var dates = [];\n  var currentDate = startDate;\n  currentDate.setHours(0, 0, 0, 0);\n  var step = options && 'step' in options ? Number(options.step) : 1;\n  if (step < 1 || isNaN(step)) throw new RangeError('`options.step` must be a number greater than 1');\n\n  while (currentDate.getTime() <= endTime) {\n    dates.push(toDate(currentDate));\n    currentDate.setDate(currentDate.getDate() + step);\n    currentDate.setHours(0, 0, 0, 0);\n  }\n\n  return dates;\n}","import React from 'react';\r\nimport { Widgets, Operators } from 'react-awesome-query-builder';\r\nimport moment from 'moment';\r\nimport en_US from 'antd/lib/locale-provider/en_US';\r\nimport ru_RU from 'antd/lib/locale-provider/ru_RU';\r\n\r\nconst {\r\n    TextWidget,\r\n    NumberWidget,\r\n    SliderWidget,\r\n    RangeWidget,\r\n    SelectWidget,\r\n    MultiSelectWidget,\r\n    DateWidget,\r\n    BooleanWidget,\r\n    TimeWidget,\r\n    DateTimeWidget,\r\n    ValueFieldWidget\r\n} = Widgets;\r\n\r\nconst { ProximityOperator } = Operators;\r\n\r\nexport default {\r\n    conjunctions: {\r\n        AND: {\r\n            label: 'And',\r\n            mongoConj: '$and',\r\n            reversedConj: 'OR',\r\n            formatConj: (children, conj, not, isForDisplay) => {\r\n                return children.size > 1 ?\r\n                    (not ? \"NOT \" : \"\") + '(' + children.join(' ' + (isForDisplay ? \"AND\" : \"&&\") + ' ') + ')'\r\n                    : (not ? \"NOT (\" : \"\") + children.first() + (not ? \")\" : \"\");\r\n            },\r\n        },\r\n        OR: {\r\n            label: 'Or',\r\n            mongoConj: '$or',\r\n            reversedConj: 'AND',\r\n            formatConj: (children, conj, not, isForDisplay) => {\r\n                return children.size > 1 ?\r\n                    (not ? \"NOT \" : \"\") + '(' + children.join(' ' + (isForDisplay ? \"OR\" : \"||\") + ' ') + ')'\r\n                    : (not ? \"NOT (\" : \"\") + children.first() + (not ? \")\" : \"\");\r\n            },\r\n        },\r\n    },\r\n    fields: {\r\n        customer: {\r\n            label: 'Customer',\r\n            type: '!struct',\r\n            subfields: {\r\n                customercode: {\r\n                    label: 'Customer Code',\r\n                    type: 'text',\r\n                    // tableName: 't1',\r\n                },\r\n                customername: {\r\n                    label: 'Customer Name',\r\n                    type: 'text',\r\n                },\r\n                customerbirthdate: {\r\n                    label: 'Customer Birth Date',\r\n                    type: 'date',\r\n                },\r\n                customerbirthplace: {\r\n                    label: 'Customer Birth Place',\r\n                    type: 'text',\r\n                },\r\n            }\r\n        },\r\n        deposit: {\r\n            label: 'Deposit Accounts',\r\n            type: '!struct',\r\n            subfields: {\r\n                accountnumber: {\r\n                    label: 'Account Number',\r\n                    type: 'text',\r\n                    tableName: 't1',\r\n                },\r\n                customername: {\r\n                    label: 'Account Name',\r\n                    type: 'text',\r\n                },\r\n                customerbirthdate: {\r\n                    label: 'Account Open Date',\r\n                    type: 'date',\r\n                },\r\n                customerbirthplace: {\r\n                    label: 'Account Balance',\r\n                    type: 'text',\r\n                },\r\n            }\r\n        },\r\n    },\r\n    types: {\r\n        text: {\r\n            widgets: {\r\n                text: {\r\n                    defaultOperator: 'is_empty',\r\n                    operators: [\r\n                        'equal',\r\n                        'not_equal',\r\n                        \"is_empty\",\r\n                        \"is_not_empty\",\r\n                        'proximity'\r\n                    ],\r\n                    widgetProps: {\r\n                        formatValue: (val, fieldDef, wgtDef, isForDisplay) => (JSON.stringify(val)),\r\n                        valueLabel: \"Text\",\r\n                        valuePlaceholder: \"Enter text\",\r\n                    }\r\n                },\r\n                field: {\r\n                    operators: [\r\n                        'equal',\r\n                        'not_equal',\r\n                        //note that unary ops will be excluded anyway, see getWidgetsForFieldOp()\r\n                        //\"is_empty\",\r\n                        //\"is_not_empty\",\r\n                        'proximity'\r\n                    ],\r\n                }\r\n            },\r\n        },\r\n        number: {\r\n            mainWidget: \"number\",\r\n            valueSources: ['value', 'field'],\r\n            defaultOperator: 'equal',\r\n            widgets: {\r\n                number: {\r\n                    operators: [\r\n                        \"equal\",\r\n                        \"not_equal\",\r\n                        \"less\",\r\n                        \"less_or_equal\",\r\n                        \"greater\",\r\n                        \"greater_or_equal\",\r\n                        \"between\",\r\n                        \"not_between\",\r\n                        \"is_empty\",\r\n                        \"is_not_empty\",\r\n                    ],\r\n                    widgetProps: {\r\n                        valueLabel: \"Number2\",\r\n                        valuePlaceholder: \"Enter number2\",\r\n                    }\r\n                },\r\n                slider: {\r\n                    operators: [\r\n                        \"equal\",\r\n                        \"not_equal\",\r\n                        \"less\",\r\n                        \"less_or_equal\",\r\n                        \"greater\",\r\n                        \"greater_or_equal\",\r\n                    ],\r\n                    widgetProps: {\r\n                        valueLabel: \"Slider\",\r\n                        valuePlaceholder: \"Move slider\",\r\n                        customProps: {\r\n                            width: '200px'\r\n                        }\r\n                    }\r\n                },\r\n                rangeslider: {\r\n                    operators: [\r\n                        \"range_between\",\r\n                        \"range_not_between\",\r\n                    ],\r\n                    widgetProps: {\r\n                        valueLabel: \"Range\",\r\n                        valuePlaceholder: \"Select range\",\r\n                        customProps: {\r\n                            width: '300px'\r\n                        }\r\n                    }\r\n                }\r\n            },\r\n        },\r\n        date: {\r\n            widgets: {\r\n                date: {\r\n                    operators: [\r\n                        \"equal\",\r\n                        \"not_equal\",\r\n                        \"less\",\r\n                        \"less_or_equal\",\r\n                        \"greater\",\r\n                        \"greater_or_equal\",\r\n                        \"between\",\r\n                        \"not_between\",\r\n                        \"is_empty\",\r\n                        \"is_not_empty\",\r\n                    ]\r\n                }\r\n            },\r\n        },\r\n        time: {\r\n            widgets: {\r\n                time: {\r\n                    operators: [\r\n                        \"equal\",\r\n                        \"not_equal\",\r\n                        \"less\",\r\n                        \"less_or_equal\",\r\n                        \"greater\",\r\n                        \"greater_or_equal\",\r\n                        \"between\",\r\n                        \"not_between\",\r\n                        \"is_empty\",\r\n                        \"is_not_empty\",\r\n                    ]\r\n                }\r\n            },\r\n        },\r\n        datetime: {\r\n            widgets: {\r\n                datetime: {\r\n                    operators: [\r\n                        \"equal\",\r\n                        \"not_equal\",\r\n                        \"less\",\r\n                        \"less_or_equal\",\r\n                        \"greater\",\r\n                        \"greater_or_equal\",\r\n                        \"between\",\r\n                        \"not_between\",\r\n                        \"is_empty\",\r\n                        \"is_not_empty\",\r\n                    ],\r\n                    opProps: {\r\n                        between: {\r\n                            valueLabels: [\r\n                                { label: 'Date from', placeholder: 'Enrer datetime from' },\r\n                                { label: 'Date to', placeholder: 'Enter datetime to' },\r\n                            ],\r\n                        },\r\n                    },\r\n                    widgetProps: {\r\n                        timeFormat: 'HH:mm',\r\n                        dateFormat: 'YYYY-MM-DD',\r\n                        valueFormat: 'YYYY-MM-DD HH:mm',\r\n                    }\r\n                }\r\n            },\r\n        },\r\n        select: {\r\n            mainWidget: \"select\",\r\n            widgets: {\r\n                select: {\r\n                    operators: [\r\n                        'select_equals',\r\n                        'select_not_equals'\r\n                    ],\r\n                    widgetProps: {\r\n                        customProps: {\r\n                            showSearch: true\r\n                        }\r\n                    },\r\n                },\r\n                multiselect: {\r\n                    operators: [\r\n                        'select_any_in',\r\n                        'select_not_any_in'\r\n                    ],\r\n                    widgetProps: {\r\n                    },\r\n                },\r\n            },\r\n        },\r\n        multiselect: {\r\n            widgets: {\r\n                multiselect: {\r\n                    operators: [\r\n                        'multiselect_equals',\r\n                        'multiselect_not_equals',\r\n                    ]\r\n                }\r\n            },\r\n        },\r\n        boolean: {\r\n            widgets: {\r\n                boolean: {\r\n                    operators: [\r\n                        \"equal\",\r\n                    ],\r\n                    widgetProps: {\r\n                        //you can enable this if you don't use fields as value sources\r\n                        //hideOperator: true,\r\n                        //operatorInlineLabel: \"is\",\r\n                    }\r\n                },\r\n                field: {\r\n                    operators: [\r\n                        \"equal\",\r\n                        \"not_equal\",\r\n                    ],\r\n                }\r\n            },\r\n        },\r\n    },\r\n    operators: {\r\n        equal: {\r\n            label: '==',\r\n            labelForFormat: '=',\r\n            reversedOp: 'not_equal',\r\n            mongoFormatOp: (field, op, value) => ({ [field]: { '$eq': value } }),\r\n        },\r\n        not_equal: {\r\n            label: '!=',\r\n            labelForFormat: '!=',\r\n            reversedOp: 'equal',\r\n            mongoFormatOp: (field, op, value) => ({ [field]: { '$ne': value } }),\r\n        },\r\n        less: {\r\n            label: '<',\r\n            labelForFormat: '<',\r\n            reversedOp: 'greater_or_equal',\r\n            mongoFormatOp: (field, op, value) => ({ [field]: { '$lt': value } }),\r\n        },\r\n        less_or_equal: {\r\n            label: '<=',\r\n            labelForFormat: '<=',\r\n            reversedOp: 'greater',\r\n            mongoFormatOp: (field, op, value) => ({ [field]: { '$lte': value } }),\r\n        },\r\n        greater: {\r\n            label: '>',\r\n            labelForFormat: '>',\r\n            reversedOp: 'less_or_equal',\r\n            mongoFormatOp: (field, op, value) => ({ [field]: { '$gt': value } }),\r\n        },\r\n        greater_or_equal: {\r\n            label: '>=',\r\n            labelForFormat: '>=',\r\n            reversedOp: 'less',\r\n            mongoFormatOp: (field, op, value) => ({ [field]: { '$gte': value } }),\r\n        },\r\n        between: {\r\n            label: 'Between',\r\n            labelForFormat: 'BETWEEN',\r\n            cardinality: 2,\r\n            formatOp: (field, op, values, valueSrcs, valueTypes, opDef, operatorOptions, isForDisplay) => {\r\n                let valFrom = values.first();\r\n                let valTo = values.get(1);\r\n                if (isForDisplay)\r\n                    return `${field} >= ${valFrom} AND ${field} <= ${valTo}`;\r\n                else\r\n                    return `${field} >= ${valFrom} && ${field} <= ${valTo}`;\r\n            },\r\n            mongoFormatOp: (field, op, values) => ({ [field]: { '$gte': values[0], '$lte': values[1] } }),\r\n            valueLabels: [\r\n                'Value from',\r\n                'Value to'\r\n            ],\r\n            textSeparators: [\r\n                null,\r\n                'and'\r\n            ],\r\n            reversedOp: 'not_between',\r\n        },\r\n        not_between: {\r\n            label: 'Not between',\r\n            labelForFormat: 'NOT BETWEEN',\r\n            cardinality: 2,\r\n            mongoFormatOp: (field, op, values) => ({ [field]: { '$not': { '$gte': values[0], '$lte': values[1] } } }),\r\n            valueLabels: [\r\n                'Value from',\r\n                'Value to'\r\n            ],\r\n            textSeparators: [\r\n                null,\r\n                'and'\r\n            ],\r\n            reversedOp: 'between',\r\n        },\r\n        range_between: {\r\n            label: 'Between',\r\n            labelForFormat: 'BETWEEN',\r\n            cardinality: 2,\r\n            isSpecialRange: true, // to show 1 range widget instead of 2\r\n            formatOp: (field, op, values, valueSrcs, valueTypes, opDef, operatorOptions, isForDisplay) => {\r\n                let valFrom = values.first();\r\n                let valTo = values.get(1);\r\n                if (isForDisplay)\r\n                    return `${field} >= ${valFrom} AND ${field} <= ${valTo}`;\r\n                else\r\n                    return `${field} >= ${valFrom} && ${field} <= ${valTo}`;\r\n            },\r\n            mongoFormatOp: (field, op, values) => ({ [field]: { '$gte': values[0], '$lte': values[1] } }),\r\n            valueLabels: [\r\n                'Value from',\r\n                'Value to'\r\n            ],\r\n            textSeparators: [\r\n                null,\r\n                'and'\r\n            ],\r\n            reversedOp: 'range_not_between',\r\n        },\r\n        range_not_between: {\r\n            label: 'Not between',\r\n            labelForFormat: 'NOT BETWEEN',\r\n            cardinality: 2,\r\n            isSpecialRange: true, // to show 1 range widget instead of 2\r\n            mongoFormatOp: (field, op, values) => ({ [field]: { '$not': { '$gte': values[0], '$lte': values[1] } } }),\r\n            valueLabels: [\r\n                'Value from',\r\n                'Value to'\r\n            ],\r\n            textSeparators: [\r\n                null,\r\n                'and'\r\n            ],\r\n            reversedOp: 'range_between',\r\n        },\r\n        is_empty: {\r\n            isUnary: true,\r\n            label: 'Is Empty',\r\n            labelForFormat: 'IS EMPTY',\r\n            cardinality: 0,\r\n            reversedOp: 'is_not_empty',\r\n            formatOp: (field, op, value, valueSrc, valueType, opDef, operatorOptions, isForDisplay) => {\r\n                return isForDisplay ? `${field} IS EMPTY` : `!${field}`;\r\n            },\r\n            mongoFormatOp: (field, op) => ({ [field]: { '$exists': false } }),\r\n        },\r\n        is_not_empty: {\r\n            isUnary: true,\r\n            label: 'Is not empty',\r\n            labelForFormat: 'IS NOT EMPTY',\r\n            cardinality: 0,\r\n            reversedOp: 'is_empty',\r\n            formatOp: (field, op, value, valueSrc, valueType, opDef, operatorOptions, isForDisplay) => {\r\n                return isForDisplay ? `${field} IS NOT EMPTY` : `!!${field}`;\r\n            },\r\n            mongoFormatOp: (field, op) => ({ [field]: { '$exists': true } }),\r\n        },\r\n        select_equals: {\r\n            label: '==',\r\n            labelForFormat: '==',\r\n            formatOp: (field, op, value, valueSrc, valueType, opDef, operatorOptions, isForDisplay) => {\r\n                return `${field} == ${value}`;\r\n            },\r\n            mongoFormatOp: (field, op, value) => ({ [field]: { '$eq': value } }),\r\n            reversedOp: 'select_not_equals',\r\n        },\r\n        select_not_equals: {\r\n            label: '!=',\r\n            labelForFormat: '!=',\r\n            formatOp: (field, op, value, valueSrc, valueType, opDef, operatorOptions, isForDisplay) => {\r\n                return `${field} != ${value}`;\r\n            },\r\n            mongoFormatOp: (field, op, value) => ({ [field]: { '$ne': value } }),\r\n            reversedOp: 'select_equals',\r\n        },\r\n        select_any_in: {\r\n            label: 'Any in',\r\n            labelForFormat: 'IN',\r\n            formatOp: (field, op, values, valueSrc, valueType, opDef, operatorOptions, isForDisplay) => {\r\n                if (valueSrc == 'value')\r\n                    return `${field} IN (${values.join(', ')})`;\r\n                else\r\n                    return `${field} IN (${values})`;\r\n            },\r\n            mongoFormatOp: (field, op, values) => ({ [field]: { '$in': values } }),\r\n            reversedOp: 'select_not_any_in',\r\n        },\r\n        select_not_any_in: {\r\n            label: 'Not in',\r\n            labelForFormat: 'NOT IN',\r\n            formatOp: (field, op, values, valueSrc, valueType, opDef, operatorOptions, isForDisplay) => {\r\n                if (valueSrc == 'value')\r\n                    return `${field} NOT IN (${values.join(', ')})`;\r\n                else\r\n                    return `${field} NOT IN (${values})`;\r\n            },\r\n            mongoFormatOp: (field, op, values) => ({ [field]: { '$nin': values } }),\r\n            reversedOp: 'select_any_in',\r\n        },\r\n        multiselect_equals: {\r\n            label: 'Equals',\r\n            labelForFormat: '==',\r\n            formatOp: (field, op, values, valueSrc, valueType, opDef, operatorOptions, isForDisplay) => {\r\n                if (valueSrc == 'value')\r\n                    return `${field} == [${values.join(', ')}]`;\r\n                else\r\n                    return `${field} == ${values}`;\r\n            },\r\n            mongoFormatOp: (field, op, values) => ({ [field]: { '$eq': values } }),\r\n            reversedOp: 'multiselect_not_equals',\r\n        },\r\n        multiselect_not_equals: {\r\n            label: 'Not equals',\r\n            labelForFormat: '!=',\r\n            formatOp: (field, op, values, valueSrc, valueType, opDef, operatorOptions, isForDisplay) => {\r\n                if (valueSrc == 'value')\r\n                    return `${field} != [${values.join(', ')}]`;\r\n                else\r\n                    return `${field} != ${values}`;\r\n            },\r\n            mongoFormatOp: (field, op, values) => ({ [field]: { '$ne': values } }),\r\n            reversedOp: 'multiselect_equals',\r\n        },\r\n        proximity: {\r\n            label: 'Proximity search',\r\n            cardinality: 2,\r\n            valueLabels: [\r\n                { label: 'Word 1', placeholder: 'Enter first word' },\r\n                'Word 2'\r\n            ],\r\n            textSeparators: [\r\n                //'Word 1',\r\n                //'Word 2'\r\n            ],\r\n            formatOp: (field, op, values, valueSrc, valueType, opDef, operatorOptions, isForDisplay) => {\r\n                let val1 = values.first();\r\n                let val2 = values.get(1);\r\n                return `${field} ${val1} NEAR/${operatorOptions.get('proximity')} ${val2}`;\r\n            },\r\n            mongoFormatOp: (field, op, values) => (undefined),\r\n            options: {\r\n                optionLabel: \"Near\",\r\n                optionTextBefore: \"Near\",\r\n                optionPlaceholder: \"Select words between\",\r\n                factory: (props) => <ProximityOperator {...props} />,\r\n                defaults: {\r\n                    proximity: 2\r\n                }\r\n            }\r\n        },\r\n    },\r\n    widgets: {\r\n        text: {\r\n            type: \"text\",\r\n            valueSrc: 'value',\r\n            factory: (props) => <TextWidget {...props} />,\r\n            formatValue: (val, fieldDef, wgtDef, isForDisplay) => {\r\n                return isForDisplay ? '\"' + val + '\"' : JSON.stringify(val);\r\n            },\r\n            validateValue: (val, fieldDef) => {\r\n                return (val != \"test\");\r\n            },\r\n        },\r\n        number: {\r\n            type: \"number\",\r\n            valueSrc: 'value',\r\n            factory: (props) => <NumberWidget {...props} />,\r\n            valueLabel: \"Number\",\r\n            valuePlaceholder: \"Enter number\",\r\n            formatValue: (val, fieldDef, wgtDef, isForDisplay) => {\r\n                return isForDisplay ? val : JSON.stringify(val);\r\n            },\r\n            //mongoFormatValue: (val, fieldDef, wgtDef) => (Number(val)),\r\n        },\r\n        slider: {\r\n            type: \"number\",\r\n            valueSrc: 'value',\r\n            factory: (props) => <SliderWidget {...props} />,\r\n            valueLabel: \"Slider\",\r\n            valuePlaceholder: \"Move Slider\",\r\n            formatValue: (val, fieldDef, wgtDef, isForDisplay) => {\r\n                return isForDisplay ? val : JSON.stringify(val);\r\n            },\r\n            customProps: {\r\n                width: '300px'\r\n            }\r\n        },\r\n        rangeslider: {\r\n            type: \"number\",\r\n            valueSrc: 'value',\r\n            factory: (props) => <RangeWidget {...props} />,\r\n            valueLabel: \"Range\",\r\n            valuePlaceholder: \"Select Range\",\r\n            formatValue: (val, fieldDef, wgtDef, isForDisplay) => {\r\n                return isForDisplay ? val : JSON.stringify(val);\r\n            },\r\n            customProps: {\r\n                width: '300px'\r\n            },\r\n            singleWidget: 'slider',\r\n            valueLabels: [\r\n                'Value from',\r\n                'Value to'\r\n            ],\r\n            textSeparators: [\r\n                null,\r\n                'and'\r\n            ],\r\n        },\r\n        select: {\r\n            type: \"select\",\r\n            valueSrc: 'value',\r\n            factory: (props) => <SelectWidget {...props} />,\r\n            formatValue: (val, fieldDef, wgtDef, isForDisplay) => {\r\n                let valLabel = fieldDef.listValues[val];\r\n                return isForDisplay ? '\"' + valLabel + '\"' : JSON.stringify(val);\r\n            },\r\n        },\r\n        multiselect: {\r\n            type: \"multiselect\",\r\n            valueSrc: 'value',\r\n            factory: (props) => <MultiSelectWidget {...props} />,\r\n            formatValue: (vals, fieldDef, wgtDef, isForDisplay) => {\r\n                let valsLabels = vals.map(v => fieldDef.listValues[v]);\r\n                return isForDisplay ? valsLabels.map(v => '\"' + v + '\"') : vals.map(v => JSON.stringify(v));\r\n            },\r\n        },\r\n        date: {\r\n            type: \"date\",\r\n            valueSrc: 'value',\r\n            factory: (props) => <DateWidget {...props} />,\r\n            dateFormat: 'DD.MM.YYYY',\r\n            valueFormat: 'YYYY-MM-DD',\r\n            formatValue: (val, fieldDef, wgtDef, isForDisplay) => {\r\n                let dateVal = moment(val, wgtDef.valueFormat);\r\n                return isForDisplay ? '\"' + dateVal.format(wgtDef.dateFormat) + '\"' : JSON.stringify(val);\r\n            },\r\n        },\r\n        time: {\r\n            type: \"time\",\r\n            valueSrc: 'value',\r\n            factory: (props) => <TimeWidget {...props} />,\r\n            timeFormat: 'HH:mm',\r\n            valueFormat: 'HH:mm:ss',\r\n            formatValue: (val, fieldDef, wgtDef, isForDisplay) => {\r\n                let dateVal = moment(val, wgtDef.valueFormat);\r\n                return isForDisplay ? '\"' + dateVal.format(wgtDef.timeFormat) + '\"' : JSON.stringify(val);\r\n            },\r\n        },\r\n        datetime: {\r\n            type: \"datetime\",\r\n            valueSrc: 'value',\r\n            factory: (props) => <DateTimeWidget {...props} />,\r\n            timeFormat: 'HH:mm',\r\n            dateFormat: 'DD.MM.YYYY',\r\n            valueFormat: 'YYYY-MM-DD HH:mm:ss',\r\n            formatValue: (val, fieldDef, wgtDef, isForDisplay) => {\r\n                let dateVal = moment(val, wgtDef.valueFormat);\r\n                return isForDisplay ? '\"' + dateVal.format(wgtDef.dateFormat + ' ' + wgtDef.timeFormat) + '\"' : JSON.stringify(val);\r\n            },\r\n        },\r\n        boolean: {\r\n            type: \"boolean\",\r\n            valueSrc: 'value',\r\n            factory: (props) => <BooleanWidget {...props} />,\r\n            labelYes: \"Yes\",\r\n            labelNo: \"No \",\r\n            formatValue: (val, fieldDef, wgtDef, isForDisplay) => {\r\n                return isForDisplay ? (val ? \"Yes\" : \"No\") : JSON.stringify(!!val);\r\n            },\r\n            defaultValue: false,\r\n        },\r\n        field: {\r\n            valueSrc: 'field',\r\n            factory: (props) => <ValueFieldWidget {...props} />,\r\n            formatValue: (val, fieldDef, wgtDef, isForDisplay, valFieldDef) => {\r\n                return isForDisplay ? (valFieldDef.label || val) : val;\r\n            },\r\n            valueLabel: \"Field to compare\",\r\n            valuePlaceholder: \"Select field to compare\",\r\n            customProps: {\r\n                showSearch: true\r\n            }\r\n        }\r\n    },\r\n    settings: {\r\n        locale: {\r\n            short: 'en',\r\n            full: 'en-US',\r\n            antd: en_US,\r\n        },\r\n        maxLabelsLength: 50,\r\n        hideConjForOne: true,\r\n        renderSize: 'small',\r\n        renderConjsAsRadios: false,\r\n        renderFieldAndOpAsDropdown: false,\r\n        customFieldSelectProps: {\r\n            showSearch: true\r\n        },\r\n        groupActionsPosition: 'topRight', // oneOf [topLeft, topCenter, topRight, bottomLeft, bottomCenter, bottomRight]\r\n        setOpOnChangeField: ['keep', 'default'], // 'default' (default if present), 'keep' (keep prev from last field), 'first', 'none'\r\n        clearValueOnChangeField: false, //false - if prev & next fields have same type (widget), keep\r\n        clearValueOnChangeOp: false,\r\n        setDefaultFieldAndOp: false,\r\n        maxNesting: 10,\r\n        fieldSeparator: '.',\r\n        fieldSeparatorDisplay: '->',\r\n        showLabels: false,\r\n        valueLabel: \"Value\",\r\n        valuePlaceholder: \"Value\",\r\n        fieldLabel: \"Field\",\r\n        operatorLabel: \"Operator\",\r\n        fieldPlaceholder: \"Select field\",\r\n        operatorPlaceholder: \"Select operator\",\r\n        deleteLabel: null,\r\n        addGroupLabel: \"Add group\",\r\n        addRuleLabel: \"Add rule\",\r\n        readonlyMode: false,\r\n        notLabel: \"Not\",\r\n        removeRuleConfirmOptions: {\r\n            title: 'Are you sure delete this rule?',\r\n            okText: 'Yes',\r\n            okType: 'danger',\r\n        },\r\n        removeGroupConfirmOptions: {\r\n            title: 'Are you sure delete this group?',\r\n            okText: 'Yes',\r\n            okType: 'danger',\r\n        },\r\n        showNot: true,\r\n        delGroupLabel: null,\r\n        canLeaveEmptyGroup: true, //after deletion\r\n        formatReverse: (q, operator, reversedOp, operatorDefinition, revOperatorDefinition, isForDisplay) => {\r\n            if (isForDisplay)\r\n                return \"NOT(\" + q + \")\";\r\n            else\r\n                return \"!(\" + q + \")\";\r\n        },\r\n        formatField: (field, parts, label2, fieldDefinition, config, isForDisplay) => {\r\n            if (isForDisplay)\r\n                return label2;\r\n            else\r\n                return field;\r\n        },\r\n        valueSourcesInfo: {\r\n            value: {\r\n                label: \"Value\"\r\n            },\r\n            field: {\r\n                label: \"Field\",\r\n                widget: \"field\",\r\n            }\r\n        },\r\n        valueSourcesPopupTitle: \"Select value source\",\r\n        canReorder: true,\r\n        canCompareFieldWithField: (leftField, leftFieldConfig, rightField, rightFieldConfig) => {\r\n            //for type == 'select'/'multiselect' you can check listValues\r\n            return true;\r\n        },\r\n    }\r\n};","import React, {Component} from 'react';\r\nimport {Query, Builder, BasicConfig, Utils as QbUtils} from 'react-awesome-query-builder';\r\nimport API from './../../api/api';\r\nimport { Button,Col, Modal, ModalBody,  Form,\r\n  FormGroup,\r\n FormFeedback, \r\n  Card,\r\n  CardBody,\r\n  CardFooter,\r\n  CardHeader,Label,Input,\r\n  } from 'reactstrap'\r\n// For AntDesign widgets only:\r\nimport AntdConfig from 'react-awesome-query-builder/lib/config/antd';\r\nimport 'react-awesome-query-builder/css/antd.less'; // or import \"antd/dist/antd.css\";\r\n// For Material-UI widgets only:\r\nimport MaterialConfig from 'react-awesome-query-builder/lib/config/material';\r\n// Choose your skin (ant/material/vanilla):\r\nimport ConfigM from './Kerno/configKey'\r\n \r\nimport 'react-awesome-query-builder/lib/css/styles.css';\r\nimport 'react-awesome-query-builder/lib/css/compact_styles.css'; //optional, for more compact styles\r\n\r\nconst InitialConfig = MaterialConfig; // or MaterialConfig or BasicConfig\r\n// You need to provide your own config. See below 'Config format'\r\n// const config = {\r\n//   ...InitialConfig,\r\n//   fields: {\r\n//     qty: {\r\n//         label: 'Qty',\r\n//         type: 'number',\r\n//         fieldSettings: {\r\n//             min: 0,\r\n//         },\r\n//         valueSources: ['value'],\r\n//         preferWidgets: ['number'],\r\n//     },\r\n//     price: {\r\n//         label: 'Price',\r\n//         type: 'number',\r\n//         valueSources: ['value'],\r\n//         fieldSettings: {\r\n//             min: 10,\r\n//             max: 100,\r\n//         },\r\n//         preferWidgets: ['slider', 'rangeslider'],\r\n//     },\r\n//     color: {\r\n//         label: 'Color',\r\n//         type: 'select',\r\n//         valueSources: ['value'],\r\n//         fieldSettings: {\r\n//           listValues: [\r\n//             { value: 'yellow', title: 'Yellow' },\r\n//             { value: 'green', title: 'Green' },\r\n//             { value: 'orange', title: 'Orange' }\r\n//           ],\r\n//         }\r\n//     },\r\n//     is_promotion: {\r\n//         label: 'Promo?',\r\n//         type: 'boolean',\r\n//         operators: ['equal'],\r\n//         valueSources: ['value'],\r\n//     },\r\n//   }\r\n// };\r\n \r\n// You can load query value from your backend storage (for saving see `Query.onChange()`)\r\nconst queryValue = {\"id\": QbUtils.uuid(), \"type\": \"group\"};\r\n \r\n \r\nexport default class DemoQueryBuilder extends Component {\r\n    constructor(props){\r\n      super(props);\r\n      this.state = {\r\n        tree: '',\r\n        config: {\r\n            ...InitialConfig,\r\n  fields: {\r\n    qty: {\r\n        label: 'Qty',\r\n        type: 'number',\r\n        fieldSettings: {\r\n            min: 0,\r\n        },\r\n        valueSources: ['value'],\r\n        preferWidgets: ['number'],\r\n    },\r\n    price: {\r\n        label: 'Price',\r\n        type: 'number',\r\n        valueSources: ['value'],\r\n        fieldSettings: {\r\n            min: 10,\r\n            max: 100,\r\n        },\r\n        preferWidgets: ['slider', 'rangeslider'],\r\n    },\r\n    color: {\r\n        label: 'Color',\r\n        type: 'select',\r\n        valueSources: ['value'],\r\n        fieldSettings: {\r\n          listValues: [\r\n            { value: 'yellow', title: 'Yellow' },\r\n            { value: 'green', title: 'Green' },\r\n            { value: 'orange', title: 'Orange' }\r\n          ],\r\n        }\r\n    },\r\n    is_promotion: {\r\n        label: 'Promo?',\r\n        type: 'boolean',\r\n        operators: ['equal'],\r\n        valueSources: ['value'],\r\n    },\r\n  }\r\n        },\r\n        schema:[],\r\n        data:[]\r\n      };\r\n    }  \r\n    componentWillMount() {\r\n     \r\n     this.setState({\r\n       tree:QbUtils.checkTree(QbUtils.loadTree(queryValue), this.state.config),\r\n      \r\n     })\r\n      \r\n     }\r\n  \r\n   \r\n    componentDidUpdate(sss, prev){\r\n      if(prev.data!==this.props.data){\r\n        this.setState({\r\n            schema:this.props.schema,\r\n            data:this.props.data\r\n        })\r\n        const obj = {} \r\n        \r\n        for(const key of this.state.schema){\r\n          let arr = []\r\n          for(let i=0;i<this.state.data.length;i++){\r\n              if(Array.isArray(this.state.data[i][key])){\r\n                for(const cuy of this.state.data[i][key]){\r\n                  if(arr.indexOf(cuy) !== -1 || cuy==\"\"){\r\n\r\n                  }else{\r\n                    arr.push({value:cuy, title:cuy})\r\n                  }\r\n                }\r\n              }\r\n              else if(i==0 || (this.state.data[i-1][key]!=this.state.data[i][key] && this.state.data[i][key]!=\"\" )){\r\n                \r\n                  arr.push({value: this.state.data[i][key],title:this.state.data[i][key]})\r\n\r\n              }\r\n            \r\n            \r\n          }\r\n          if(this.props.name==\"user\" || this.props.name==\"role\"){\r\n           \r\n              obj[key] = {\r\n                  label: key,\r\n                  type: 'select',\r\n                  valueSources: arr,\r\n                  fieldSettings: {\r\n                    listValues: Array.from(new Set(arr.map(a => a.value)))\r\n                    .map(value => {\r\n                      return arr.find(a => a.value === value)\r\n                    })\r\n                  }\r\n              \r\n              }\r\n          }else{\r\n            obj[key] = {\r\n              label: key,\r\n              type: 'select',\r\n              valueSources: ['value'],\r\n              fieldSettings: {\r\n                listValues: Array.from(new Set(arr.map(a => a.value)))\r\n                .map(value => {\r\n                  return arr.find(a => a.value === value)\r\n                })\r\n              }\r\n          \r\n          }\r\n          }\r\n         \r\n          \r\n        }\r\n       \r\n        this.setState({\r\n          config:  {\r\n            ...InitialConfig,\r\n            fields:obj\r\n              \r\n            \r\n          }\r\n        })\r\n         \r\n          \r\n        \r\n        \r\n      }\r\n    }\r\n    cari=()=>{\r\n      let Stringsql = QbUtils.sqlFormat(this.state.tree, this.state.config);\r\n      let jsonString  = QbUtils.jsonLogicFormat(this.state.tree, this.state.config)\r\n      let token = localStorage.getItem('id_token');\r\n      console.log(JSON.stringify(jsonString.logic))\r\n  \r\n   if(this.props.name==\"user\"){\r\n\r\n   \r\n    \r\n       \r\n    //  alert(data.data.data)\r\n      this.props.onClick(jsonString.logic)\r\n     \r\n       // this.setState({\r\n       //   dataSet: data.data.data\r\n       // });\r\n     \r\n    \r\n     \r\n   }else if(this.props.name==\"group\"){\r\n    \r\n     this.props.onClick(Stringsql)\r\n      // this.setState({\r\n      //   dataSet: data.data.data\r\n      // });\r\n\r\n    \r\n   }else if(this.props.name==\"role\"){\r\n    API.post(\"get_role\",{\r\n      key: token,\r\n      ficos: Stringsql,\r\n      info_data:'all'\r\n    }\r\n    \r\n    ).then(data => {\r\n      \r\n    \r\n     this.props.onClick(data.data.data)\r\n      // this.setState({\r\n      //   dataSet: data.data.data\r\n      // });\r\n    \r\n    })\r\n    \r\n   }else if(this.props.name==\"depart\"){\r\n   \r\n     this.props.onClick(Stringsql)\r\n      // this.setState({\r\n      //   dataSet: data.data.data\r\n      // });\r\n    \r\n    \r\n    \r\n   }else if(this.props.name==\"branch\"){\r\n    API.post(\"/credential_service/get_branch\",{\r\n      key: token,\r\n      ficos: Stringsql,\r\n      info_data:'all'\r\n    }\r\n    \r\n    ).then(data => {\r\n      \r\n     console.log(data)\r\n     this.props.onClick(data.data.data)\r\n      // this.setState({\r\n      //   dataSet: data.data.data\r\n      // });\r\n    \r\n    })\r\n    \r\n   }\r\n\r\n      \r\n    }\r\n    render = () => (\r\n      <div style={{marginTop:'5px'}}>\r\n        <Button style={{marginLeft:'13px'}} className=\"btn-pill\" color=\"warning\" onClick={this.reset}>Reset</Button>\r\n        <Button className=\"btn-pill\" color=\"primary\" onClick={this.cari}>Cari</Button>\r\n        <Query\r\n            \r\n            {...this.state.config} \r\n            value={this.state.tree}\r\n            onChange={this.onChange}\r\n            renderBuilder={this.renderBuilder}\r\n        />\r\n        {/* {this.renderResult(this.state)} */}\r\n      </div>\r\n    )\r\n    reset = ()=>{\r\n        this.setState({\r\n         \r\n              tree: QbUtils.checkTree(QbUtils.loadTree(queryValue), this.state.config), \r\n        \r\n        })\r\n    }\r\n    renderBuilder = (props) => (\r\n      <div className=\"query-builder-container\" style={{marginTop: '-10px', marginBottom:'0px'}}>\r\n        <div className=\"query-builder\">\r\n            <Builder {...props} />\r\n        </div>\r\n      </div>\r\n    )\r\n \r\n    // renderResult = ({tree: immutableTree, config}) => (\r\n    //   // <div className=\"query-builder-result\">\r\n    //   //     <div>Query string: <pre>{JSON.stringify(QbUtils.queryString(immutableTree, config))}</pre></div>\r\n    //   //     <div>MongoDb query: <pre>{JSON.stringify(QbUtils.mongodbFormat(immutableTree, config))}</pre></div>\r\n    //   //     <div>SQL where: <pre>{JSON.stringify(QbUtils.sqlFormat(immutableTree, config))}</pre></div>\r\n    //   //     <div>JsonLogic: <pre>{JSON.stringify(QbUtils.jsonLogicFormat(immutableTree, config))}</pre></div>\r\n    //   // </div>\r\n    //   JSON.stringify(QbUtils.sqlFormat(immutableTree, config))\r\n    // )\r\n    \r\n    onChange = (immutableTree, config) => {\r\n      // Tip: for better performance you can apply `throttle` - see `examples/demo`\r\n      this.setState({tree: immutableTree, config: config});\r\n \r\n      // const jsonTree = QbUtils.getTree(immutableTree);\r\n     \r\n      // `jsonTree` can be saved to backend, and later loaded to `queryValue`\r\n    }\r\n}","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport * as React from 'react';\nimport clsx from 'clsx';\nimport PropTypes from 'prop-types';\nimport { fade, withStyles } from '@material-ui/core/styles';\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the root element. */\n    root: {\n      display: 'block',\n      // Create a \"on paper\" color with sufficient contrast retaining the color\n      backgroundColor: fade(theme.palette.text.primary, theme.palette.type === 'light' ? 0.11 : 0.13),\n      height: '1.2em'\n    },\n\n    /* Styles applied to the root element if `variant=\"text\"`. */\n    text: {\n      marginTop: 0,\n      marginBottom: 0,\n      height: 'auto',\n      transformOrigin: '0 60%',\n      transform: 'scale(1, 0.60)',\n      borderRadius: theme.shape.borderRadius,\n      '&:empty:before': {\n        content: '\"\\\\00a0\"'\n      }\n    },\n\n    /* Styles applied to the root element if `variant=\"rect\"`. */\n    rect: {},\n\n    /* Styles applied to the root element if `variant=\"circle\"`. */\n    circle: {\n      borderRadius: '50%'\n    },\n\n    /* Styles applied to the root element if `animation=\"pulse\"`. */\n    pulse: {\n      animation: '$pulse 1.5s ease-in-out 0.5s infinite'\n    },\n    '@keyframes pulse': {\n      '0%': {\n        opacity: 1\n      },\n      '50%': {\n        opacity: 0.4\n      },\n      '100%': {\n        opacity: 1\n      }\n    },\n\n    /* Styles applied to the root element if `animation=\"wave\"`. */\n    wave: {\n      position: 'relative',\n      overflow: 'hidden',\n      '&::after': {\n        animation: '$wave 1.6s linear 0.5s infinite',\n        background: \"linear-gradient(90deg, transparent, \".concat(theme.palette.action.hover, \", transparent)\"),\n        content: '\"\"',\n        position: 'absolute',\n        transform: 'translateX(-100%)',\n        // Avoid flash during server-side hydration\n        bottom: 0,\n        left: 0,\n        right: 0,\n        top: 0\n      }\n    },\n    '@keyframes wave': {\n      '0%': {\n        transform: 'translateX(-100%)'\n      },\n      '60%': {\n        // +0.5s of delay between each loop\n        transform: 'translateX(100%)'\n      },\n      '100%': {\n        transform: 'translateX(100%)'\n      }\n    },\n\n    /* Styles applied when the component is passed children. */\n    withChildren: {\n      '& > *': {\n        visibility: 'hidden'\n      }\n    },\n\n    /* Styles applied when the component is passed children and no width. */\n    fitContent: {\n      maxWidth: 'fit-content'\n    },\n\n    /* Styles applied when the component is passed children and no height. */\n    heightAuto: {\n      height: 'auto'\n    }\n  };\n};\nvar Skeleton = /*#__PURE__*/React.forwardRef(function Skeleton(props, ref) {\n  var _props$animation = props.animation,\n      animation = _props$animation === void 0 ? 'pulse' : _props$animation,\n      classes = props.classes,\n      className = props.className,\n      _props$component = props.component,\n      Component = _props$component === void 0 ? 'span' : _props$component,\n      height = props.height,\n      _props$variant = props.variant,\n      variant = _props$variant === void 0 ? 'text' : _props$variant,\n      width = props.width,\n      other = _objectWithoutProperties(props, [\"animation\", \"classes\", \"className\", \"component\", \"height\", \"variant\", \"width\"]);\n\n  var hasChildren = Boolean(other.children);\n  return /*#__PURE__*/React.createElement(Component, _extends({\n    ref: ref,\n    className: clsx(classes.root, classes[variant], className, hasChildren && [classes.withChildren, !width && classes.fitContent, !height && classes.heightAuto], animation !== false && classes[animation])\n  }, other, {\n    style: _extends({\n      width: width,\n      height: height\n    }, other.style)\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? Skeleton.propTypes = {\n  /**\n   * The animation.\n   * If `false` the animation effect is disabled.\n   */\n  animation: PropTypes.oneOf(['pulse', 'wave', false]),\n\n  /**\n   * Optional children to infer width and height from.\n   */\n  children: PropTypes.node,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object.isRequired,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * The component used for the root node.\n   * Either a string to use a HTML element or a component.\n   */\n  component: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .elementType,\n\n  /**\n   * Height of the skeleton.\n   * Useful when you don't want to adapt the skeleton to a text element but for instance a card.\n   */\n  height: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n\n  /**\n   * The type of content that will be rendered.\n   */\n  variant: PropTypes.oneOf(['text', 'rect', 'circle']),\n\n  /**\n   * Width of the skeleton.\n   * Useful when the skeleton is inside an inline element with no width of its own.\n   */\n  width: PropTypes.oneOfType([PropTypes.number, PropTypes.string])\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiSkeleton'\n})(Skeleton);","import _extends from \"@babel/runtime/helpers/esm/extends\";\nimport _slicedToArray from \"@babel/runtime/helpers/esm/slicedToArray\";\nimport _objectWithoutProperties from \"@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport _defineProperty from \"@babel/runtime/helpers/esm/defineProperty\";\nimport * as React from 'react';\nimport * as ReactDOM from 'react-dom';\nimport PropTypes from 'prop-types';\nimport clsx from 'clsx';\nimport { deepmerge, elementAcceptingRef } from '@material-ui/utils';\nimport { fade } from '../styles/colorManipulator';\nimport withStyles from '../styles/withStyles';\nimport capitalize from '../utils/capitalize';\nimport Grow from '../Grow';\nimport Popper from '../Popper';\nimport useForkRef from '../utils/useForkRef';\nimport useId from '../utils/unstable_useId';\nimport setRef from '../utils/setRef';\nimport useIsFocusVisible from '../utils/useIsFocusVisible';\nimport useControlled from '../utils/useControlled';\nimport useTheme from '../styles/useTheme';\n\nfunction round(value) {\n  return Math.round(value * 1e5) / 1e5;\n}\n\nfunction arrowGenerator() {\n  return {\n    '&[x-placement*=\"bottom\"] $arrow': {\n      top: 0,\n      left: 0,\n      marginTop: '-0.71em',\n      marginLeft: 4,\n      marginRight: 4,\n      '&::before': {\n        transformOrigin: '0 100%'\n      }\n    },\n    '&[x-placement*=\"top\"] $arrow': {\n      bottom: 0,\n      left: 0,\n      marginBottom: '-0.71em',\n      marginLeft: 4,\n      marginRight: 4,\n      '&::before': {\n        transformOrigin: '100% 0'\n      }\n    },\n    '&[x-placement*=\"right\"] $arrow': {\n      left: 0,\n      marginLeft: '-0.71em',\n      height: '1em',\n      width: '0.71em',\n      marginTop: 4,\n      marginBottom: 4,\n      '&::before': {\n        transformOrigin: '100% 100%'\n      }\n    },\n    '&[x-placement*=\"left\"] $arrow': {\n      right: 0,\n      marginRight: '-0.71em',\n      height: '1em',\n      width: '0.71em',\n      marginTop: 4,\n      marginBottom: 4,\n      '&::before': {\n        transformOrigin: '0 0'\n      }\n    }\n  };\n}\n\nexport var styles = function styles(theme) {\n  return {\n    /* Styles applied to the Popper component. */\n    popper: {\n      zIndex: theme.zIndex.tooltip,\n      pointerEvents: 'none' // disable jss-rtl plugin\n\n    },\n\n    /* Styles applied to the Popper component if `interactive={true}`. */\n    popperInteractive: {\n      pointerEvents: 'auto'\n    },\n\n    /* Styles applied to the Popper component if `arrow={true}`. */\n    popperArrow: arrowGenerator(),\n\n    /* Styles applied to the tooltip (label wrapper) element. */\n    tooltip: {\n      backgroundColor: fade(theme.palette.grey[700], 0.9),\n      borderRadius: theme.shape.borderRadius,\n      color: theme.palette.common.white,\n      fontFamily: theme.typography.fontFamily,\n      padding: '4px 8px',\n      fontSize: theme.typography.pxToRem(10),\n      lineHeight: \"\".concat(round(14 / 10), \"em\"),\n      maxWidth: 300,\n      wordWrap: 'break-word',\n      fontWeight: theme.typography.fontWeightMedium\n    },\n\n    /* Styles applied to the tooltip (label wrapper) element if `arrow={true}`. */\n    tooltipArrow: {\n      position: 'relative',\n      margin: '0'\n    },\n\n    /* Styles applied to the arrow element. */\n    arrow: {\n      overflow: 'hidden',\n      position: 'absolute',\n      width: '1em',\n      height: '0.71em'\n      /* = width / sqrt(2) = (length of the hypotenuse) */\n      ,\n      boxSizing: 'border-box',\n      color: fade(theme.palette.grey[700], 0.9),\n      '&::before': {\n        content: '\"\"',\n        margin: 'auto',\n        display: 'block',\n        width: '100%',\n        height: '100%',\n        backgroundColor: 'currentColor',\n        transform: 'rotate(45deg)'\n      }\n    },\n\n    /* Styles applied to the tooltip (label wrapper) element if the tooltip is opened by touch. */\n    touch: {\n      padding: '8px 16px',\n      fontSize: theme.typography.pxToRem(14),\n      lineHeight: \"\".concat(round(16 / 14), \"em\"),\n      fontWeight: theme.typography.fontWeightRegular\n    },\n\n    /* Styles applied to the tooltip (label wrapper) element if `placement` contains \"left\". */\n    tooltipPlacementLeft: _defineProperty({\n      transformOrigin: 'right center',\n      margin: '0 24px '\n    }, theme.breakpoints.up('sm'), {\n      margin: '0 14px'\n    }),\n\n    /* Styles applied to the tooltip (label wrapper) element if `placement` contains \"right\". */\n    tooltipPlacementRight: _defineProperty({\n      transformOrigin: 'left center',\n      margin: '0 24px'\n    }, theme.breakpoints.up('sm'), {\n      margin: '0 14px'\n    }),\n\n    /* Styles applied to the tooltip (label wrapper) element if `placement` contains \"top\". */\n    tooltipPlacementTop: _defineProperty({\n      transformOrigin: 'center bottom',\n      margin: '24px 0'\n    }, theme.breakpoints.up('sm'), {\n      margin: '14px 0'\n    }),\n\n    /* Styles applied to the tooltip (label wrapper) element if `placement` contains \"bottom\". */\n    tooltipPlacementBottom: _defineProperty({\n      transformOrigin: 'center top',\n      margin: '24px 0'\n    }, theme.breakpoints.up('sm'), {\n      margin: '14px 0'\n    })\n  };\n};\nvar hystersisOpen = false;\nvar hystersisTimer = null;\nexport function testReset() {\n  hystersisOpen = false;\n  clearTimeout(hystersisTimer);\n}\nvar Tooltip = /*#__PURE__*/React.forwardRef(function Tooltip(props, ref) {\n  var _props$arrow = props.arrow,\n      arrow = _props$arrow === void 0 ? false : _props$arrow,\n      children = props.children,\n      classes = props.classes,\n      _props$disableFocusLi = props.disableFocusListener,\n      disableFocusListener = _props$disableFocusLi === void 0 ? false : _props$disableFocusLi,\n      _props$disableHoverLi = props.disableHoverListener,\n      disableHoverListener = _props$disableHoverLi === void 0 ? false : _props$disableHoverLi,\n      _props$disableTouchLi = props.disableTouchListener,\n      disableTouchListener = _props$disableTouchLi === void 0 ? false : _props$disableTouchLi,\n      _props$enterDelay = props.enterDelay,\n      enterDelay = _props$enterDelay === void 0 ? 100 : _props$enterDelay,\n      _props$enterNextDelay = props.enterNextDelay,\n      enterNextDelay = _props$enterNextDelay === void 0 ? 0 : _props$enterNextDelay,\n      _props$enterTouchDela = props.enterTouchDelay,\n      enterTouchDelay = _props$enterTouchDela === void 0 ? 700 : _props$enterTouchDela,\n      idProp = props.id,\n      _props$interactive = props.interactive,\n      interactive = _props$interactive === void 0 ? false : _props$interactive,\n      _props$leaveDelay = props.leaveDelay,\n      leaveDelay = _props$leaveDelay === void 0 ? 0 : _props$leaveDelay,\n      _props$leaveTouchDela = props.leaveTouchDelay,\n      leaveTouchDelay = _props$leaveTouchDela === void 0 ? 1500 : _props$leaveTouchDela,\n      onClose = props.onClose,\n      onOpen = props.onOpen,\n      openProp = props.open,\n      _props$placement = props.placement,\n      placement = _props$placement === void 0 ? 'bottom' : _props$placement,\n      _props$PopperComponen = props.PopperComponent,\n      PopperComponent = _props$PopperComponen === void 0 ? Popper : _props$PopperComponen,\n      PopperProps = props.PopperProps,\n      title = props.title,\n      _props$TransitionComp = props.TransitionComponent,\n      TransitionComponent = _props$TransitionComp === void 0 ? Grow : _props$TransitionComp,\n      TransitionProps = props.TransitionProps,\n      other = _objectWithoutProperties(props, [\"arrow\", \"children\", \"classes\", \"disableFocusListener\", \"disableHoverListener\", \"disableTouchListener\", \"enterDelay\", \"enterNextDelay\", \"enterTouchDelay\", \"id\", \"interactive\", \"leaveDelay\", \"leaveTouchDelay\", \"onClose\", \"onOpen\", \"open\", \"placement\", \"PopperComponent\", \"PopperProps\", \"title\", \"TransitionComponent\", \"TransitionProps\"]);\n\n  var theme = useTheme();\n\n  var _React$useState = React.useState(),\n      childNode = _React$useState[0],\n      setChildNode = _React$useState[1];\n\n  var _React$useState2 = React.useState(null),\n      arrowRef = _React$useState2[0],\n      setArrowRef = _React$useState2[1];\n\n  var ignoreNonTouchEvents = React.useRef(false);\n  var closeTimer = React.useRef();\n  var enterTimer = React.useRef();\n  var leaveTimer = React.useRef();\n  var touchTimer = React.useRef();\n\n  var _useControlled = useControlled({\n    controlled: openProp,\n    default: false,\n    name: 'Tooltip',\n    state: 'open'\n  }),\n      _useControlled2 = _slicedToArray(_useControlled, 2),\n      openState = _useControlled2[0],\n      setOpenState = _useControlled2[1];\n\n  var open = openState;\n\n  if (process.env.NODE_ENV !== 'production') {\n    // eslint-disable-next-line react-hooks/rules-of-hooks\n    var _React$useRef = React.useRef(openProp !== undefined),\n        isControlled = _React$useRef.current; // eslint-disable-next-line react-hooks/rules-of-hooks\n\n\n    React.useEffect(function () {\n      if (childNode && childNode.disabled && !isControlled && title !== '' && childNode.tagName.toLowerCase() === 'button') {\n        console.error(['Material-UI: You are providing a disabled `button` child to the Tooltip component.', 'A disabled element does not fire events.', \"Tooltip needs to listen to the child element's events to display the title.\", '', 'Add a simple wrapper element, such as a `span`.'].join('\\n'));\n      }\n    }, [title, childNode, isControlled]);\n  }\n\n  var id = useId(idProp);\n  React.useEffect(function () {\n    return function () {\n      clearTimeout(closeTimer.current);\n      clearTimeout(enterTimer.current);\n      clearTimeout(leaveTimer.current);\n      clearTimeout(touchTimer.current);\n    };\n  }, []);\n\n  var handleOpen = function handleOpen(event) {\n    clearTimeout(hystersisTimer);\n    hystersisOpen = true; // The mouseover event will trigger for every nested element in the tooltip.\n    // We can skip rerendering when the tooltip is already open.\n    // We are using the mouseover event instead of the mouseenter event to fix a hide/show issue.\n\n    setOpenState(true);\n\n    if (onOpen) {\n      onOpen(event);\n    }\n  };\n\n  var handleEnter = function handleEnter() {\n    var forward = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : true;\n    return function (event) {\n      var childrenProps = children.props;\n\n      if (event.type === 'mouseover' && childrenProps.onMouseOver && forward) {\n        childrenProps.onMouseOver(event);\n      }\n\n      if (ignoreNonTouchEvents.current && event.type !== 'touchstart') {\n        return;\n      } // Remove the title ahead of time.\n      // We don't want to wait for the next render commit.\n      // We would risk displaying two tooltips at the same time (native + this one).\n\n\n      if (childNode) {\n        childNode.removeAttribute('title');\n      }\n\n      clearTimeout(enterTimer.current);\n      clearTimeout(leaveTimer.current);\n\n      if (enterDelay || hystersisOpen && enterNextDelay) {\n        event.persist();\n        enterTimer.current = setTimeout(function () {\n          handleOpen(event);\n        }, hystersisOpen ? enterNextDelay : enterDelay);\n      } else {\n        handleOpen(event);\n      }\n    };\n  };\n\n  var _useIsFocusVisible = useIsFocusVisible(),\n      isFocusVisible = _useIsFocusVisible.isFocusVisible,\n      onBlurVisible = _useIsFocusVisible.onBlurVisible,\n      focusVisibleRef = _useIsFocusVisible.ref;\n\n  var _React$useState3 = React.useState(false),\n      childIsFocusVisible = _React$useState3[0],\n      setChildIsFocusVisible = _React$useState3[1];\n\n  var handleBlur = function handleBlur() {\n    if (childIsFocusVisible) {\n      setChildIsFocusVisible(false);\n      onBlurVisible();\n    }\n  };\n\n  var handleFocus = function handleFocus() {\n    var forward = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : true;\n    return function (event) {\n      // Workaround for https://github.com/facebook/react/issues/7769\n      // The autoFocus of React might trigger the event before the componentDidMount.\n      // We need to account for this eventuality.\n      if (!childNode) {\n        setChildNode(event.currentTarget);\n      }\n\n      if (isFocusVisible(event)) {\n        setChildIsFocusVisible(true);\n        handleEnter()(event);\n      }\n\n      var childrenProps = children.props;\n\n      if (childrenProps.onFocus && forward) {\n        childrenProps.onFocus(event);\n      }\n    };\n  };\n\n  var handleClose = function handleClose(event) {\n    clearTimeout(hystersisTimer);\n    hystersisTimer = setTimeout(function () {\n      hystersisOpen = false;\n    }, 800 + leaveDelay);\n    setOpenState(false);\n\n    if (onClose) {\n      onClose(event);\n    }\n\n    clearTimeout(closeTimer.current);\n    closeTimer.current = setTimeout(function () {\n      ignoreNonTouchEvents.current = false;\n    }, theme.transitions.duration.shortest);\n  };\n\n  var handleLeave = function handleLeave() {\n    var forward = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : true;\n    return function (event) {\n      var childrenProps = children.props;\n\n      if (event.type === 'blur') {\n        if (childrenProps.onBlur && forward) {\n          childrenProps.onBlur(event);\n        }\n\n        handleBlur();\n      }\n\n      if (event.type === 'mouseleave' && childrenProps.onMouseLeave && event.currentTarget === childNode) {\n        childrenProps.onMouseLeave(event);\n      }\n\n      clearTimeout(enterTimer.current);\n      clearTimeout(leaveTimer.current);\n      event.persist();\n      leaveTimer.current = setTimeout(function () {\n        handleClose(event);\n      }, leaveDelay);\n    };\n  };\n\n  var detectTouchStart = function detectTouchStart(event) {\n    ignoreNonTouchEvents.current = true;\n    var childrenProps = children.props;\n\n    if (childrenProps.onTouchStart) {\n      childrenProps.onTouchStart(event);\n    }\n  };\n\n  var handleTouchStart = function handleTouchStart(event) {\n    detectTouchStart(event);\n    clearTimeout(leaveTimer.current);\n    clearTimeout(closeTimer.current);\n    clearTimeout(touchTimer.current);\n    event.persist();\n    touchTimer.current = setTimeout(function () {\n      handleEnter()(event);\n    }, enterTouchDelay);\n  };\n\n  var handleTouchEnd = function handleTouchEnd(event) {\n    if (children.props.onTouchEnd) {\n      children.props.onTouchEnd(event);\n    }\n\n    clearTimeout(touchTimer.current);\n    clearTimeout(leaveTimer.current);\n    event.persist();\n    leaveTimer.current = setTimeout(function () {\n      handleClose(event);\n    }, leaveTouchDelay);\n  };\n\n  var handleUseRef = useForkRef(setChildNode, ref);\n  var handleFocusRef = useForkRef(focusVisibleRef, handleUseRef); // can be removed once we drop support for non ref forwarding class components\n\n  var handleOwnRef = React.useCallback(function (instance) {\n    // #StrictMode ready\n    setRef(handleFocusRef, ReactDOM.findDOMNode(instance));\n  }, [handleFocusRef]);\n  var handleRef = useForkRef(children.ref, handleOwnRef); // There is no point in displaying an empty tooltip.\n\n  if (title === '') {\n    open = false;\n  } // For accessibility and SEO concerns, we render the title to the DOM node when\n  // the tooltip is hidden. However, we have made a tradeoff when\n  // `disableHoverListener` is set. This title logic is disabled.\n  // It's allowing us to keep the implementation size minimal.\n  // We are open to change the tradeoff.\n\n\n  var shouldShowNativeTitle = !open && !disableHoverListener;\n\n  var childrenProps = _extends({\n    'aria-describedby': open ? id : null,\n    title: shouldShowNativeTitle && typeof title === 'string' ? title : null\n  }, other, children.props, {\n    className: clsx(other.className, children.props.className),\n    onTouchStart: detectTouchStart,\n    ref: handleRef\n  });\n\n  var interactiveWrapperListeners = {};\n\n  if (!disableTouchListener) {\n    childrenProps.onTouchStart = handleTouchStart;\n    childrenProps.onTouchEnd = handleTouchEnd;\n  }\n\n  if (!disableHoverListener) {\n    childrenProps.onMouseOver = handleEnter();\n    childrenProps.onMouseLeave = handleLeave();\n\n    if (interactive) {\n      interactiveWrapperListeners.onMouseOver = handleEnter(false);\n      interactiveWrapperListeners.onMouseLeave = handleLeave(false);\n    }\n  }\n\n  if (!disableFocusListener) {\n    childrenProps.onFocus = handleFocus();\n    childrenProps.onBlur = handleLeave();\n\n    if (interactive) {\n      interactiveWrapperListeners.onFocus = handleFocus(false);\n      interactiveWrapperListeners.onBlur = handleLeave(false);\n    }\n  }\n\n  if (process.env.NODE_ENV !== 'production') {\n    if (children.props.title) {\n      console.error(['Material-UI: You have provided a `title` prop to the child of <Tooltip />.', \"Remove this title prop `\".concat(children.props.title, \"` or the Tooltip component.\")].join('\\n'));\n    }\n  }\n\n  var mergedPopperProps = React.useMemo(function () {\n    return deepmerge({\n      popperOptions: {\n        modifiers: {\n          arrow: {\n            enabled: Boolean(arrowRef),\n            element: arrowRef\n          }\n        }\n      }\n    }, PopperProps);\n  }, [arrowRef, PopperProps]);\n  return /*#__PURE__*/React.createElement(React.Fragment, null, /*#__PURE__*/React.cloneElement(children, childrenProps), /*#__PURE__*/React.createElement(PopperComponent, _extends({\n    className: clsx(classes.popper, interactive && classes.popperInteractive, arrow && classes.popperArrow),\n    placement: placement,\n    anchorEl: childNode,\n    open: childNode ? open : false,\n    id: childrenProps['aria-describedby'],\n    transition: true\n  }, interactiveWrapperListeners, mergedPopperProps), function (_ref) {\n    var placementInner = _ref.placement,\n        TransitionPropsInner = _ref.TransitionProps;\n    return /*#__PURE__*/React.createElement(TransitionComponent, _extends({\n      timeout: theme.transitions.duration.shorter\n    }, TransitionPropsInner, TransitionProps), /*#__PURE__*/React.createElement(\"div\", {\n      className: clsx(classes.tooltip, classes[\"tooltipPlacement\".concat(capitalize(placementInner.split('-')[0]))], ignoreNonTouchEvents.current && classes.touch, arrow && classes.tooltipArrow)\n    }, title, arrow ? /*#__PURE__*/React.createElement(\"span\", {\n      className: classes.arrow,\n      ref: setArrowRef\n    }) : null));\n  }));\n});\nprocess.env.NODE_ENV !== \"production\" ? Tooltip.propTypes = {\n  // ----------------------------- Warning --------------------------------\n  // | These PropTypes are generated from the TypeScript type definitions |\n  // |     To update them edit the d.ts file and run \"yarn proptypes\"     |\n  // ----------------------------------------------------------------------\n\n  /**\n   * If `true`, adds an arrow to the tooltip.\n   */\n  arrow: PropTypes.bool,\n\n  /**\n   * Tooltip reference element.\n   */\n  children: elementAcceptingRef.isRequired,\n\n  /**\n   * Override or extend the styles applied to the component.\n   * See [CSS API](#css) below for more details.\n   */\n  classes: PropTypes.object,\n\n  /**\n   * @ignore\n   */\n  className: PropTypes.string,\n\n  /**\n   * Do not respond to focus events.\n   */\n  disableFocusListener: PropTypes.bool,\n\n  /**\n   * Do not respond to hover events.\n   */\n  disableHoverListener: PropTypes.bool,\n\n  /**\n   * Do not respond to long press touch events.\n   */\n  disableTouchListener: PropTypes.bool,\n\n  /**\n   * The number of milliseconds to wait before showing the tooltip.\n   * This prop won't impact the enter touch delay (`enterTouchDelay`).\n   */\n  enterDelay: PropTypes.number,\n\n  /**\n   * The number of milliseconds to wait before showing the tooltip when one was already recently opened.\n   */\n  enterNextDelay: PropTypes.number,\n\n  /**\n   * The number of milliseconds a user must touch the element before showing the tooltip.\n   */\n  enterTouchDelay: PropTypes.number,\n\n  /**\n   * This prop is used to help implement the accessibility logic.\n   * If you don't provide this prop. It falls back to a randomly generated id.\n   */\n  id: PropTypes.string,\n\n  /**\n   * Makes a tooltip interactive, i.e. will not close when the user\n   * hovers over the tooltip before the `leaveDelay` is expired.\n   */\n  interactive: PropTypes.bool,\n\n  /**\n   * The number of milliseconds to wait before hiding the tooltip.\n   * This prop won't impact the leave touch delay (`leaveTouchDelay`).\n   */\n  leaveDelay: PropTypes.number,\n\n  /**\n   * The number of milliseconds after the user stops touching an element before hiding the tooltip.\n   */\n  leaveTouchDelay: PropTypes.number,\n\n  /**\n   * Callback fired when the component requests to be closed.\n   *\n   * @param {object} event The event source of the callback.\n   */\n  onClose: PropTypes.func,\n\n  /**\n   * Callback fired when the component requests to be open.\n   *\n   * @param {object} event The event source of the callback.\n   */\n  onOpen: PropTypes.func,\n\n  /**\n   * If `true`, the tooltip is shown.\n   */\n  open: PropTypes.bool,\n\n  /**\n   * Tooltip placement.\n   */\n  placement: PropTypes.oneOf(['bottom-end', 'bottom-start', 'bottom', 'left-end', 'left-start', 'left', 'right-end', 'right-start', 'right', 'top-end', 'top-start', 'top']),\n\n  /**\n   * The component used for the popper.\n   */\n  PopperComponent: PropTypes.elementType,\n\n  /**\n   * Props applied to the [`Popper`](/api/popper/) element.\n   */\n  PopperProps: PropTypes.object,\n\n  /**\n   * Tooltip title. Zero-length titles string are never displayed.\n   */\n  title: PropTypes\n  /* @typescript-to-proptypes-ignore */\n  .node.isRequired,\n\n  /**\n   * The component used for the transition.\n   * [Follow this guide](/components/transitions/#transitioncomponent-prop) to learn more about the requirements for this component.\n   */\n  TransitionComponent: PropTypes.elementType,\n\n  /**\n   * Props applied to the [`Transition`](http://reactcommunity.org/react-transition-group/transition#Transition-props) element.\n   */\n  TransitionProps: PropTypes.object\n} : void 0;\nexport default withStyles(styles, {\n  name: 'MuiTooltip',\n  flip: false\n})(Tooltip);"],"sourceRoot":""}